// AUTOGENERATED

package client

import (
	"encoding/json"
	"fmt"
)

// UnmarshalAuthenticationCodeType parses the JSON-encoded data and return it as AuthenticationCodeType object.
func UnmarshalAuthenticationCodeType(data json.RawMessage) (AuthenticationCodeType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeAuthenticationCodeTypeTelegramMessage:
		return UnmarshalAuthenticationCodeTypeTelegramMessage(data)

	case TypeAuthenticationCodeTypeSms:
		return UnmarshalAuthenticationCodeTypeSms(data)

	case TypeAuthenticationCodeTypeCall:
		return UnmarshalAuthenticationCodeTypeCall(data)

	case TypeAuthenticationCodeTypeFlashCall:
		return UnmarshalAuthenticationCodeTypeFlashCall(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalAuthorizationState parses the JSON-encoded data and return it as AuthorizationState object.
func UnmarshalAuthorizationState(data json.RawMessage) (AuthorizationState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeAuthorizationStateWaitTdlibParameters:
		return UnmarshalAuthorizationStateWaitTdlibParameters(data)

	case TypeAuthorizationStateWaitEncryptionKey:
		return UnmarshalAuthorizationStateWaitEncryptionKey(data)

	case TypeAuthorizationStateWaitPhoneNumber:
		return UnmarshalAuthorizationStateWaitPhoneNumber(data)

	case TypeAuthorizationStateWaitCode:
		return UnmarshalAuthorizationStateWaitCode(data)

	case TypeAuthorizationStateWaitPassword:
		return UnmarshalAuthorizationStateWaitPassword(data)

	case TypeAuthorizationStateReady:
		return UnmarshalAuthorizationStateReady(data)

	case TypeAuthorizationStateLoggingOut:
		return UnmarshalAuthorizationStateLoggingOut(data)

	case TypeAuthorizationStateClosing:
		return UnmarshalAuthorizationStateClosing(data)

	case TypeAuthorizationStateClosed:
		return UnmarshalAuthorizationStateClosed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputFile parses the JSON-encoded data and return it as InputFile object.
func UnmarshalInputFile(data json.RawMessage) (InputFile, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputFileID:
		return UnmarshalInputFileID(data)

	case TypeInputFileRemote:
		return UnmarshalInputFileRemote(data)

	case TypeInputFileLocal:
		return UnmarshalInputFileLocal(data)

	case TypeInputFileGenerated:
		return UnmarshalInputFileGenerated(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalMaskPoint parses the JSON-encoded data and return it as MaskPoint object.
func UnmarshalMaskPoint(data json.RawMessage) (MaskPoint, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeMaskPointForehead:
		return UnmarshalMaskPointForehead(data)

	case TypeMaskPointEyes:
		return UnmarshalMaskPointEyes(data)

	case TypeMaskPointMouth:
		return UnmarshalMaskPointMouth(data)

	case TypeMaskPointChin:
		return UnmarshalMaskPointChin(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalLinkState parses the JSON-encoded data and return it as LinkState object.
func UnmarshalLinkState(data json.RawMessage) (LinkState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeLinkStateNone:
		return UnmarshalLinkStateNone(data)

	case TypeLinkStateKnowsPhoneNumber:
		return UnmarshalLinkStateKnowsPhoneNumber(data)

	case TypeLinkStateIsContact:
		return UnmarshalLinkStateIsContact(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalUserType parses the JSON-encoded data and return it as UserType object.
func UnmarshalUserType(data json.RawMessage) (UserType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeUserTypeRegular:
		return UnmarshalUserTypeRegular(data)

	case TypeUserTypeDeleted:
		return UnmarshalUserTypeDeleted(data)

	case TypeUserTypeBot:
		return UnmarshalUserTypeBot(data)

	case TypeUserTypeUnknown:
		return UnmarshalUserTypeUnknown(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatMemberStatus parses the JSON-encoded data and return it as ChatMemberStatus object.
func UnmarshalChatMemberStatus(data json.RawMessage) (ChatMemberStatus, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatMemberStatusCreator:
		return UnmarshalChatMemberStatusCreator(data)

	case TypeChatMemberStatusAdministrator:
		return UnmarshalChatMemberStatusAdministrator(data)

	case TypeChatMemberStatusMember:
		return UnmarshalChatMemberStatusMember(data)

	case TypeChatMemberStatusRestricted:
		return UnmarshalChatMemberStatusRestricted(data)

	case TypeChatMemberStatusLeft:
		return UnmarshalChatMemberStatusLeft(data)

	case TypeChatMemberStatusBanned:
		return UnmarshalChatMemberStatusBanned(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatMembersFilter parses the JSON-encoded data and return it as ChatMembersFilter object.
func UnmarshalChatMembersFilter(data json.RawMessage) (ChatMembersFilter, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatMembersFilterAdministrators:
		return UnmarshalChatMembersFilterAdministrators(data)

	case TypeChatMembersFilterMembers:
		return UnmarshalChatMembersFilterMembers(data)

	case TypeChatMembersFilterRestricted:
		return UnmarshalChatMembersFilterRestricted(data)

	case TypeChatMembersFilterBanned:
		return UnmarshalChatMembersFilterBanned(data)

	case TypeChatMembersFilterBots:
		return UnmarshalChatMembersFilterBots(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalSupergroupMembersFilter parses the JSON-encoded data and return it as SupergroupMembersFilter object.
func UnmarshalSupergroupMembersFilter(data json.RawMessage) (SupergroupMembersFilter, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeSupergroupMembersFilterRecent:
		return UnmarshalSupergroupMembersFilterRecent(data)

	case TypeSupergroupMembersFilterAdministrators:
		return UnmarshalSupergroupMembersFilterAdministrators(data)

	case TypeSupergroupMembersFilterSearch:
		return UnmarshalSupergroupMembersFilterSearch(data)

	case TypeSupergroupMembersFilterRestricted:
		return UnmarshalSupergroupMembersFilterRestricted(data)

	case TypeSupergroupMembersFilterBanned:
		return UnmarshalSupergroupMembersFilterBanned(data)

	case TypeSupergroupMembersFilterBots:
		return UnmarshalSupergroupMembersFilterBots(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalSecretChatState parses the JSON-encoded data and return it as SecretChatState object.
func UnmarshalSecretChatState(data json.RawMessage) (SecretChatState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeSecretChatStatePending:
		return UnmarshalSecretChatStatePending(data)

	case TypeSecretChatStateReady:
		return UnmarshalSecretChatStateReady(data)

	case TypeSecretChatStateClosed:
		return UnmarshalSecretChatStateClosed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalMessageForwardInfo parses the JSON-encoded data and return it as MessageForwardInfo object.
func UnmarshalMessageForwardInfo(data json.RawMessage) (MessageForwardInfo, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeMessageForwardedFromUser:
		return UnmarshalMessageForwardedFromUser(data)

	case TypeMessageForwardedPost:
		return UnmarshalMessageForwardedPost(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalMessageSendingState parses the JSON-encoded data and return it as MessageSendingState object.
func UnmarshalMessageSendingState(data json.RawMessage) (MessageSendingState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeMessageSendingStatePending:
		return UnmarshalMessageSendingStatePending(data)

	case TypeMessageSendingStateFailed:
		return UnmarshalMessageSendingStateFailed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalNotificationSettingsScope parses the JSON-encoded data and return it as NotificationSettingsScope object.
func UnmarshalNotificationSettingsScope(data json.RawMessage) (NotificationSettingsScope, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeNotificationSettingsScopePrivateChats:
		return UnmarshalNotificationSettingsScopePrivateChats(data)

	case TypeNotificationSettingsScopeGroupChats:
		return UnmarshalNotificationSettingsScopeGroupChats(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatType parses the JSON-encoded data and return it as ChatType object.
func UnmarshalChatType(data json.RawMessage) (ChatType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatTypePrivate:
		return UnmarshalChatTypePrivate(data)

	case TypeChatTypeBasicGroup:
		return UnmarshalChatTypeBasicGroup(data)

	case TypeChatTypeSupergroup:
		return UnmarshalChatTypeSupergroup(data)

	case TypeChatTypeSecret:
		return UnmarshalChatTypeSecret(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalKeyboardButtonType parses the JSON-encoded data and return it as KeyboardButtonType object.
func UnmarshalKeyboardButtonType(data json.RawMessage) (KeyboardButtonType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeKeyboardButtonTypeText:
		return UnmarshalKeyboardButtonTypeText(data)

	case TypeKeyboardButtonTypeRequestPhoneNumber:
		return UnmarshalKeyboardButtonTypeRequestPhoneNumber(data)

	case TypeKeyboardButtonTypeRequestLocation:
		return UnmarshalKeyboardButtonTypeRequestLocation(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInlineKeyboardButtonType parses the JSON-encoded data and return it as InlineKeyboardButtonType object.
func UnmarshalInlineKeyboardButtonType(data json.RawMessage) (InlineKeyboardButtonType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInlineKeyboardButtonTypeURL:
		return UnmarshalInlineKeyboardButtonTypeURL(data)

	case TypeInlineKeyboardButtonTypeCallback:
		return UnmarshalInlineKeyboardButtonTypeCallback(data)

	case TypeInlineKeyboardButtonTypeCallbackGame:
		return UnmarshalInlineKeyboardButtonTypeCallbackGame(data)

	case TypeInlineKeyboardButtonTypeSwitchInline:
		return UnmarshalInlineKeyboardButtonTypeSwitchInline(data)

	case TypeInlineKeyboardButtonTypeBuy:
		return UnmarshalInlineKeyboardButtonTypeBuy(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalReplyMarkup parses the JSON-encoded data and return it as ReplyMarkup object.
func UnmarshalReplyMarkup(data json.RawMessage) (ReplyMarkup, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeReplyMarkupRemoveKeyboard:
		return UnmarshalReplyMarkupRemoveKeyboard(data)

	case TypeReplyMarkupForceReply:
		return UnmarshalReplyMarkupForceReply(data)

	case TypeReplyMarkupShowKeyboard:
		return UnmarshalReplyMarkupShowKeyboard(data)

	case TypeReplyMarkupInlineKeyboard:
		return UnmarshalReplyMarkupInlineKeyboard(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalRichText parses the JSON-encoded data and return it as RichText object.
func UnmarshalRichText(data json.RawMessage) (RichText, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeRichTextPlain:
		return UnmarshalRichTextPlain(data)

	case TypeRichTextBold:
		return UnmarshalRichTextBold(data)

	case TypeRichTextItalic:
		return UnmarshalRichTextItalic(data)

	case TypeRichTextUnderline:
		return UnmarshalRichTextUnderline(data)

	case TypeRichTextStrikethrough:
		return UnmarshalRichTextStrikethrough(data)

	case TypeRichTextFixed:
		return UnmarshalRichTextFixed(data)

	case TypeRichTextURL:
		return UnmarshalRichTextURL(data)

	case TypeRichTextEmailAddress:
		return UnmarshalRichTextEmailAddress(data)

	case TypeRichTexts:
		return UnmarshalRichTexts(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalPageBlock parses the JSON-encoded data and return it as PageBlock object.
func UnmarshalPageBlock(data json.RawMessage) (PageBlock, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypePageBlockTitle:
		return UnmarshalPageBlockTitle(data)

	case TypePageBlockSubtitle:
		return UnmarshalPageBlockSubtitle(data)

	case TypePageBlockAuthorDate:
		return UnmarshalPageBlockAuthorDate(data)

	case TypePageBlockHeader:
		return UnmarshalPageBlockHeader(data)

	case TypePageBlockSubheader:
		return UnmarshalPageBlockSubheader(data)

	case TypePageBlockParagraph:
		return UnmarshalPageBlockParagraph(data)

	case TypePageBlockPreformatted:
		return UnmarshalPageBlockPreformatted(data)

	case TypePageBlockFooter:
		return UnmarshalPageBlockFooter(data)

	case TypePageBlockDivider:
		return UnmarshalPageBlockDivider(data)

	case TypePageBlockAnchor:
		return UnmarshalPageBlockAnchor(data)

	case TypePageBlockList:
		return UnmarshalPageBlockList(data)

	case TypePageBlockBlockQuote:
		return UnmarshalPageBlockBlockQuote(data)

	case TypePageBlockPullQuote:
		return UnmarshalPageBlockPullQuote(data)

	case TypePageBlockAnimation:
		return UnmarshalPageBlockAnimation(data)

	case TypePageBlockAudio:
		return UnmarshalPageBlockAudio(data)

	case TypePageBlockPhoto:
		return UnmarshalPageBlockPhoto(data)

	case TypePageBlockVideo:
		return UnmarshalPageBlockVideo(data)

	case TypePageBlockCover:
		return UnmarshalPageBlockCover(data)

	case TypePageBlockEmbedded:
		return UnmarshalPageBlockEmbedded(data)

	case TypePageBlockEmbeddedPost:
		return UnmarshalPageBlockEmbeddedPost(data)

	case TypePageBlockCollage:
		return UnmarshalPageBlockCollage(data)

	case TypePageBlockSlideshow:
		return UnmarshalPageBlockSlideshow(data)

	case TypePageBlockChatLink:
		return UnmarshalPageBlockChatLink(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputCredentials parses the JSON-encoded data and return it as InputCredentials object.
func UnmarshalInputCredentials(data json.RawMessage) (InputCredentials, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputCredentialsSaved:
		return UnmarshalInputCredentialsSaved(data)

	case TypeInputCredentialsNew:
		return UnmarshalInputCredentialsNew(data)

	case TypeInputCredentialsAndroidPay:
		return UnmarshalInputCredentialsAndroidPay(data)

	case TypeInputCredentialsApplePay:
		return UnmarshalInputCredentialsApplePay(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalPassportElementType parses the JSON-encoded data and return it as PassportElementType object.
func UnmarshalPassportElementType(data json.RawMessage) (PassportElementType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypePassportElementTypePersonalDetails:
		return UnmarshalPassportElementTypePersonalDetails(data)

	case TypePassportElementTypePassport:
		return UnmarshalPassportElementTypePassport(data)

	case TypePassportElementTypeDriverLicense:
		return UnmarshalPassportElementTypeDriverLicense(data)

	case TypePassportElementTypeIdentityCard:
		return UnmarshalPassportElementTypeIdentityCard(data)

	case TypePassportElementTypeInternalPassport:
		return UnmarshalPassportElementTypeInternalPassport(data)

	case TypePassportElementTypeAddress:
		return UnmarshalPassportElementTypeAddress(data)

	case TypePassportElementTypeUtilityBill:
		return UnmarshalPassportElementTypeUtilityBill(data)

	case TypePassportElementTypeBankStatement:
		return UnmarshalPassportElementTypeBankStatement(data)

	case TypePassportElementTypeRentalAgreement:
		return UnmarshalPassportElementTypeRentalAgreement(data)

	case TypePassportElementTypePassportRegistration:
		return UnmarshalPassportElementTypePassportRegistration(data)

	case TypePassportElementTypeTemporaryRegistration:
		return UnmarshalPassportElementTypeTemporaryRegistration(data)

	case TypePassportElementTypePhoneNumber:
		return UnmarshalPassportElementTypePhoneNumber(data)

	case TypePassportElementTypeEmailAddress:
		return UnmarshalPassportElementTypeEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalPassportElement parses the JSON-encoded data and return it as PassportElement object.
func UnmarshalPassportElement(data json.RawMessage) (PassportElement, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypePassportElementPersonalDetails:
		return UnmarshalPassportElementPersonalDetails(data)

	case TypePassportElementPassport:
		return UnmarshalPassportElementPassport(data)

	case TypePassportElementDriverLicense:
		return UnmarshalPassportElementDriverLicense(data)

	case TypePassportElementIdentityCard:
		return UnmarshalPassportElementIdentityCard(data)

	case TypePassportElementInternalPassport:
		return UnmarshalPassportElementInternalPassport(data)

	case TypePassportElementAddress:
		return UnmarshalPassportElementAddress(data)

	case TypePassportElementUtilityBill:
		return UnmarshalPassportElementUtilityBill(data)

	case TypePassportElementBankStatement:
		return UnmarshalPassportElementBankStatement(data)

	case TypePassportElementRentalAgreement:
		return UnmarshalPassportElementRentalAgreement(data)

	case TypePassportElementPassportRegistration:
		return UnmarshalPassportElementPassportRegistration(data)

	case TypePassportElementTemporaryRegistration:
		return UnmarshalPassportElementTemporaryRegistration(data)

	case TypePassportElementPhoneNumber:
		return UnmarshalPassportElementPhoneNumber(data)

	case TypePassportElementEmailAddress:
		return UnmarshalPassportElementEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputPassportElement parses the JSON-encoded data and return it as InputPassportElement object.
func UnmarshalInputPassportElement(data json.RawMessage) (InputPassportElement, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputPassportElementPersonalDetails:
		return UnmarshalInputPassportElementPersonalDetails(data)

	case TypeInputPassportElementPassport:
		return UnmarshalInputPassportElementPassport(data)

	case TypeInputPassportElementDriverLicense:
		return UnmarshalInputPassportElementDriverLicense(data)

	case TypeInputPassportElementIdentityCard:
		return UnmarshalInputPassportElementIdentityCard(data)

	case TypeInputPassportElementInternalPassport:
		return UnmarshalInputPassportElementInternalPassport(data)

	case TypeInputPassportElementAddress:
		return UnmarshalInputPassportElementAddress(data)

	case TypeInputPassportElementUtilityBill:
		return UnmarshalInputPassportElementUtilityBill(data)

	case TypeInputPassportElementBankStatement:
		return UnmarshalInputPassportElementBankStatement(data)

	case TypeInputPassportElementRentalAgreement:
		return UnmarshalInputPassportElementRentalAgreement(data)

	case TypeInputPassportElementPassportRegistration:
		return UnmarshalInputPassportElementPassportRegistration(data)

	case TypeInputPassportElementTemporaryRegistration:
		return UnmarshalInputPassportElementTemporaryRegistration(data)

	case TypeInputPassportElementPhoneNumber:
		return UnmarshalInputPassportElementPhoneNumber(data)

	case TypeInputPassportElementEmailAddress:
		return UnmarshalInputPassportElementEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalPassportElementErrorSource parses the JSON-encoded data and return it as PassportElementErrorSource object.
func UnmarshalPassportElementErrorSource(data json.RawMessage) (PassportElementErrorSource, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypePassportElementErrorSourceUnspecified:
		return UnmarshalPassportElementErrorSourceUnspecified(data)

	case TypePassportElementErrorSourceDataField:
		return UnmarshalPassportElementErrorSourceDataField(data)

	case TypePassportElementErrorSourceFrontSide:
		return UnmarshalPassportElementErrorSourceFrontSide(data)

	case TypePassportElementErrorSourceReverseSide:
		return UnmarshalPassportElementErrorSourceReverseSide(data)

	case TypePassportElementErrorSourceSelfie:
		return UnmarshalPassportElementErrorSourceSelfie(data)

	case TypePassportElementErrorSourceTranslationFile:
		return UnmarshalPassportElementErrorSourceTranslationFile(data)

	case TypePassportElementErrorSourceTranslationFiles:
		return UnmarshalPassportElementErrorSourceTranslationFiles(data)

	case TypePassportElementErrorSourceFile:
		return UnmarshalPassportElementErrorSourceFile(data)

	case TypePassportElementErrorSourceFiles:
		return UnmarshalPassportElementErrorSourceFiles(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputPassportElementErrorSource parses the JSON-encoded data and return it as InputPassportElementErrorSource object.
func UnmarshalInputPassportElementErrorSource(data json.RawMessage) (InputPassportElementErrorSource, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputPassportElementErrorSourceUnspecified:
		return UnmarshalInputPassportElementErrorSourceUnspecified(data)

	case TypeInputPassportElementErrorSourceDataField:
		return UnmarshalInputPassportElementErrorSourceDataField(data)

	case TypeInputPassportElementErrorSourceFrontSide:
		return UnmarshalInputPassportElementErrorSourceFrontSide(data)

	case TypeInputPassportElementErrorSourceReverseSide:
		return UnmarshalInputPassportElementErrorSourceReverseSide(data)

	case TypeInputPassportElementErrorSourceSelfie:
		return UnmarshalInputPassportElementErrorSourceSelfie(data)

	case TypeInputPassportElementErrorSourceTranslationFile:
		return UnmarshalInputPassportElementErrorSourceTranslationFile(data)

	case TypeInputPassportElementErrorSourceTranslationFiles:
		return UnmarshalInputPassportElementErrorSourceTranslationFiles(data)

	case TypeInputPassportElementErrorSourceFile:
		return UnmarshalInputPassportElementErrorSourceFile(data)

	case TypeInputPassportElementErrorSourceFiles:
		return UnmarshalInputPassportElementErrorSourceFiles(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalMessageContent parses the JSON-encoded data and return it as MessageContent object.
func UnmarshalMessageContent(data json.RawMessage) (MessageContent, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeMessageText:
		return UnmarshalMessageText(data)

	case TypeMessageAnimation:
		return UnmarshalMessageAnimation(data)

	case TypeMessageAudio:
		return UnmarshalMessageAudio(data)

	case TypeMessageDocument:
		return UnmarshalMessageDocument(data)

	case TypeMessagePhoto:
		return UnmarshalMessagePhoto(data)

	case TypeMessageExpiredPhoto:
		return UnmarshalMessageExpiredPhoto(data)

	case TypeMessageSticker:
		return UnmarshalMessageSticker(data)

	case TypeMessageVideo:
		return UnmarshalMessageVideo(data)

	case TypeMessageExpiredVideo:
		return UnmarshalMessageExpiredVideo(data)

	case TypeMessageVideoNote:
		return UnmarshalMessageVideoNote(data)

	case TypeMessageVoiceNote:
		return UnmarshalMessageVoiceNote(data)

	case TypeMessageLocation:
		return UnmarshalMessageLocation(data)

	case TypeMessageVenue:
		return UnmarshalMessageVenue(data)

	case TypeMessageContact:
		return UnmarshalMessageContact(data)

	case TypeMessageGame:
		return UnmarshalMessageGame(data)

	case TypeMessageInvoice:
		return UnmarshalMessageInvoice(data)

	case TypeMessageCall:
		return UnmarshalMessageCall(data)

	case TypeMessageBasicGroupChatCreate:
		return UnmarshalMessageBasicGroupChatCreate(data)

	case TypeMessageSupergroupChatCreate:
		return UnmarshalMessageSupergroupChatCreate(data)

	case TypeMessageChatChangeTitle:
		return UnmarshalMessageChatChangeTitle(data)

	case TypeMessageChatChangePhoto:
		return UnmarshalMessageChatChangePhoto(data)

	case TypeMessageChatDeletePhoto:
		return UnmarshalMessageChatDeletePhoto(data)

	case TypeMessageChatAddMembers:
		return UnmarshalMessageChatAddMembers(data)

	case TypeMessageChatJoinByLink:
		return UnmarshalMessageChatJoinByLink(data)

	case TypeMessageChatDeleteMember:
		return UnmarshalMessageChatDeleteMember(data)

	case TypeMessageChatUpgradeTo:
		return UnmarshalMessageChatUpgradeTo(data)

	case TypeMessageChatUpgradeFrom:
		return UnmarshalMessageChatUpgradeFrom(data)

	case TypeMessagePinMessage:
		return UnmarshalMessagePinMessage(data)

	case TypeMessageScreenshotTaken:
		return UnmarshalMessageScreenshotTaken(data)

	case TypeMessageChatSetTTL:
		return UnmarshalMessageChatSetTTL(data)

	case TypeMessageCustomServiceAction:
		return UnmarshalMessageCustomServiceAction(data)

	case TypeMessageGameScore:
		return UnmarshalMessageGameScore(data)

	case TypeMessagePaymentSuccessful:
		return UnmarshalMessagePaymentSuccessful(data)

	case TypeMessagePaymentSuccessfulBot:
		return UnmarshalMessagePaymentSuccessfulBot(data)

	case TypeMessageContactRegistered:
		return UnmarshalMessageContactRegistered(data)

	case TypeMessageWebsiteConnected:
		return UnmarshalMessageWebsiteConnected(data)

	case TypeMessagePassportDataSent:
		return UnmarshalMessagePassportDataSent(data)

	case TypeMessagePassportDataReceived:
		return UnmarshalMessagePassportDataReceived(data)

	case TypeMessageUnsupported:
		return UnmarshalMessageUnsupported(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalTextEntityType parses the JSON-encoded data and return it as TextEntityType object.
func UnmarshalTextEntityType(data json.RawMessage) (TextEntityType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeTextEntityTypeMention:
		return UnmarshalTextEntityTypeMention(data)

	case TypeTextEntityTypeHashtag:
		return UnmarshalTextEntityTypeHashtag(data)

	case TypeTextEntityTypeCashtag:
		return UnmarshalTextEntityTypeCashtag(data)

	case TypeTextEntityTypeBotCommand:
		return UnmarshalTextEntityTypeBotCommand(data)

	case TypeTextEntityTypeURL:
		return UnmarshalTextEntityTypeURL(data)

	case TypeTextEntityTypeEmailAddress:
		return UnmarshalTextEntityTypeEmailAddress(data)

	case TypeTextEntityTypeBold:
		return UnmarshalTextEntityTypeBold(data)

	case TypeTextEntityTypeItalic:
		return UnmarshalTextEntityTypeItalic(data)

	case TypeTextEntityTypeCode:
		return UnmarshalTextEntityTypeCode(data)

	case TypeTextEntityTypePre:
		return UnmarshalTextEntityTypePre(data)

	case TypeTextEntityTypePreCode:
		return UnmarshalTextEntityTypePreCode(data)

	case TypeTextEntityTypeTextURL:
		return UnmarshalTextEntityTypeTextURL(data)

	case TypeTextEntityTypeMentionName:
		return UnmarshalTextEntityTypeMentionName(data)

	case TypeTextEntityTypePhoneNumber:
		return UnmarshalTextEntityTypePhoneNumber(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputMessageContent parses the JSON-encoded data and return it as InputMessageContent object.
func UnmarshalInputMessageContent(data json.RawMessage) (InputMessageContent, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputMessageText:
		return UnmarshalInputMessageText(data)

	case TypeInputMessageAnimation:
		return UnmarshalInputMessageAnimation(data)

	case TypeInputMessageAudio:
		return UnmarshalInputMessageAudio(data)

	case TypeInputMessageDocument:
		return UnmarshalInputMessageDocument(data)

	case TypeInputMessagePhoto:
		return UnmarshalInputMessagePhoto(data)

	case TypeInputMessageSticker:
		return UnmarshalInputMessageSticker(data)

	case TypeInputMessageVideo:
		return UnmarshalInputMessageVideo(data)

	case TypeInputMessageVideoNote:
		return UnmarshalInputMessageVideoNote(data)

	case TypeInputMessageVoiceNote:
		return UnmarshalInputMessageVoiceNote(data)

	case TypeInputMessageLocation:
		return UnmarshalInputMessageLocation(data)

	case TypeInputMessageVenue:
		return UnmarshalInputMessageVenue(data)

	case TypeInputMessageContact:
		return UnmarshalInputMessageContact(data)

	case TypeInputMessageGame:
		return UnmarshalInputMessageGame(data)

	case TypeInputMessageInvoice:
		return UnmarshalInputMessageInvoice(data)

	case TypeInputMessageForwarded:
		return UnmarshalInputMessageForwarded(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalSearchMessagesFilter parses the JSON-encoded data and return it as SearchMessagesFilter object.
func UnmarshalSearchMessagesFilter(data json.RawMessage) (SearchMessagesFilter, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeSearchMessagesFilterEmpty:
		return UnmarshalSearchMessagesFilterEmpty(data)

	case TypeSearchMessagesFilterAnimation:
		return UnmarshalSearchMessagesFilterAnimation(data)

	case TypeSearchMessagesFilterAudio:
		return UnmarshalSearchMessagesFilterAudio(data)

	case TypeSearchMessagesFilterDocument:
		return UnmarshalSearchMessagesFilterDocument(data)

	case TypeSearchMessagesFilterPhoto:
		return UnmarshalSearchMessagesFilterPhoto(data)

	case TypeSearchMessagesFilterVideo:
		return UnmarshalSearchMessagesFilterVideo(data)

	case TypeSearchMessagesFilterVoiceNote:
		return UnmarshalSearchMessagesFilterVoiceNote(data)

	case TypeSearchMessagesFilterPhotoAndVideo:
		return UnmarshalSearchMessagesFilterPhotoAndVideo(data)

	case TypeSearchMessagesFilterURL:
		return UnmarshalSearchMessagesFilterURL(data)

	case TypeSearchMessagesFilterChatPhoto:
		return UnmarshalSearchMessagesFilterChatPhoto(data)

	case TypeSearchMessagesFilterCall:
		return UnmarshalSearchMessagesFilterCall(data)

	case TypeSearchMessagesFilterMissedCall:
		return UnmarshalSearchMessagesFilterMissedCall(data)

	case TypeSearchMessagesFilterVideoNote:
		return UnmarshalSearchMessagesFilterVideoNote(data)

	case TypeSearchMessagesFilterVoiceAndVideoNote:
		return UnmarshalSearchMessagesFilterVoiceAndVideoNote(data)

	case TypeSearchMessagesFilterMention:
		return UnmarshalSearchMessagesFilterMention(data)

	case TypeSearchMessagesFilterUnreadMention:
		return UnmarshalSearchMessagesFilterUnreadMention(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatAction parses the JSON-encoded data and return it as ChatAction object.
func UnmarshalChatAction(data json.RawMessage) (ChatAction, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatActionTyping:
		return UnmarshalChatActionTyping(data)

	case TypeChatActionRecordingVideo:
		return UnmarshalChatActionRecordingVideo(data)

	case TypeChatActionUploadingVideo:
		return UnmarshalChatActionUploadingVideo(data)

	case TypeChatActionRecordingVoiceNote:
		return UnmarshalChatActionRecordingVoiceNote(data)

	case TypeChatActionUploadingVoiceNote:
		return UnmarshalChatActionUploadingVoiceNote(data)

	case TypeChatActionUploadingPhoto:
		return UnmarshalChatActionUploadingPhoto(data)

	case TypeChatActionUploadingDocument:
		return UnmarshalChatActionUploadingDocument(data)

	case TypeChatActionChoosingLocation:
		return UnmarshalChatActionChoosingLocation(data)

	case TypeChatActionChoosingContact:
		return UnmarshalChatActionChoosingContact(data)

	case TypeChatActionStartPlayingGame:
		return UnmarshalChatActionStartPlayingGame(data)

	case TypeChatActionRecordingVideoNote:
		return UnmarshalChatActionRecordingVideoNote(data)

	case TypeChatActionUploadingVideoNote:
		return UnmarshalChatActionUploadingVideoNote(data)

	case TypeChatActionCancel:
		return UnmarshalChatActionCancel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalUserStatus parses the JSON-encoded data and return it as UserStatus object.
func UnmarshalUserStatus(data json.RawMessage) (UserStatus, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeUserStatusEmpty:
		return UnmarshalUserStatusEmpty(data)

	case TypeUserStatusOnline:
		return UnmarshalUserStatusOnline(data)

	case TypeUserStatusOffline:
		return UnmarshalUserStatusOffline(data)

	case TypeUserStatusRecently:
		return UnmarshalUserStatusRecently(data)

	case TypeUserStatusLastWeek:
		return UnmarshalUserStatusLastWeek(data)

	case TypeUserStatusLastMonth:
		return UnmarshalUserStatusLastMonth(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalCallDiscardReason parses the JSON-encoded data and return it as CallDiscardReason object.
func UnmarshalCallDiscardReason(data json.RawMessage) (CallDiscardReason, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeCallDiscardReasonEmpty:
		return UnmarshalCallDiscardReasonEmpty(data)

	case TypeCallDiscardReasonMissed:
		return UnmarshalCallDiscardReasonMissed(data)

	case TypeCallDiscardReasonDeclined:
		return UnmarshalCallDiscardReasonDeclined(data)

	case TypeCallDiscardReasonDisconnected:
		return UnmarshalCallDiscardReasonDisconnected(data)

	case TypeCallDiscardReasonHungUp:
		return UnmarshalCallDiscardReasonHungUp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalCallState parses the JSON-encoded data and return it as CallState object.
func UnmarshalCallState(data json.RawMessage) (CallState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeCallStatePending:
		return UnmarshalCallStatePending(data)

	case TypeCallStateExchangingKeys:
		return UnmarshalCallStateExchangingKeys(data)

	case TypeCallStateReady:
		return UnmarshalCallStateReady(data)

	case TypeCallStateHangingUp:
		return UnmarshalCallStateHangingUp(data)

	case TypeCallStateDiscarded:
		return UnmarshalCallStateDiscarded(data)

	case TypeCallStateError:
		return UnmarshalCallStateError(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInputInlineQueryResult parses the JSON-encoded data and return it as InputInlineQueryResult object.
func UnmarshalInputInlineQueryResult(data json.RawMessage) (InputInlineQueryResult, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInputInlineQueryResultAnimatedGif:
		return UnmarshalInputInlineQueryResultAnimatedGif(data)

	case TypeInputInlineQueryResultAnimatedMpeg4:
		return UnmarshalInputInlineQueryResultAnimatedMpeg4(data)

	case TypeInputInlineQueryResultArticle:
		return UnmarshalInputInlineQueryResultArticle(data)

	case TypeInputInlineQueryResultAudio:
		return UnmarshalInputInlineQueryResultAudio(data)

	case TypeInputInlineQueryResultContact:
		return UnmarshalInputInlineQueryResultContact(data)

	case TypeInputInlineQueryResultDocument:
		return UnmarshalInputInlineQueryResultDocument(data)

	case TypeInputInlineQueryResultGame:
		return UnmarshalInputInlineQueryResultGame(data)

	case TypeInputInlineQueryResultLocation:
		return UnmarshalInputInlineQueryResultLocation(data)

	case TypeInputInlineQueryResultPhoto:
		return UnmarshalInputInlineQueryResultPhoto(data)

	case TypeInputInlineQueryResultSticker:
		return UnmarshalInputInlineQueryResultSticker(data)

	case TypeInputInlineQueryResultVenue:
		return UnmarshalInputInlineQueryResultVenue(data)

	case TypeInputInlineQueryResultVideo:
		return UnmarshalInputInlineQueryResultVideo(data)

	case TypeInputInlineQueryResultVoiceNote:
		return UnmarshalInputInlineQueryResultVoiceNote(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalInlineQueryResult parses the JSON-encoded data and return it as InlineQueryResult object.
func UnmarshalInlineQueryResult(data json.RawMessage) (InlineQueryResult, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeInlineQueryResultArticle:
		return UnmarshalInlineQueryResultArticle(data)

	case TypeInlineQueryResultContact:
		return UnmarshalInlineQueryResultContact(data)

	case TypeInlineQueryResultLocation:
		return UnmarshalInlineQueryResultLocation(data)

	case TypeInlineQueryResultVenue:
		return UnmarshalInlineQueryResultVenue(data)

	case TypeInlineQueryResultGame:
		return UnmarshalInlineQueryResultGame(data)

	case TypeInlineQueryResultAnimation:
		return UnmarshalInlineQueryResultAnimation(data)

	case TypeInlineQueryResultAudio:
		return UnmarshalInlineQueryResultAudio(data)

	case TypeInlineQueryResultDocument:
		return UnmarshalInlineQueryResultDocument(data)

	case TypeInlineQueryResultPhoto:
		return UnmarshalInlineQueryResultPhoto(data)

	case TypeInlineQueryResultSticker:
		return UnmarshalInlineQueryResultSticker(data)

	case TypeInlineQueryResultVideo:
		return UnmarshalInlineQueryResultVideo(data)

	case TypeInlineQueryResultVoiceNote:
		return UnmarshalInlineQueryResultVoiceNote(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalCallbackQueryPayload parses the JSON-encoded data and return it as CallbackQueryPayload object.
func UnmarshalCallbackQueryPayload(data json.RawMessage) (CallbackQueryPayload, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeCallbackQueryPayloadData:
		return UnmarshalCallbackQueryPayloadData(data)

	case TypeCallbackQueryPayloadGame:
		return UnmarshalCallbackQueryPayloadGame(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatEventAction parses the JSON-encoded data and return it as ChatEventAction object.
func UnmarshalChatEventAction(data json.RawMessage) (ChatEventAction, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatEventMessageEdited:
		return UnmarshalChatEventMessageEdited(data)

	case TypeChatEventMessageDeleted:
		return UnmarshalChatEventMessageDeleted(data)

	case TypeChatEventMessagePinned:
		return UnmarshalChatEventMessagePinned(data)

	case TypeChatEventMessageUnpinned:
		return UnmarshalChatEventMessageUnpinned(data)

	case TypeChatEventMemberJoined:
		return UnmarshalChatEventMemberJoined(data)

	case TypeChatEventMemberLeft:
		return UnmarshalChatEventMemberLeft(data)

	case TypeChatEventMemberInvited:
		return UnmarshalChatEventMemberInvited(data)

	case TypeChatEventMemberPromoted:
		return UnmarshalChatEventMemberPromoted(data)

	case TypeChatEventMemberRestricted:
		return UnmarshalChatEventMemberRestricted(data)

	case TypeChatEventTitleChanged:
		return UnmarshalChatEventTitleChanged(data)

	case TypeChatEventDescriptionChanged:
		return UnmarshalChatEventDescriptionChanged(data)

	case TypeChatEventUsernameChanged:
		return UnmarshalChatEventUsernameChanged(data)

	case TypeChatEventPhotoChanged:
		return UnmarshalChatEventPhotoChanged(data)

	case TypeChatEventInvitesToggled:
		return UnmarshalChatEventInvitesToggled(data)

	case TypeChatEventSignMessagesToggled:
		return UnmarshalChatEventSignMessagesToggled(data)

	case TypeChatEventStickerSetChanged:
		return UnmarshalChatEventStickerSetChanged(data)

	case TypeChatEventIsAllHistoryAvailableToggled:
		return UnmarshalChatEventIsAllHistoryAvailableToggled(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalLanguagePackStringValue parses the JSON-encoded data and return it as LanguagePackStringValue object.
func UnmarshalLanguagePackStringValue(data json.RawMessage) (LanguagePackStringValue, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeLanguagePackStringValueOrdinary:
		return UnmarshalLanguagePackStringValueOrdinary(data)

	case TypeLanguagePackStringValuePluralized:
		return UnmarshalLanguagePackStringValuePluralized(data)

	case TypeLanguagePackStringValueDeleted:
		return UnmarshalLanguagePackStringValueDeleted(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalDeviceToken parses the JSON-encoded data and return it as DeviceToken object.
func UnmarshalDeviceToken(data json.RawMessage) (DeviceToken, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeDeviceTokenGoogleCloudMessaging:
		return UnmarshalDeviceTokenGoogleCloudMessaging(data)

	case TypeDeviceTokenApplePush:
		return UnmarshalDeviceTokenApplePush(data)

	case TypeDeviceTokenApplePushVoIP:
		return UnmarshalDeviceTokenApplePushVoIP(data)

	case TypeDeviceTokenWindowsPush:
		return UnmarshalDeviceTokenWindowsPush(data)

	case TypeDeviceTokenMicrosoftPush:
		return UnmarshalDeviceTokenMicrosoftPush(data)

	case TypeDeviceTokenMicrosoftPushVoIP:
		return UnmarshalDeviceTokenMicrosoftPushVoIP(data)

	case TypeDeviceTokenWebPush:
		return UnmarshalDeviceTokenWebPush(data)

	case TypeDeviceTokenSimplePush:
		return UnmarshalDeviceTokenSimplePush(data)

	case TypeDeviceTokenUbuntuPush:
		return UnmarshalDeviceTokenUbuntuPush(data)

	case TypeDeviceTokenBlackBerryPush:
		return UnmarshalDeviceTokenBlackBerryPush(data)

	case TypeDeviceTokenTizenPush:
		return UnmarshalDeviceTokenTizenPush(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalCheckChatUsernameResult parses the JSON-encoded data and return it as CheckChatUsernameResult object.
func UnmarshalCheckChatUsernameResult(data json.RawMessage) (CheckChatUsernameResult, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeCheckChatUsernameResultOk:
		return UnmarshalCheckChatUsernameResultOk(data)

	case TypeCheckChatUsernameResultUsernameInvalid:
		return UnmarshalCheckChatUsernameResultUsernameInvalid(data)

	case TypeCheckChatUsernameResultUsernameOccupied:
		return UnmarshalCheckChatUsernameResultUsernameOccupied(data)

	case TypeCheckChatUsernameResultPublicChatsTooMuch:
		return UnmarshalCheckChatUsernameResultPublicChatsTooMuch(data)

	case TypeCheckChatUsernameResultPublicGroupsUnavailable:
		return UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalOptionValue parses the JSON-encoded data and return it as OptionValue object.
func UnmarshalOptionValue(data json.RawMessage) (OptionValue, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeOptionValueBoolean:
		return UnmarshalOptionValueBoolean(data)

	case TypeOptionValueEmpty:
		return UnmarshalOptionValueEmpty(data)

	case TypeOptionValueInteger:
		return UnmarshalOptionValueInteger(data)

	case TypeOptionValueString:
		return UnmarshalOptionValueString(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalUserPrivacySettingRule parses the JSON-encoded data and return it as UserPrivacySettingRule object.
func UnmarshalUserPrivacySettingRule(data json.RawMessage) (UserPrivacySettingRule, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeUserPrivacySettingRuleAllowAll:
		return UnmarshalUserPrivacySettingRuleAllowAll(data)

	case TypeUserPrivacySettingRuleAllowContacts:
		return UnmarshalUserPrivacySettingRuleAllowContacts(data)

	case TypeUserPrivacySettingRuleAllowUsers:
		return UnmarshalUserPrivacySettingRuleAllowUsers(data)

	case TypeUserPrivacySettingRuleRestrictAll:
		return UnmarshalUserPrivacySettingRuleRestrictAll(data)

	case TypeUserPrivacySettingRuleRestrictContacts:
		return UnmarshalUserPrivacySettingRuleRestrictContacts(data)

	case TypeUserPrivacySettingRuleRestrictUsers:
		return UnmarshalUserPrivacySettingRuleRestrictUsers(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalUserPrivacySetting parses the JSON-encoded data and return it as UserPrivacySetting object.
func UnmarshalUserPrivacySetting(data json.RawMessage) (UserPrivacySetting, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeUserPrivacySettingShowStatus:
		return UnmarshalUserPrivacySettingShowStatus(data)

	case TypeUserPrivacySettingAllowChatInvites:
		return UnmarshalUserPrivacySettingAllowChatInvites(data)

	case TypeUserPrivacySettingAllowCalls:
		return UnmarshalUserPrivacySettingAllowCalls(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalChatReportReason parses the JSON-encoded data and return it as ChatReportReason object.
func UnmarshalChatReportReason(data json.RawMessage) (ChatReportReason, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeChatReportReasonSpam:
		return UnmarshalChatReportReasonSpam(data)

	case TypeChatReportReasonViolence:
		return UnmarshalChatReportReasonViolence(data)

	case TypeChatReportReasonPornography:
		return UnmarshalChatReportReasonPornography(data)

	case TypeChatReportReasonCopyright:
		return UnmarshalChatReportReasonCopyright(data)

	case TypeChatReportReasonCustom:
		return UnmarshalChatReportReasonCustom(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalFileType parses the JSON-encoded data and return it as FileType object.
func UnmarshalFileType(data json.RawMessage) (FileType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeFileTypeNone:
		return UnmarshalFileTypeNone(data)

	case TypeFileTypeAnimation:
		return UnmarshalFileTypeAnimation(data)

	case TypeFileTypeAudio:
		return UnmarshalFileTypeAudio(data)

	case TypeFileTypeDocument:
		return UnmarshalFileTypeDocument(data)

	case TypeFileTypePhoto:
		return UnmarshalFileTypePhoto(data)

	case TypeFileTypeProfilePhoto:
		return UnmarshalFileTypeProfilePhoto(data)

	case TypeFileTypeSecret:
		return UnmarshalFileTypeSecret(data)

	case TypeFileTypeSecretThumbnail:
		return UnmarshalFileTypeSecretThumbnail(data)

	case TypeFileTypeSecure:
		return UnmarshalFileTypeSecure(data)

	case TypeFileTypeSticker:
		return UnmarshalFileTypeSticker(data)

	case TypeFileTypeThumbnail:
		return UnmarshalFileTypeThumbnail(data)

	case TypeFileTypeUnknown:
		return UnmarshalFileTypeUnknown(data)

	case TypeFileTypeVideo:
		return UnmarshalFileTypeVideo(data)

	case TypeFileTypeVideoNote:
		return UnmarshalFileTypeVideoNote(data)

	case TypeFileTypeVoiceNote:
		return UnmarshalFileTypeVoiceNote(data)

	case TypeFileTypeWallpaper:
		return UnmarshalFileTypeWallpaper(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalNetworkType parses the JSON-encoded data and return it as NetworkType object.
func UnmarshalNetworkType(data json.RawMessage) (NetworkType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeNetworkTypeNone:
		return UnmarshalNetworkTypeNone(data)

	case TypeNetworkTypeMobile:
		return UnmarshalNetworkTypeMobile(data)

	case TypeNetworkTypeMobileRoaming:
		return UnmarshalNetworkTypeMobileRoaming(data)

	case TypeNetworkTypeWiFi:
		return UnmarshalNetworkTypeWiFi(data)

	case TypeNetworkTypeOther:
		return UnmarshalNetworkTypeOther(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalNetworkStatisticsEntry parses the JSON-encoded data and return it as NetworkStatisticsEntry object.
func UnmarshalNetworkStatisticsEntry(data json.RawMessage) (NetworkStatisticsEntry, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeNetworkStatisticsEntryFile:
		return UnmarshalNetworkStatisticsEntryFile(data)

	case TypeNetworkStatisticsEntryCall:
		return UnmarshalNetworkStatisticsEntryCall(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalConnectionState parses the JSON-encoded data and return it as ConnectionState object.
func UnmarshalConnectionState(data json.RawMessage) (ConnectionState, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeConnectionStateWaitingForNetwork:
		return UnmarshalConnectionStateWaitingForNetwork(data)

	case TypeConnectionStateConnectingToProxy:
		return UnmarshalConnectionStateConnectingToProxy(data)

	case TypeConnectionStateConnecting:
		return UnmarshalConnectionStateConnecting(data)

	case TypeConnectionStateUpdating:
		return UnmarshalConnectionStateUpdating(data)

	case TypeConnectionStateReady:
		return UnmarshalConnectionStateReady(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalTopChatCategory parses the JSON-encoded data and return it as TopChatCategory object.
func UnmarshalTopChatCategory(data json.RawMessage) (TopChatCategory, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeTopChatCategoryUsers:
		return UnmarshalTopChatCategoryUsers(data)

	case TypeTopChatCategoryBots:
		return UnmarshalTopChatCategoryBots(data)

	case TypeTopChatCategoryGroups:
		return UnmarshalTopChatCategoryGroups(data)

	case TypeTopChatCategoryChannels:
		return UnmarshalTopChatCategoryChannels(data)

	case TypeTopChatCategoryInlineBots:
		return UnmarshalTopChatCategoryInlineBots(data)

	case TypeTopChatCategoryCalls:
		return UnmarshalTopChatCategoryCalls(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalTMeURLType parses the JSON-encoded data and return it as TMeURLType object.
func UnmarshalTMeURLType(data json.RawMessage) (TMeURLType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeTMeURLTypeUser:
		return UnmarshalTMeURLTypeUser(data)

	case TypeTMeURLTypeSupergroup:
		return UnmarshalTMeURLTypeSupergroup(data)

	case TypeTMeURLTypeChatInvite:
		return UnmarshalTMeURLTypeChatInvite(data)

	case TypeTMeURLTypeStickerSet:
		return UnmarshalTMeURLTypeStickerSet(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalTextParseMode parses the JSON-encoded data and return it as TextParseMode object.
func UnmarshalTextParseMode(data json.RawMessage) (TextParseMode, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeTextParseModeMarkdown:
		return UnmarshalTextParseModeMarkdown(data)

	case TypeTextParseModeHTML:
		return UnmarshalTextParseModeHTML(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalProxyType parses the JSON-encoded data and return it as ProxyType object.
func UnmarshalProxyType(data json.RawMessage) (ProxyType, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeProxyTypeSocks5:
		return UnmarshalProxyTypeSocks5(data)

	case TypeProxyTypeHTTP:
		return UnmarshalProxyTypeHTTP(data)

	case TypeProxyTypeMtproto:
		return UnmarshalProxyTypeMtproto(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalUpdate parses the JSON-encoded data and return it as Update object.
func UnmarshalUpdate(data json.RawMessage) (Update, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeUpdateAuthorizationState:
		return UnmarshalUpdateAuthorizationState(data)

	case TypeUpdateNewMessage:
		return UnmarshalUpdateNewMessage(data)

	case TypeUpdateMessageSendAcknowledged:
		return UnmarshalUpdateMessageSendAcknowledged(data)

	case TypeUpdateMessageSendSucceeded:
		return UnmarshalUpdateMessageSendSucceeded(data)

	case TypeUpdateMessageSendFailed:
		return UnmarshalUpdateMessageSendFailed(data)

	case TypeUpdateMessageContent:
		return UnmarshalUpdateMessageContent(data)

	case TypeUpdateMessageEdited:
		return UnmarshalUpdateMessageEdited(data)

	case TypeUpdateMessageViews:
		return UnmarshalUpdateMessageViews(data)

	case TypeUpdateMessageContentOpened:
		return UnmarshalUpdateMessageContentOpened(data)

	case TypeUpdateMessageMentionRead:
		return UnmarshalUpdateMessageMentionRead(data)

	case TypeUpdateNewChat:
		return UnmarshalUpdateNewChat(data)

	case TypeUpdateChatTitle:
		return UnmarshalUpdateChatTitle(data)

	case TypeUpdateChatPhoto:
		return UnmarshalUpdateChatPhoto(data)

	case TypeUpdateChatLastMessage:
		return UnmarshalUpdateChatLastMessage(data)

	case TypeUpdateChatOrder:
		return UnmarshalUpdateChatOrder(data)

	case TypeUpdateChatIsPinned:
		return UnmarshalUpdateChatIsPinned(data)

	case TypeUpdateChatIsMarkedAsUnread:
		return UnmarshalUpdateChatIsMarkedAsUnread(data)

	case TypeUpdateChatIsSponsored:
		return UnmarshalUpdateChatIsSponsored(data)

	case TypeUpdateChatDefaultDisableNotification:
		return UnmarshalUpdateChatDefaultDisableNotification(data)

	case TypeUpdateChatReadInbox:
		return UnmarshalUpdateChatReadInbox(data)

	case TypeUpdateChatReadOutbox:
		return UnmarshalUpdateChatReadOutbox(data)

	case TypeUpdateChatUnreadMentionCount:
		return UnmarshalUpdateChatUnreadMentionCount(data)

	case TypeUpdateChatNotificationSettings:
		return UnmarshalUpdateChatNotificationSettings(data)

	case TypeUpdateScopeNotificationSettings:
		return UnmarshalUpdateScopeNotificationSettings(data)

	case TypeUpdateChatReplyMarkup:
		return UnmarshalUpdateChatReplyMarkup(data)

	case TypeUpdateChatDraftMessage:
		return UnmarshalUpdateChatDraftMessage(data)

	case TypeUpdateDeleteMessages:
		return UnmarshalUpdateDeleteMessages(data)

	case TypeUpdateUserChatAction:
		return UnmarshalUpdateUserChatAction(data)

	case TypeUpdateUserStatus:
		return UnmarshalUpdateUserStatus(data)

	case TypeUpdateUser:
		return UnmarshalUpdateUser(data)

	case TypeUpdateBasicGroup:
		return UnmarshalUpdateBasicGroup(data)

	case TypeUpdateSupergroup:
		return UnmarshalUpdateSupergroup(data)

	case TypeUpdateSecretChat:
		return UnmarshalUpdateSecretChat(data)

	case TypeUpdateUserFullInfo:
		return UnmarshalUpdateUserFullInfo(data)

	case TypeUpdateBasicGroupFullInfo:
		return UnmarshalUpdateBasicGroupFullInfo(data)

	case TypeUpdateSupergroupFullInfo:
		return UnmarshalUpdateSupergroupFullInfo(data)

	case TypeUpdateServiceNotification:
		return UnmarshalUpdateServiceNotification(data)

	case TypeUpdateFile:
		return UnmarshalUpdateFile(data)

	case TypeUpdateFileGenerationStart:
		return UnmarshalUpdateFileGenerationStart(data)

	case TypeUpdateFileGenerationStop:
		return UnmarshalUpdateFileGenerationStop(data)

	case TypeUpdateCall:
		return UnmarshalUpdateCall(data)

	case TypeUpdateUserPrivacySettingRules:
		return UnmarshalUpdateUserPrivacySettingRules(data)

	case TypeUpdateUnreadMessageCount:
		return UnmarshalUpdateUnreadMessageCount(data)

	case TypeUpdateUnreadChatCount:
		return UnmarshalUpdateUnreadChatCount(data)

	case TypeUpdateOption:
		return UnmarshalUpdateOption(data)

	case TypeUpdateInstalledStickerSets:
		return UnmarshalUpdateInstalledStickerSets(data)

	case TypeUpdateTrendingStickerSets:
		return UnmarshalUpdateTrendingStickerSets(data)

	case TypeUpdateRecentStickers:
		return UnmarshalUpdateRecentStickers(data)

	case TypeUpdateFavoriteStickers:
		return UnmarshalUpdateFavoriteStickers(data)

	case TypeUpdateSavedAnimations:
		return UnmarshalUpdateSavedAnimations(data)

	case TypeUpdateLanguagePackStrings:
		return UnmarshalUpdateLanguagePackStrings(data)

	case TypeUpdateConnectionState:
		return UnmarshalUpdateConnectionState(data)

	case TypeUpdateTermsOfService:
		return UnmarshalUpdateTermsOfService(data)

	case TypeUpdateNewInlineQuery:
		return UnmarshalUpdateNewInlineQuery(data)

	case TypeUpdateNewChosenInlineResult:
		return UnmarshalUpdateNewChosenInlineResult(data)

	case TypeUpdateNewCallbackQuery:
		return UnmarshalUpdateNewCallbackQuery(data)

	case TypeUpdateNewInlineCallbackQuery:
		return UnmarshalUpdateNewInlineCallbackQuery(data)

	case TypeUpdateNewShippingQuery:
		return UnmarshalUpdateNewShippingQuery(data)

	case TypeUpdateNewPreCheckoutQuery:
		return UnmarshalUpdateNewPreCheckoutQuery(data)

	case TypeUpdateNewCustomEvent:
		return UnmarshalUpdateNewCustomEvent(data)

	case TypeUpdateNewCustomQuery:
		return UnmarshalUpdateNewCustomQuery(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}

// UnmarshalError parses the JSON-encoded data and return it as Error object.
func UnmarshalError(data json.RawMessage) (*Error, error) {
	var response Error

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOk parses the JSON-encoded data and return it as Ok object.
func UnmarshalOk(data json.RawMessage) (*Ok, error) {
	var response Ok

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTdlibParameters parses the JSON-encoded data and return it as TdlibParameters object.
func UnmarshalTdlibParameters(data json.RawMessage) (*TdlibParameters, error) {
	var response TdlibParameters

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthenticationCodeTypeTelegramMessage parses the JSON-encoded data and return it as AuthenticationCodeTypeTelegramMessage object.
func UnmarshalAuthenticationCodeTypeTelegramMessage(data json.RawMessage) (*AuthenticationCodeTypeTelegramMessage, error) {
	var response AuthenticationCodeTypeTelegramMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthenticationCodeTypeSms parses the JSON-encoded data and return it as AuthenticationCodeTypeSms object.
func UnmarshalAuthenticationCodeTypeSms(data json.RawMessage) (*AuthenticationCodeTypeSms, error) {
	var response AuthenticationCodeTypeSms

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthenticationCodeTypeCall parses the JSON-encoded data and return it as AuthenticationCodeTypeCall object.
func UnmarshalAuthenticationCodeTypeCall(data json.RawMessage) (*AuthenticationCodeTypeCall, error) {
	var response AuthenticationCodeTypeCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthenticationCodeTypeFlashCall parses the JSON-encoded data and return it as AuthenticationCodeTypeFlashCall object.
func UnmarshalAuthenticationCodeTypeFlashCall(data json.RawMessage) (*AuthenticationCodeTypeFlashCall, error) {
	var response AuthenticationCodeTypeFlashCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthenticationCodeInfo parses the JSON-encoded data and return it as AuthenticationCodeInfo object.
func UnmarshalAuthenticationCodeInfo(data json.RawMessage) (*AuthenticationCodeInfo, error) {
	var response AuthenticationCodeInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalEmailAddressAuthenticationCodeInfo parses the JSON-encoded data and return it as EmailAddressAuthenticationCodeInfo object.
func UnmarshalEmailAddressAuthenticationCodeInfo(data json.RawMessage) (*EmailAddressAuthenticationCodeInfo, error) {
	var response EmailAddressAuthenticationCodeInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntity parses the JSON-encoded data and return it as TextEntity object.
func UnmarshalTextEntity(data json.RawMessage) (*TextEntity, error) {
	var response TextEntity

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntities parses the JSON-encoded data and return it as TextEntities object.
func UnmarshalTextEntities(data json.RawMessage) (*TextEntities, error) {
	var response TextEntities

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFormattedText parses the JSON-encoded data and return it as FormattedText object.
func UnmarshalFormattedText(data json.RawMessage) (*FormattedText, error) {
	var response FormattedText

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTermsOfService parses the JSON-encoded data and return it as TermsOfService object.
func UnmarshalTermsOfService(data json.RawMessage) (*TermsOfService, error) {
	var response TermsOfService

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateWaitTdlibParameters parses the JSON-encoded data and return it as AuthorizationStateWaitTdlibParameters object.
func UnmarshalAuthorizationStateWaitTdlibParameters(data json.RawMessage) (*AuthorizationStateWaitTdlibParameters, error) {
	var response AuthorizationStateWaitTdlibParameters

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateWaitEncryptionKey parses the JSON-encoded data and return it as AuthorizationStateWaitEncryptionKey object.
func UnmarshalAuthorizationStateWaitEncryptionKey(data json.RawMessage) (*AuthorizationStateWaitEncryptionKey, error) {
	var response AuthorizationStateWaitEncryptionKey

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateWaitPhoneNumber parses the JSON-encoded data and return it as AuthorizationStateWaitPhoneNumber object.
func UnmarshalAuthorizationStateWaitPhoneNumber(data json.RawMessage) (*AuthorizationStateWaitPhoneNumber, error) {
	var response AuthorizationStateWaitPhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateWaitCode parses the JSON-encoded data and return it as AuthorizationStateWaitCode object.
func UnmarshalAuthorizationStateWaitCode(data json.RawMessage) (*AuthorizationStateWaitCode, error) {
	var response AuthorizationStateWaitCode

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateWaitPassword parses the JSON-encoded data and return it as AuthorizationStateWaitPassword object.
func UnmarshalAuthorizationStateWaitPassword(data json.RawMessage) (*AuthorizationStateWaitPassword, error) {
	var response AuthorizationStateWaitPassword

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateReady parses the JSON-encoded data and return it as AuthorizationStateReady object.
func UnmarshalAuthorizationStateReady(data json.RawMessage) (*AuthorizationStateReady, error) {
	var response AuthorizationStateReady

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateLoggingOut parses the JSON-encoded data and return it as AuthorizationStateLoggingOut object.
func UnmarshalAuthorizationStateLoggingOut(data json.RawMessage) (*AuthorizationStateLoggingOut, error) {
	var response AuthorizationStateLoggingOut

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateClosing parses the JSON-encoded data and return it as AuthorizationStateClosing object.
func UnmarshalAuthorizationStateClosing(data json.RawMessage) (*AuthorizationStateClosing, error) {
	var response AuthorizationStateClosing

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAuthorizationStateClosed parses the JSON-encoded data and return it as AuthorizationStateClosed object.
func UnmarshalAuthorizationStateClosed(data json.RawMessage) (*AuthorizationStateClosed, error) {
	var response AuthorizationStateClosed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPasswordState parses the JSON-encoded data and return it as PasswordState object.
func UnmarshalPasswordState(data json.RawMessage) (*PasswordState, error) {
	var response PasswordState

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRecoveryEmailAddress parses the JSON-encoded data and return it as RecoveryEmailAddress object.
func UnmarshalRecoveryEmailAddress(data json.RawMessage) (*RecoveryEmailAddress, error) {
	var response RecoveryEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTemporaryPasswordState parses the JSON-encoded data and return it as TemporaryPasswordState object.
func UnmarshalTemporaryPasswordState(data json.RawMessage) (*TemporaryPasswordState, error) {
	var response TemporaryPasswordState

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLocalFile parses the JSON-encoded data and return it as LocalFile object.
func UnmarshalLocalFile(data json.RawMessage) (*LocalFile, error) {
	var response LocalFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRemoteFile parses the JSON-encoded data and return it as RemoteFile object.
func UnmarshalRemoteFile(data json.RawMessage) (*RemoteFile, error) {
	var response RemoteFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFile parses the JSON-encoded data and return it as File object.
func UnmarshalFile(data json.RawMessage) (*File, error) {
	var response File

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputFileID parses the JSON-encoded data and return it as InputFileID object.
func UnmarshalInputFileID(data json.RawMessage) (*InputFileID, error) {
	var response InputFileID

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputFileRemote parses the JSON-encoded data and return it as InputFileRemote object.
func UnmarshalInputFileRemote(data json.RawMessage) (*InputFileRemote, error) {
	var response InputFileRemote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputFileLocal parses the JSON-encoded data and return it as InputFileLocal object.
func UnmarshalInputFileLocal(data json.RawMessage) (*InputFileLocal, error) {
	var response InputFileLocal

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputFileGenerated parses the JSON-encoded data and return it as InputFileGenerated object.
func UnmarshalInputFileGenerated(data json.RawMessage) (*InputFileGenerated, error) {
	var response InputFileGenerated

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPhotoSize parses the JSON-encoded data and return it as PhotoSize object.
func UnmarshalPhotoSize(data json.RawMessage) (*PhotoSize, error) {
	var response PhotoSize

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMaskPointForehead parses the JSON-encoded data and return it as MaskPointForehead object.
func UnmarshalMaskPointForehead(data json.RawMessage) (*MaskPointForehead, error) {
	var response MaskPointForehead

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMaskPointEyes parses the JSON-encoded data and return it as MaskPointEyes object.
func UnmarshalMaskPointEyes(data json.RawMessage) (*MaskPointEyes, error) {
	var response MaskPointEyes

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMaskPointMouth parses the JSON-encoded data and return it as MaskPointMouth object.
func UnmarshalMaskPointMouth(data json.RawMessage) (*MaskPointMouth, error) {
	var response MaskPointMouth

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMaskPointChin parses the JSON-encoded data and return it as MaskPointChin object.
func UnmarshalMaskPointChin(data json.RawMessage) (*MaskPointChin, error) {
	var response MaskPointChin

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMaskPosition parses the JSON-encoded data and return it as MaskPosition object.
func UnmarshalMaskPosition(data json.RawMessage) (*MaskPosition, error) {
	var response MaskPosition

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAnimation parses the JSON-encoded data and return it as Animation object.
func UnmarshalAnimation(data json.RawMessage) (*Animation, error) {
	var response Animation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAudio parses the JSON-encoded data and return it as Audio object.
func UnmarshalAudio(data json.RawMessage) (*Audio, error) {
	var response Audio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDocument parses the JSON-encoded data and return it as Document object.
func UnmarshalDocument(data json.RawMessage) (*Document, error) {
	var response Document

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPhoto parses the JSON-encoded data and return it as Photo object.
func UnmarshalPhoto(data json.RawMessage) (*Photo, error) {
	var response Photo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSticker parses the JSON-encoded data and return it as Sticker object.
func UnmarshalSticker(data json.RawMessage) (*Sticker, error) {
	var response Sticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalVideo parses the JSON-encoded data and return it as Video object.
func UnmarshalVideo(data json.RawMessage) (*Video, error) {
	var response Video

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalVideoNote parses the JSON-encoded data and return it as VideoNote object.
func UnmarshalVideoNote(data json.RawMessage) (*VideoNote, error) {
	var response VideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalVoiceNote parses the JSON-encoded data and return it as VoiceNote object.
func UnmarshalVoiceNote(data json.RawMessage) (*VoiceNote, error) {
	var response VoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalContact parses the JSON-encoded data and return it as Contact object.
func UnmarshalContact(data json.RawMessage) (*Contact, error) {
	var response Contact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLocation parses the JSON-encoded data and return it as Location object.
func UnmarshalLocation(data json.RawMessage) (*Location, error) {
	var response Location

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalVenue parses the JSON-encoded data and return it as Venue object.
func UnmarshalVenue(data json.RawMessage) (*Venue, error) {
	var response Venue

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalGame parses the JSON-encoded data and return it as Game object.
func UnmarshalGame(data json.RawMessage) (*Game, error) {
	var response Game

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProfilePhoto parses the JSON-encoded data and return it as ProfilePhoto object.
func UnmarshalProfilePhoto(data json.RawMessage) (*ProfilePhoto, error) {
	var response ProfilePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatPhoto parses the JSON-encoded data and return it as ChatPhoto object.
func UnmarshalChatPhoto(data json.RawMessage) (*ChatPhoto, error) {
	var response ChatPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLinkStateNone parses the JSON-encoded data and return it as LinkStateNone object.
func UnmarshalLinkStateNone(data json.RawMessage) (*LinkStateNone, error) {
	var response LinkStateNone

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLinkStateKnowsPhoneNumber parses the JSON-encoded data and return it as LinkStateKnowsPhoneNumber object.
func UnmarshalLinkStateKnowsPhoneNumber(data json.RawMessage) (*LinkStateKnowsPhoneNumber, error) {
	var response LinkStateKnowsPhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLinkStateIsContact parses the JSON-encoded data and return it as LinkStateIsContact object.
func UnmarshalLinkStateIsContact(data json.RawMessage) (*LinkStateIsContact, error) {
	var response LinkStateIsContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserTypeRegular parses the JSON-encoded data and return it as UserTypeRegular object.
func UnmarshalUserTypeRegular(data json.RawMessage) (*UserTypeRegular, error) {
	var response UserTypeRegular

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserTypeDeleted parses the JSON-encoded data and return it as UserTypeDeleted object.
func UnmarshalUserTypeDeleted(data json.RawMessage) (*UserTypeDeleted, error) {
	var response UserTypeDeleted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserTypeBot parses the JSON-encoded data and return it as UserTypeBot object.
func UnmarshalUserTypeBot(data json.RawMessage) (*UserTypeBot, error) {
	var response UserTypeBot

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserTypeUnknown parses the JSON-encoded data and return it as UserTypeUnknown object.
func UnmarshalUserTypeUnknown(data json.RawMessage) (*UserTypeUnknown, error) {
	var response UserTypeUnknown

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalBotCommand parses the JSON-encoded data and return it as BotCommand object.
func UnmarshalBotCommand(data json.RawMessage) (*BotCommand, error) {
	var response BotCommand

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalBotInfo parses the JSON-encoded data and return it as BotInfo object.
func UnmarshalBotInfo(data json.RawMessage) (*BotInfo, error) {
	var response BotInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUser parses the JSON-encoded data and return it as User object.
func UnmarshalUser(data json.RawMessage) (*User, error) {
	var response User

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserFullInfo parses the JSON-encoded data and return it as UserFullInfo object.
func UnmarshalUserFullInfo(data json.RawMessage) (*UserFullInfo, error) {
	var response UserFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserProfilePhotos parses the JSON-encoded data and return it as UserProfilePhotos object.
func UnmarshalUserProfilePhotos(data json.RawMessage) (*UserProfilePhotos, error) {
	var response UserProfilePhotos

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUsers parses the JSON-encoded data and return it as Users object.
func UnmarshalUsers(data json.RawMessage) (*Users, error) {
	var response Users

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusCreator parses the JSON-encoded data and return it as ChatMemberStatusCreator object.
func UnmarshalChatMemberStatusCreator(data json.RawMessage) (*ChatMemberStatusCreator, error) {
	var response ChatMemberStatusCreator

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusAdministrator parses the JSON-encoded data and return it as ChatMemberStatusAdministrator object.
func UnmarshalChatMemberStatusAdministrator(data json.RawMessage) (*ChatMemberStatusAdministrator, error) {
	var response ChatMemberStatusAdministrator

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusMember parses the JSON-encoded data and return it as ChatMemberStatusMember object.
func UnmarshalChatMemberStatusMember(data json.RawMessage) (*ChatMemberStatusMember, error) {
	var response ChatMemberStatusMember

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusRestricted parses the JSON-encoded data and return it as ChatMemberStatusRestricted object.
func UnmarshalChatMemberStatusRestricted(data json.RawMessage) (*ChatMemberStatusRestricted, error) {
	var response ChatMemberStatusRestricted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusLeft parses the JSON-encoded data and return it as ChatMemberStatusLeft object.
func UnmarshalChatMemberStatusLeft(data json.RawMessage) (*ChatMemberStatusLeft, error) {
	var response ChatMemberStatusLeft

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMemberStatusBanned parses the JSON-encoded data and return it as ChatMemberStatusBanned object.
func UnmarshalChatMemberStatusBanned(data json.RawMessage) (*ChatMemberStatusBanned, error) {
	var response ChatMemberStatusBanned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMember parses the JSON-encoded data and return it as ChatMember object.
func UnmarshalChatMember(data json.RawMessage) (*ChatMember, error) {
	var response ChatMember

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembers parses the JSON-encoded data and return it as ChatMembers object.
func UnmarshalChatMembers(data json.RawMessage) (*ChatMembers, error) {
	var response ChatMembers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembersFilterAdministrators parses the JSON-encoded data and return it as ChatMembersFilterAdministrators object.
func UnmarshalChatMembersFilterAdministrators(data json.RawMessage) (*ChatMembersFilterAdministrators, error) {
	var response ChatMembersFilterAdministrators

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembersFilterMembers parses the JSON-encoded data and return it as ChatMembersFilterMembers object.
func UnmarshalChatMembersFilterMembers(data json.RawMessage) (*ChatMembersFilterMembers, error) {
	var response ChatMembersFilterMembers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembersFilterRestricted parses the JSON-encoded data and return it as ChatMembersFilterRestricted object.
func UnmarshalChatMembersFilterRestricted(data json.RawMessage) (*ChatMembersFilterRestricted, error) {
	var response ChatMembersFilterRestricted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembersFilterBanned parses the JSON-encoded data and return it as ChatMembersFilterBanned object.
func UnmarshalChatMembersFilterBanned(data json.RawMessage) (*ChatMembersFilterBanned, error) {
	var response ChatMembersFilterBanned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatMembersFilterBots parses the JSON-encoded data and return it as ChatMembersFilterBots object.
func UnmarshalChatMembersFilterBots(data json.RawMessage) (*ChatMembersFilterBots, error) {
	var response ChatMembersFilterBots

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterRecent parses the JSON-encoded data and return it as SupergroupMembersFilterRecent object.
func UnmarshalSupergroupMembersFilterRecent(data json.RawMessage) (*SupergroupMembersFilterRecent, error) {
	var response SupergroupMembersFilterRecent

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterAdministrators parses the JSON-encoded data and return it as SupergroupMembersFilterAdministrators object.
func UnmarshalSupergroupMembersFilterAdministrators(data json.RawMessage) (*SupergroupMembersFilterAdministrators, error) {
	var response SupergroupMembersFilterAdministrators

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterSearch parses the JSON-encoded data and return it as SupergroupMembersFilterSearch object.
func UnmarshalSupergroupMembersFilterSearch(data json.RawMessage) (*SupergroupMembersFilterSearch, error) {
	var response SupergroupMembersFilterSearch

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterRestricted parses the JSON-encoded data and return it as SupergroupMembersFilterRestricted object.
func UnmarshalSupergroupMembersFilterRestricted(data json.RawMessage) (*SupergroupMembersFilterRestricted, error) {
	var response SupergroupMembersFilterRestricted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterBanned parses the JSON-encoded data and return it as SupergroupMembersFilterBanned object.
func UnmarshalSupergroupMembersFilterBanned(data json.RawMessage) (*SupergroupMembersFilterBanned, error) {
	var response SupergroupMembersFilterBanned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupMembersFilterBots parses the JSON-encoded data and return it as SupergroupMembersFilterBots object.
func UnmarshalSupergroupMembersFilterBots(data json.RawMessage) (*SupergroupMembersFilterBots, error) {
	var response SupergroupMembersFilterBots

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalBasicGroup parses the JSON-encoded data and return it as BasicGroup object.
func UnmarshalBasicGroup(data json.RawMessage) (*BasicGroup, error) {
	var response BasicGroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalBasicGroupFullInfo parses the JSON-encoded data and return it as BasicGroupFullInfo object.
func UnmarshalBasicGroupFullInfo(data json.RawMessage) (*BasicGroupFullInfo, error) {
	var response BasicGroupFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroup parses the JSON-encoded data and return it as Supergroup object.
func UnmarshalSupergroup(data json.RawMessage) (*Supergroup, error) {
	var response Supergroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSupergroupFullInfo parses the JSON-encoded data and return it as SupergroupFullInfo object.
func UnmarshalSupergroupFullInfo(data json.RawMessage) (*SupergroupFullInfo, error) {
	var response SupergroupFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSecretChatStatePending parses the JSON-encoded data and return it as SecretChatStatePending object.
func UnmarshalSecretChatStatePending(data json.RawMessage) (*SecretChatStatePending, error) {
	var response SecretChatStatePending

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSecretChatStateReady parses the JSON-encoded data and return it as SecretChatStateReady object.
func UnmarshalSecretChatStateReady(data json.RawMessage) (*SecretChatStateReady, error) {
	var response SecretChatStateReady

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSecretChatStateClosed parses the JSON-encoded data and return it as SecretChatStateClosed object.
func UnmarshalSecretChatStateClosed(data json.RawMessage) (*SecretChatStateClosed, error) {
	var response SecretChatStateClosed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSecretChat parses the JSON-encoded data and return it as SecretChat object.
func UnmarshalSecretChat(data json.RawMessage) (*SecretChat, error) {
	var response SecretChat

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageForwardedFromUser parses the JSON-encoded data and return it as MessageForwardedFromUser object.
func UnmarshalMessageForwardedFromUser(data json.RawMessage) (*MessageForwardedFromUser, error) {
	var response MessageForwardedFromUser

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageForwardedPost parses the JSON-encoded data and return it as MessageForwardedPost object.
func UnmarshalMessageForwardedPost(data json.RawMessage) (*MessageForwardedPost, error) {
	var response MessageForwardedPost

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageSendingStatePending parses the JSON-encoded data and return it as MessageSendingStatePending object.
func UnmarshalMessageSendingStatePending(data json.RawMessage) (*MessageSendingStatePending, error) {
	var response MessageSendingStatePending

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageSendingStateFailed parses the JSON-encoded data and return it as MessageSendingStateFailed object.
func UnmarshalMessageSendingStateFailed(data json.RawMessage) (*MessageSendingStateFailed, error) {
	var response MessageSendingStateFailed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessage parses the JSON-encoded data and return it as Message object.
func UnmarshalMessage(data json.RawMessage) (*Message, error) {
	var response Message

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessages parses the JSON-encoded data and return it as Messages object.
func UnmarshalMessages(data json.RawMessage) (*Messages, error) {
	var response Messages

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFoundMessages parses the JSON-encoded data and return it as FoundMessages object.
func UnmarshalFoundMessages(data json.RawMessage) (*FoundMessages, error) {
	var response FoundMessages

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNotificationSettingsScopePrivateChats parses the JSON-encoded data and return it as NotificationSettingsScopePrivateChats object.
func UnmarshalNotificationSettingsScopePrivateChats(data json.RawMessage) (*NotificationSettingsScopePrivateChats, error) {
	var response NotificationSettingsScopePrivateChats

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNotificationSettingsScopeGroupChats parses the JSON-encoded data and return it as NotificationSettingsScopeGroupChats object.
func UnmarshalNotificationSettingsScopeGroupChats(data json.RawMessage) (*NotificationSettingsScopeGroupChats, error) {
	var response NotificationSettingsScopeGroupChats

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatNotificationSettings parses the JSON-encoded data and return it as ChatNotificationSettings object.
func UnmarshalChatNotificationSettings(data json.RawMessage) (*ChatNotificationSettings, error) {
	var response ChatNotificationSettings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalScopeNotificationSettings parses the JSON-encoded data and return it as ScopeNotificationSettings object.
func UnmarshalScopeNotificationSettings(data json.RawMessage) (*ScopeNotificationSettings, error) {
	var response ScopeNotificationSettings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDraftMessage parses the JSON-encoded data and return it as DraftMessage object.
func UnmarshalDraftMessage(data json.RawMessage) (*DraftMessage, error) {
	var response DraftMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatTypePrivate parses the JSON-encoded data and return it as ChatTypePrivate object.
func UnmarshalChatTypePrivate(data json.RawMessage) (*ChatTypePrivate, error) {
	var response ChatTypePrivate

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatTypeBasicGroup parses the JSON-encoded data and return it as ChatTypeBasicGroup object.
func UnmarshalChatTypeBasicGroup(data json.RawMessage) (*ChatTypeBasicGroup, error) {
	var response ChatTypeBasicGroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatTypeSupergroup parses the JSON-encoded data and return it as ChatTypeSupergroup object.
func UnmarshalChatTypeSupergroup(data json.RawMessage) (*ChatTypeSupergroup, error) {
	var response ChatTypeSupergroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatTypeSecret parses the JSON-encoded data and return it as ChatTypeSecret object.
func UnmarshalChatTypeSecret(data json.RawMessage) (*ChatTypeSecret, error) {
	var response ChatTypeSecret

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChat parses the JSON-encoded data and return it as Chat object.
func UnmarshalChat(data json.RawMessage) (*Chat, error) {
	var response Chat

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChats parses the JSON-encoded data and return it as Chats object.
func UnmarshalChats(data json.RawMessage) (*Chats, error) {
	var response Chats

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatInviteLink parses the JSON-encoded data and return it as ChatInviteLink object.
func UnmarshalChatInviteLink(data json.RawMessage) (*ChatInviteLink, error) {
	var response ChatInviteLink

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatInviteLinkInfo parses the JSON-encoded data and return it as ChatInviteLinkInfo object.
func UnmarshalChatInviteLinkInfo(data json.RawMessage) (*ChatInviteLinkInfo, error) {
	var response ChatInviteLinkInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalKeyboardButtonTypeText parses the JSON-encoded data and return it as KeyboardButtonTypeText object.
func UnmarshalKeyboardButtonTypeText(data json.RawMessage) (*KeyboardButtonTypeText, error) {
	var response KeyboardButtonTypeText

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalKeyboardButtonTypeRequestPhoneNumber parses the JSON-encoded data and return it as KeyboardButtonTypeRequestPhoneNumber object.
func UnmarshalKeyboardButtonTypeRequestPhoneNumber(data json.RawMessage) (*KeyboardButtonTypeRequestPhoneNumber, error) {
	var response KeyboardButtonTypeRequestPhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalKeyboardButtonTypeRequestLocation parses the JSON-encoded data and return it as KeyboardButtonTypeRequestLocation object.
func UnmarshalKeyboardButtonTypeRequestLocation(data json.RawMessage) (*KeyboardButtonTypeRequestLocation, error) {
	var response KeyboardButtonTypeRequestLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalKeyboardButton parses the JSON-encoded data and return it as KeyboardButton object.
func UnmarshalKeyboardButton(data json.RawMessage) (*KeyboardButton, error) {
	var response KeyboardButton

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButtonTypeURL parses the JSON-encoded data and return it as InlineKeyboardButtonTypeURL object.
func UnmarshalInlineKeyboardButtonTypeURL(data json.RawMessage) (*InlineKeyboardButtonTypeURL, error) {
	var response InlineKeyboardButtonTypeURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButtonTypeCallback parses the JSON-encoded data and return it as InlineKeyboardButtonTypeCallback object.
func UnmarshalInlineKeyboardButtonTypeCallback(data json.RawMessage) (*InlineKeyboardButtonTypeCallback, error) {
	var response InlineKeyboardButtonTypeCallback

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButtonTypeCallbackGame parses the JSON-encoded data and return it as InlineKeyboardButtonTypeCallbackGame object.
func UnmarshalInlineKeyboardButtonTypeCallbackGame(data json.RawMessage) (*InlineKeyboardButtonTypeCallbackGame, error) {
	var response InlineKeyboardButtonTypeCallbackGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButtonTypeSwitchInline parses the JSON-encoded data and return it as InlineKeyboardButtonTypeSwitchInline object.
func UnmarshalInlineKeyboardButtonTypeSwitchInline(data json.RawMessage) (*InlineKeyboardButtonTypeSwitchInline, error) {
	var response InlineKeyboardButtonTypeSwitchInline

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButtonTypeBuy parses the JSON-encoded data and return it as InlineKeyboardButtonTypeBuy object.
func UnmarshalInlineKeyboardButtonTypeBuy(data json.RawMessage) (*InlineKeyboardButtonTypeBuy, error) {
	var response InlineKeyboardButtonTypeBuy

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineKeyboardButton parses the JSON-encoded data and return it as InlineKeyboardButton object.
func UnmarshalInlineKeyboardButton(data json.RawMessage) (*InlineKeyboardButton, error) {
	var response InlineKeyboardButton

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalReplyMarkupRemoveKeyboard parses the JSON-encoded data and return it as ReplyMarkupRemoveKeyboard object.
func UnmarshalReplyMarkupRemoveKeyboard(data json.RawMessage) (*ReplyMarkupRemoveKeyboard, error) {
	var response ReplyMarkupRemoveKeyboard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalReplyMarkupForceReply parses the JSON-encoded data and return it as ReplyMarkupForceReply object.
func UnmarshalReplyMarkupForceReply(data json.RawMessage) (*ReplyMarkupForceReply, error) {
	var response ReplyMarkupForceReply

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalReplyMarkupShowKeyboard parses the JSON-encoded data and return it as ReplyMarkupShowKeyboard object.
func UnmarshalReplyMarkupShowKeyboard(data json.RawMessage) (*ReplyMarkupShowKeyboard, error) {
	var response ReplyMarkupShowKeyboard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalReplyMarkupInlineKeyboard parses the JSON-encoded data and return it as ReplyMarkupInlineKeyboard object.
func UnmarshalReplyMarkupInlineKeyboard(data json.RawMessage) (*ReplyMarkupInlineKeyboard, error) {
	var response ReplyMarkupInlineKeyboard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextPlain parses the JSON-encoded data and return it as RichTextPlain object.
func UnmarshalRichTextPlain(data json.RawMessage) (*RichTextPlain, error) {
	var response RichTextPlain

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextBold parses the JSON-encoded data and return it as RichTextBold object.
func UnmarshalRichTextBold(data json.RawMessage) (*RichTextBold, error) {
	var response RichTextBold

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextItalic parses the JSON-encoded data and return it as RichTextItalic object.
func UnmarshalRichTextItalic(data json.RawMessage) (*RichTextItalic, error) {
	var response RichTextItalic

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextUnderline parses the JSON-encoded data and return it as RichTextUnderline object.
func UnmarshalRichTextUnderline(data json.RawMessage) (*RichTextUnderline, error) {
	var response RichTextUnderline

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextStrikethrough parses the JSON-encoded data and return it as RichTextStrikethrough object.
func UnmarshalRichTextStrikethrough(data json.RawMessage) (*RichTextStrikethrough, error) {
	var response RichTextStrikethrough

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextFixed parses the JSON-encoded data and return it as RichTextFixed object.
func UnmarshalRichTextFixed(data json.RawMessage) (*RichTextFixed, error) {
	var response RichTextFixed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextURL parses the JSON-encoded data and return it as RichTextURL object.
func UnmarshalRichTextURL(data json.RawMessage) (*RichTextURL, error) {
	var response RichTextURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTextEmailAddress parses the JSON-encoded data and return it as RichTextEmailAddress object.
func UnmarshalRichTextEmailAddress(data json.RawMessage) (*RichTextEmailAddress, error) {
	var response RichTextEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalRichTexts parses the JSON-encoded data and return it as RichTexts object.
func UnmarshalRichTexts(data json.RawMessage) (*RichTexts, error) {
	var response RichTexts

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockTitle parses the JSON-encoded data and return it as PageBlockTitle object.
func UnmarshalPageBlockTitle(data json.RawMessage) (*PageBlockTitle, error) {
	var response PageBlockTitle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockSubtitle parses the JSON-encoded data and return it as PageBlockSubtitle object.
func UnmarshalPageBlockSubtitle(data json.RawMessage) (*PageBlockSubtitle, error) {
	var response PageBlockSubtitle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockAuthorDate parses the JSON-encoded data and return it as PageBlockAuthorDate object.
func UnmarshalPageBlockAuthorDate(data json.RawMessage) (*PageBlockAuthorDate, error) {
	var response PageBlockAuthorDate

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockHeader parses the JSON-encoded data and return it as PageBlockHeader object.
func UnmarshalPageBlockHeader(data json.RawMessage) (*PageBlockHeader, error) {
	var response PageBlockHeader

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockSubheader parses the JSON-encoded data and return it as PageBlockSubheader object.
func UnmarshalPageBlockSubheader(data json.RawMessage) (*PageBlockSubheader, error) {
	var response PageBlockSubheader

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockParagraph parses the JSON-encoded data and return it as PageBlockParagraph object.
func UnmarshalPageBlockParagraph(data json.RawMessage) (*PageBlockParagraph, error) {
	var response PageBlockParagraph

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockPreformatted parses the JSON-encoded data and return it as PageBlockPreformatted object.
func UnmarshalPageBlockPreformatted(data json.RawMessage) (*PageBlockPreformatted, error) {
	var response PageBlockPreformatted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockFooter parses the JSON-encoded data and return it as PageBlockFooter object.
func UnmarshalPageBlockFooter(data json.RawMessage) (*PageBlockFooter, error) {
	var response PageBlockFooter

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockDivider parses the JSON-encoded data and return it as PageBlockDivider object.
func UnmarshalPageBlockDivider(data json.RawMessage) (*PageBlockDivider, error) {
	var response PageBlockDivider

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockAnchor parses the JSON-encoded data and return it as PageBlockAnchor object.
func UnmarshalPageBlockAnchor(data json.RawMessage) (*PageBlockAnchor, error) {
	var response PageBlockAnchor

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockList parses the JSON-encoded data and return it as PageBlockList object.
func UnmarshalPageBlockList(data json.RawMessage) (*PageBlockList, error) {
	var response PageBlockList

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockBlockQuote parses the JSON-encoded data and return it as PageBlockBlockQuote object.
func UnmarshalPageBlockBlockQuote(data json.RawMessage) (*PageBlockBlockQuote, error) {
	var response PageBlockBlockQuote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockPullQuote parses the JSON-encoded data and return it as PageBlockPullQuote object.
func UnmarshalPageBlockPullQuote(data json.RawMessage) (*PageBlockPullQuote, error) {
	var response PageBlockPullQuote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockAnimation parses the JSON-encoded data and return it as PageBlockAnimation object.
func UnmarshalPageBlockAnimation(data json.RawMessage) (*PageBlockAnimation, error) {
	var response PageBlockAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockAudio parses the JSON-encoded data and return it as PageBlockAudio object.
func UnmarshalPageBlockAudio(data json.RawMessage) (*PageBlockAudio, error) {
	var response PageBlockAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockPhoto parses the JSON-encoded data and return it as PageBlockPhoto object.
func UnmarshalPageBlockPhoto(data json.RawMessage) (*PageBlockPhoto, error) {
	var response PageBlockPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockVideo parses the JSON-encoded data and return it as PageBlockVideo object.
func UnmarshalPageBlockVideo(data json.RawMessage) (*PageBlockVideo, error) {
	var response PageBlockVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockCover parses the JSON-encoded data and return it as PageBlockCover object.
func UnmarshalPageBlockCover(data json.RawMessage) (*PageBlockCover, error) {
	var response PageBlockCover

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockEmbedded parses the JSON-encoded data and return it as PageBlockEmbedded object.
func UnmarshalPageBlockEmbedded(data json.RawMessage) (*PageBlockEmbedded, error) {
	var response PageBlockEmbedded

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockEmbeddedPost parses the JSON-encoded data and return it as PageBlockEmbeddedPost object.
func UnmarshalPageBlockEmbeddedPost(data json.RawMessage) (*PageBlockEmbeddedPost, error) {
	var response PageBlockEmbeddedPost

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockCollage parses the JSON-encoded data and return it as PageBlockCollage object.
func UnmarshalPageBlockCollage(data json.RawMessage) (*PageBlockCollage, error) {
	var response PageBlockCollage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockSlideshow parses the JSON-encoded data and return it as PageBlockSlideshow object.
func UnmarshalPageBlockSlideshow(data json.RawMessage) (*PageBlockSlideshow, error) {
	var response PageBlockSlideshow

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPageBlockChatLink parses the JSON-encoded data and return it as PageBlockChatLink object.
func UnmarshalPageBlockChatLink(data json.RawMessage) (*PageBlockChatLink, error) {
	var response PageBlockChatLink

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalWebPageInstantView parses the JSON-encoded data and return it as WebPageInstantView object.
func UnmarshalWebPageInstantView(data json.RawMessage) (*WebPageInstantView, error) {
	var response WebPageInstantView

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalWebPage parses the JSON-encoded data and return it as WebPage object.
func UnmarshalWebPage(data json.RawMessage) (*WebPage, error) {
	var response WebPage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAddress parses the JSON-encoded data and return it as Address object.
func UnmarshalAddress(data json.RawMessage) (*Address, error) {
	var response Address

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLabeledPricePart parses the JSON-encoded data and return it as LabeledPricePart object.
func UnmarshalLabeledPricePart(data json.RawMessage) (*LabeledPricePart, error) {
	var response LabeledPricePart

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInvoice parses the JSON-encoded data and return it as Invoice object.
func UnmarshalInvoice(data json.RawMessage) (*Invoice, error) {
	var response Invoice

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOrderInfo parses the JSON-encoded data and return it as OrderInfo object.
func UnmarshalOrderInfo(data json.RawMessage) (*OrderInfo, error) {
	var response OrderInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalShippingOption parses the JSON-encoded data and return it as ShippingOption object.
func UnmarshalShippingOption(data json.RawMessage) (*ShippingOption, error) {
	var response ShippingOption

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSavedCredentials parses the JSON-encoded data and return it as SavedCredentials object.
func UnmarshalSavedCredentials(data json.RawMessage) (*SavedCredentials, error) {
	var response SavedCredentials

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputCredentialsSaved parses the JSON-encoded data and return it as InputCredentialsSaved object.
func UnmarshalInputCredentialsSaved(data json.RawMessage) (*InputCredentialsSaved, error) {
	var response InputCredentialsSaved

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputCredentialsNew parses the JSON-encoded data and return it as InputCredentialsNew object.
func UnmarshalInputCredentialsNew(data json.RawMessage) (*InputCredentialsNew, error) {
	var response InputCredentialsNew

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputCredentialsAndroidPay parses the JSON-encoded data and return it as InputCredentialsAndroidPay object.
func UnmarshalInputCredentialsAndroidPay(data json.RawMessage) (*InputCredentialsAndroidPay, error) {
	var response InputCredentialsAndroidPay

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputCredentialsApplePay parses the JSON-encoded data and return it as InputCredentialsApplePay object.
func UnmarshalInputCredentialsApplePay(data json.RawMessage) (*InputCredentialsApplePay, error) {
	var response InputCredentialsApplePay

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPaymentsProviderStripe parses the JSON-encoded data and return it as PaymentsProviderStripe object.
func UnmarshalPaymentsProviderStripe(data json.RawMessage) (*PaymentsProviderStripe, error) {
	var response PaymentsProviderStripe

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPaymentForm parses the JSON-encoded data and return it as PaymentForm object.
func UnmarshalPaymentForm(data json.RawMessage) (*PaymentForm, error) {
	var response PaymentForm

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalValidatedOrderInfo parses the JSON-encoded data and return it as ValidatedOrderInfo object.
func UnmarshalValidatedOrderInfo(data json.RawMessage) (*ValidatedOrderInfo, error) {
	var response ValidatedOrderInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPaymentResult parses the JSON-encoded data and return it as PaymentResult object.
func UnmarshalPaymentResult(data json.RawMessage) (*PaymentResult, error) {
	var response PaymentResult

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPaymentReceipt parses the JSON-encoded data and return it as PaymentReceipt object.
func UnmarshalPaymentReceipt(data json.RawMessage) (*PaymentReceipt, error) {
	var response PaymentReceipt

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDatedFile parses the JSON-encoded data and return it as DatedFile object.
func UnmarshalDatedFile(data json.RawMessage) (*DatedFile, error) {
	var response DatedFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypePersonalDetails parses the JSON-encoded data and return it as PassportElementTypePersonalDetails object.
func UnmarshalPassportElementTypePersonalDetails(data json.RawMessage) (*PassportElementTypePersonalDetails, error) {
	var response PassportElementTypePersonalDetails

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypePassport parses the JSON-encoded data and return it as PassportElementTypePassport object.
func UnmarshalPassportElementTypePassport(data json.RawMessage) (*PassportElementTypePassport, error) {
	var response PassportElementTypePassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeDriverLicense parses the JSON-encoded data and return it as PassportElementTypeDriverLicense object.
func UnmarshalPassportElementTypeDriverLicense(data json.RawMessage) (*PassportElementTypeDriverLicense, error) {
	var response PassportElementTypeDriverLicense

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeIdentityCard parses the JSON-encoded data and return it as PassportElementTypeIdentityCard object.
func UnmarshalPassportElementTypeIdentityCard(data json.RawMessage) (*PassportElementTypeIdentityCard, error) {
	var response PassportElementTypeIdentityCard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeInternalPassport parses the JSON-encoded data and return it as PassportElementTypeInternalPassport object.
func UnmarshalPassportElementTypeInternalPassport(data json.RawMessage) (*PassportElementTypeInternalPassport, error) {
	var response PassportElementTypeInternalPassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeAddress parses the JSON-encoded data and return it as PassportElementTypeAddress object.
func UnmarshalPassportElementTypeAddress(data json.RawMessage) (*PassportElementTypeAddress, error) {
	var response PassportElementTypeAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeUtilityBill parses the JSON-encoded data and return it as PassportElementTypeUtilityBill object.
func UnmarshalPassportElementTypeUtilityBill(data json.RawMessage) (*PassportElementTypeUtilityBill, error) {
	var response PassportElementTypeUtilityBill

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeBankStatement parses the JSON-encoded data and return it as PassportElementTypeBankStatement object.
func UnmarshalPassportElementTypeBankStatement(data json.RawMessage) (*PassportElementTypeBankStatement, error) {
	var response PassportElementTypeBankStatement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeRentalAgreement parses the JSON-encoded data and return it as PassportElementTypeRentalAgreement object.
func UnmarshalPassportElementTypeRentalAgreement(data json.RawMessage) (*PassportElementTypeRentalAgreement, error) {
	var response PassportElementTypeRentalAgreement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypePassportRegistration parses the JSON-encoded data and return it as PassportElementTypePassportRegistration object.
func UnmarshalPassportElementTypePassportRegistration(data json.RawMessage) (*PassportElementTypePassportRegistration, error) {
	var response PassportElementTypePassportRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeTemporaryRegistration parses the JSON-encoded data and return it as PassportElementTypeTemporaryRegistration object.
func UnmarshalPassportElementTypeTemporaryRegistration(data json.RawMessage) (*PassportElementTypeTemporaryRegistration, error) {
	var response PassportElementTypeTemporaryRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypePhoneNumber parses the JSON-encoded data and return it as PassportElementTypePhoneNumber object.
func UnmarshalPassportElementTypePhoneNumber(data json.RawMessage) (*PassportElementTypePhoneNumber, error) {
	var response PassportElementTypePhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTypeEmailAddress parses the JSON-encoded data and return it as PassportElementTypeEmailAddress object.
func UnmarshalPassportElementTypeEmailAddress(data json.RawMessage) (*PassportElementTypeEmailAddress, error) {
	var response PassportElementTypeEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDate parses the JSON-encoded data and return it as Date object.
func UnmarshalDate(data json.RawMessage) (*Date, error) {
	var response Date

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPersonalDetails parses the JSON-encoded data and return it as PersonalDetails object.
func UnmarshalPersonalDetails(data json.RawMessage) (*PersonalDetails, error) {
	var response PersonalDetails

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalIdentityDocument parses the JSON-encoded data and return it as IdentityDocument object.
func UnmarshalIdentityDocument(data json.RawMessage) (*IdentityDocument, error) {
	var response IdentityDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputIdentityDocument parses the JSON-encoded data and return it as InputIdentityDocument object.
func UnmarshalInputIdentityDocument(data json.RawMessage) (*InputIdentityDocument, error) {
	var response InputIdentityDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPersonalDocument parses the JSON-encoded data and return it as PersonalDocument object.
func UnmarshalPersonalDocument(data json.RawMessage) (*PersonalDocument, error) {
	var response PersonalDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPersonalDocument parses the JSON-encoded data and return it as InputPersonalDocument object.
func UnmarshalInputPersonalDocument(data json.RawMessage) (*InputPersonalDocument, error) {
	var response InputPersonalDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementPersonalDetails parses the JSON-encoded data and return it as PassportElementPersonalDetails object.
func UnmarshalPassportElementPersonalDetails(data json.RawMessage) (*PassportElementPersonalDetails, error) {
	var response PassportElementPersonalDetails

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementPassport parses the JSON-encoded data and return it as PassportElementPassport object.
func UnmarshalPassportElementPassport(data json.RawMessage) (*PassportElementPassport, error) {
	var response PassportElementPassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementDriverLicense parses the JSON-encoded data and return it as PassportElementDriverLicense object.
func UnmarshalPassportElementDriverLicense(data json.RawMessage) (*PassportElementDriverLicense, error) {
	var response PassportElementDriverLicense

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementIdentityCard parses the JSON-encoded data and return it as PassportElementIdentityCard object.
func UnmarshalPassportElementIdentityCard(data json.RawMessage) (*PassportElementIdentityCard, error) {
	var response PassportElementIdentityCard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementInternalPassport parses the JSON-encoded data and return it as PassportElementInternalPassport object.
func UnmarshalPassportElementInternalPassport(data json.RawMessage) (*PassportElementInternalPassport, error) {
	var response PassportElementInternalPassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementAddress parses the JSON-encoded data and return it as PassportElementAddress object.
func UnmarshalPassportElementAddress(data json.RawMessage) (*PassportElementAddress, error) {
	var response PassportElementAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementUtilityBill parses the JSON-encoded data and return it as PassportElementUtilityBill object.
func UnmarshalPassportElementUtilityBill(data json.RawMessage) (*PassportElementUtilityBill, error) {
	var response PassportElementUtilityBill

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementBankStatement parses the JSON-encoded data and return it as PassportElementBankStatement object.
func UnmarshalPassportElementBankStatement(data json.RawMessage) (*PassportElementBankStatement, error) {
	var response PassportElementBankStatement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementRentalAgreement parses the JSON-encoded data and return it as PassportElementRentalAgreement object.
func UnmarshalPassportElementRentalAgreement(data json.RawMessage) (*PassportElementRentalAgreement, error) {
	var response PassportElementRentalAgreement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementPassportRegistration parses the JSON-encoded data and return it as PassportElementPassportRegistration object.
func UnmarshalPassportElementPassportRegistration(data json.RawMessage) (*PassportElementPassportRegistration, error) {
	var response PassportElementPassportRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementTemporaryRegistration parses the JSON-encoded data and return it as PassportElementTemporaryRegistration object.
func UnmarshalPassportElementTemporaryRegistration(data json.RawMessage) (*PassportElementTemporaryRegistration, error) {
	var response PassportElementTemporaryRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementPhoneNumber parses the JSON-encoded data and return it as PassportElementPhoneNumber object.
func UnmarshalPassportElementPhoneNumber(data json.RawMessage) (*PassportElementPhoneNumber, error) {
	var response PassportElementPhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementEmailAddress parses the JSON-encoded data and return it as PassportElementEmailAddress object.
func UnmarshalPassportElementEmailAddress(data json.RawMessage) (*PassportElementEmailAddress, error) {
	var response PassportElementEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementPersonalDetails parses the JSON-encoded data and return it as InputPassportElementPersonalDetails object.
func UnmarshalInputPassportElementPersonalDetails(data json.RawMessage) (*InputPassportElementPersonalDetails, error) {
	var response InputPassportElementPersonalDetails

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementPassport parses the JSON-encoded data and return it as InputPassportElementPassport object.
func UnmarshalInputPassportElementPassport(data json.RawMessage) (*InputPassportElementPassport, error) {
	var response InputPassportElementPassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementDriverLicense parses the JSON-encoded data and return it as InputPassportElementDriverLicense object.
func UnmarshalInputPassportElementDriverLicense(data json.RawMessage) (*InputPassportElementDriverLicense, error) {
	var response InputPassportElementDriverLicense

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementIdentityCard parses the JSON-encoded data and return it as InputPassportElementIdentityCard object.
func UnmarshalInputPassportElementIdentityCard(data json.RawMessage) (*InputPassportElementIdentityCard, error) {
	var response InputPassportElementIdentityCard

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementInternalPassport parses the JSON-encoded data and return it as InputPassportElementInternalPassport object.
func UnmarshalInputPassportElementInternalPassport(data json.RawMessage) (*InputPassportElementInternalPassport, error) {
	var response InputPassportElementInternalPassport

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementAddress parses the JSON-encoded data and return it as InputPassportElementAddress object.
func UnmarshalInputPassportElementAddress(data json.RawMessage) (*InputPassportElementAddress, error) {
	var response InputPassportElementAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementUtilityBill parses the JSON-encoded data and return it as InputPassportElementUtilityBill object.
func UnmarshalInputPassportElementUtilityBill(data json.RawMessage) (*InputPassportElementUtilityBill, error) {
	var response InputPassportElementUtilityBill

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementBankStatement parses the JSON-encoded data and return it as InputPassportElementBankStatement object.
func UnmarshalInputPassportElementBankStatement(data json.RawMessage) (*InputPassportElementBankStatement, error) {
	var response InputPassportElementBankStatement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementRentalAgreement parses the JSON-encoded data and return it as InputPassportElementRentalAgreement object.
func UnmarshalInputPassportElementRentalAgreement(data json.RawMessage) (*InputPassportElementRentalAgreement, error) {
	var response InputPassportElementRentalAgreement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementPassportRegistration parses the JSON-encoded data and return it as InputPassportElementPassportRegistration object.
func UnmarshalInputPassportElementPassportRegistration(data json.RawMessage) (*InputPassportElementPassportRegistration, error) {
	var response InputPassportElementPassportRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementTemporaryRegistration parses the JSON-encoded data and return it as InputPassportElementTemporaryRegistration object.
func UnmarshalInputPassportElementTemporaryRegistration(data json.RawMessage) (*InputPassportElementTemporaryRegistration, error) {
	var response InputPassportElementTemporaryRegistration

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementPhoneNumber parses the JSON-encoded data and return it as InputPassportElementPhoneNumber object.
func UnmarshalInputPassportElementPhoneNumber(data json.RawMessage) (*InputPassportElementPhoneNumber, error) {
	var response InputPassportElementPhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementEmailAddress parses the JSON-encoded data and return it as InputPassportElementEmailAddress object.
func UnmarshalInputPassportElementEmailAddress(data json.RawMessage) (*InputPassportElementEmailAddress, error) {
	var response InputPassportElementEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElements parses the JSON-encoded data and return it as PassportElements object.
func UnmarshalPassportElements(data json.RawMessage) (*PassportElements, error) {
	var response PassportElements

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceUnspecified parses the JSON-encoded data and return it as PassportElementErrorSourceUnspecified object.
func UnmarshalPassportElementErrorSourceUnspecified(data json.RawMessage) (*PassportElementErrorSourceUnspecified, error) {
	var response PassportElementErrorSourceUnspecified

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceDataField parses the JSON-encoded data and return it as PassportElementErrorSourceDataField object.
func UnmarshalPassportElementErrorSourceDataField(data json.RawMessage) (*PassportElementErrorSourceDataField, error) {
	var response PassportElementErrorSourceDataField

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceFrontSide parses the JSON-encoded data and return it as PassportElementErrorSourceFrontSide object.
func UnmarshalPassportElementErrorSourceFrontSide(data json.RawMessage) (*PassportElementErrorSourceFrontSide, error) {
	var response PassportElementErrorSourceFrontSide

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceReverseSide parses the JSON-encoded data and return it as PassportElementErrorSourceReverseSide object.
func UnmarshalPassportElementErrorSourceReverseSide(data json.RawMessage) (*PassportElementErrorSourceReverseSide, error) {
	var response PassportElementErrorSourceReverseSide

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceSelfie parses the JSON-encoded data and return it as PassportElementErrorSourceSelfie object.
func UnmarshalPassportElementErrorSourceSelfie(data json.RawMessage) (*PassportElementErrorSourceSelfie, error) {
	var response PassportElementErrorSourceSelfie

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceTranslationFile parses the JSON-encoded data and return it as PassportElementErrorSourceTranslationFile object.
func UnmarshalPassportElementErrorSourceTranslationFile(data json.RawMessage) (*PassportElementErrorSourceTranslationFile, error) {
	var response PassportElementErrorSourceTranslationFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceTranslationFiles parses the JSON-encoded data and return it as PassportElementErrorSourceTranslationFiles object.
func UnmarshalPassportElementErrorSourceTranslationFiles(data json.RawMessage) (*PassportElementErrorSourceTranslationFiles, error) {
	var response PassportElementErrorSourceTranslationFiles

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceFile parses the JSON-encoded data and return it as PassportElementErrorSourceFile object.
func UnmarshalPassportElementErrorSourceFile(data json.RawMessage) (*PassportElementErrorSourceFile, error) {
	var response PassportElementErrorSourceFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementErrorSourceFiles parses the JSON-encoded data and return it as PassportElementErrorSourceFiles object.
func UnmarshalPassportElementErrorSourceFiles(data json.RawMessage) (*PassportElementErrorSourceFiles, error) {
	var response PassportElementErrorSourceFiles

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportElementError parses the JSON-encoded data and return it as PassportElementError object.
func UnmarshalPassportElementError(data json.RawMessage) (*PassportElementError, error) {
	var response PassportElementError

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportSuitableElement parses the JSON-encoded data and return it as PassportSuitableElement object.
func UnmarshalPassportSuitableElement(data json.RawMessage) (*PassportSuitableElement, error) {
	var response PassportSuitableElement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportRequiredElement parses the JSON-encoded data and return it as PassportRequiredElement object.
func UnmarshalPassportRequiredElement(data json.RawMessage) (*PassportRequiredElement, error) {
	var response PassportRequiredElement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPassportAuthorizationForm parses the JSON-encoded data and return it as PassportAuthorizationForm object.
func UnmarshalPassportAuthorizationForm(data json.RawMessage) (*PassportAuthorizationForm, error) {
	var response PassportAuthorizationForm

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalEncryptedCredentials parses the JSON-encoded data and return it as EncryptedCredentials object.
func UnmarshalEncryptedCredentials(data json.RawMessage) (*EncryptedCredentials, error) {
	var response EncryptedCredentials

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalEncryptedPassportElement parses the JSON-encoded data and return it as EncryptedPassportElement object.
func UnmarshalEncryptedPassportElement(data json.RawMessage) (*EncryptedPassportElement, error) {
	var response EncryptedPassportElement

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceUnspecified parses the JSON-encoded data and return it as InputPassportElementErrorSourceUnspecified object.
func UnmarshalInputPassportElementErrorSourceUnspecified(data json.RawMessage) (*InputPassportElementErrorSourceUnspecified, error) {
	var response InputPassportElementErrorSourceUnspecified

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceDataField parses the JSON-encoded data and return it as InputPassportElementErrorSourceDataField object.
func UnmarshalInputPassportElementErrorSourceDataField(data json.RawMessage) (*InputPassportElementErrorSourceDataField, error) {
	var response InputPassportElementErrorSourceDataField

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceFrontSide parses the JSON-encoded data and return it as InputPassportElementErrorSourceFrontSide object.
func UnmarshalInputPassportElementErrorSourceFrontSide(data json.RawMessage) (*InputPassportElementErrorSourceFrontSide, error) {
	var response InputPassportElementErrorSourceFrontSide

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceReverseSide parses the JSON-encoded data and return it as InputPassportElementErrorSourceReverseSide object.
func UnmarshalInputPassportElementErrorSourceReverseSide(data json.RawMessage) (*InputPassportElementErrorSourceReverseSide, error) {
	var response InputPassportElementErrorSourceReverseSide

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceSelfie parses the JSON-encoded data and return it as InputPassportElementErrorSourceSelfie object.
func UnmarshalInputPassportElementErrorSourceSelfie(data json.RawMessage) (*InputPassportElementErrorSourceSelfie, error) {
	var response InputPassportElementErrorSourceSelfie

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceTranslationFile parses the JSON-encoded data and return it as InputPassportElementErrorSourceTranslationFile object.
func UnmarshalInputPassportElementErrorSourceTranslationFile(data json.RawMessage) (*InputPassportElementErrorSourceTranslationFile, error) {
	var response InputPassportElementErrorSourceTranslationFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceTranslationFiles parses the JSON-encoded data and return it as InputPassportElementErrorSourceTranslationFiles object.
func UnmarshalInputPassportElementErrorSourceTranslationFiles(data json.RawMessage) (*InputPassportElementErrorSourceTranslationFiles, error) {
	var response InputPassportElementErrorSourceTranslationFiles

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceFile parses the JSON-encoded data and return it as InputPassportElementErrorSourceFile object.
func UnmarshalInputPassportElementErrorSourceFile(data json.RawMessage) (*InputPassportElementErrorSourceFile, error) {
	var response InputPassportElementErrorSourceFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementErrorSourceFiles parses the JSON-encoded data and return it as InputPassportElementErrorSourceFiles object.
func UnmarshalInputPassportElementErrorSourceFiles(data json.RawMessage) (*InputPassportElementErrorSourceFiles, error) {
	var response InputPassportElementErrorSourceFiles

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputPassportElementError parses the JSON-encoded data and return it as InputPassportElementError object.
func UnmarshalInputPassportElementError(data json.RawMessage) (*InputPassportElementError, error) {
	var response InputPassportElementError

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageText parses the JSON-encoded data and return it as MessageText object.
func UnmarshalMessageText(data json.RawMessage) (*MessageText, error) {
	var response MessageText

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageAnimation parses the JSON-encoded data and return it as MessageAnimation object.
func UnmarshalMessageAnimation(data json.RawMessage) (*MessageAnimation, error) {
	var response MessageAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageAudio parses the JSON-encoded data and return it as MessageAudio object.
func UnmarshalMessageAudio(data json.RawMessage) (*MessageAudio, error) {
	var response MessageAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageDocument parses the JSON-encoded data and return it as MessageDocument object.
func UnmarshalMessageDocument(data json.RawMessage) (*MessageDocument, error) {
	var response MessageDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePhoto parses the JSON-encoded data and return it as MessagePhoto object.
func UnmarshalMessagePhoto(data json.RawMessage) (*MessagePhoto, error) {
	var response MessagePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageExpiredPhoto parses the JSON-encoded data and return it as MessageExpiredPhoto object.
func UnmarshalMessageExpiredPhoto(data json.RawMessage) (*MessageExpiredPhoto, error) {
	var response MessageExpiredPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageSticker parses the JSON-encoded data and return it as MessageSticker object.
func UnmarshalMessageSticker(data json.RawMessage) (*MessageSticker, error) {
	var response MessageSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageVideo parses the JSON-encoded data and return it as MessageVideo object.
func UnmarshalMessageVideo(data json.RawMessage) (*MessageVideo, error) {
	var response MessageVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageExpiredVideo parses the JSON-encoded data and return it as MessageExpiredVideo object.
func UnmarshalMessageExpiredVideo(data json.RawMessage) (*MessageExpiredVideo, error) {
	var response MessageExpiredVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageVideoNote parses the JSON-encoded data and return it as MessageVideoNote object.
func UnmarshalMessageVideoNote(data json.RawMessage) (*MessageVideoNote, error) {
	var response MessageVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageVoiceNote parses the JSON-encoded data and return it as MessageVoiceNote object.
func UnmarshalMessageVoiceNote(data json.RawMessage) (*MessageVoiceNote, error) {
	var response MessageVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageLocation parses the JSON-encoded data and return it as MessageLocation object.
func UnmarshalMessageLocation(data json.RawMessage) (*MessageLocation, error) {
	var response MessageLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageVenue parses the JSON-encoded data and return it as MessageVenue object.
func UnmarshalMessageVenue(data json.RawMessage) (*MessageVenue, error) {
	var response MessageVenue

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageContact parses the JSON-encoded data and return it as MessageContact object.
func UnmarshalMessageContact(data json.RawMessage) (*MessageContact, error) {
	var response MessageContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageGame parses the JSON-encoded data and return it as MessageGame object.
func UnmarshalMessageGame(data json.RawMessage) (*MessageGame, error) {
	var response MessageGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageInvoice parses the JSON-encoded data and return it as MessageInvoice object.
func UnmarshalMessageInvoice(data json.RawMessage) (*MessageInvoice, error) {
	var response MessageInvoice

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageCall parses the JSON-encoded data and return it as MessageCall object.
func UnmarshalMessageCall(data json.RawMessage) (*MessageCall, error) {
	var response MessageCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageBasicGroupChatCreate parses the JSON-encoded data and return it as MessageBasicGroupChatCreate object.
func UnmarshalMessageBasicGroupChatCreate(data json.RawMessage) (*MessageBasicGroupChatCreate, error) {
	var response MessageBasicGroupChatCreate

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageSupergroupChatCreate parses the JSON-encoded data and return it as MessageSupergroupChatCreate object.
func UnmarshalMessageSupergroupChatCreate(data json.RawMessage) (*MessageSupergroupChatCreate, error) {
	var response MessageSupergroupChatCreate

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatChangeTitle parses the JSON-encoded data and return it as MessageChatChangeTitle object.
func UnmarshalMessageChatChangeTitle(data json.RawMessage) (*MessageChatChangeTitle, error) {
	var response MessageChatChangeTitle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatChangePhoto parses the JSON-encoded data and return it as MessageChatChangePhoto object.
func UnmarshalMessageChatChangePhoto(data json.RawMessage) (*MessageChatChangePhoto, error) {
	var response MessageChatChangePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatDeletePhoto parses the JSON-encoded data and return it as MessageChatDeletePhoto object.
func UnmarshalMessageChatDeletePhoto(data json.RawMessage) (*MessageChatDeletePhoto, error) {
	var response MessageChatDeletePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatAddMembers parses the JSON-encoded data and return it as MessageChatAddMembers object.
func UnmarshalMessageChatAddMembers(data json.RawMessage) (*MessageChatAddMembers, error) {
	var response MessageChatAddMembers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatJoinByLink parses the JSON-encoded data and return it as MessageChatJoinByLink object.
func UnmarshalMessageChatJoinByLink(data json.RawMessage) (*MessageChatJoinByLink, error) {
	var response MessageChatJoinByLink

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatDeleteMember parses the JSON-encoded data and return it as MessageChatDeleteMember object.
func UnmarshalMessageChatDeleteMember(data json.RawMessage) (*MessageChatDeleteMember, error) {
	var response MessageChatDeleteMember

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatUpgradeTo parses the JSON-encoded data and return it as MessageChatUpgradeTo object.
func UnmarshalMessageChatUpgradeTo(data json.RawMessage) (*MessageChatUpgradeTo, error) {
	var response MessageChatUpgradeTo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatUpgradeFrom parses the JSON-encoded data and return it as MessageChatUpgradeFrom object.
func UnmarshalMessageChatUpgradeFrom(data json.RawMessage) (*MessageChatUpgradeFrom, error) {
	var response MessageChatUpgradeFrom

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePinMessage parses the JSON-encoded data and return it as MessagePinMessage object.
func UnmarshalMessagePinMessage(data json.RawMessage) (*MessagePinMessage, error) {
	var response MessagePinMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageScreenshotTaken parses the JSON-encoded data and return it as MessageScreenshotTaken object.
func UnmarshalMessageScreenshotTaken(data json.RawMessage) (*MessageScreenshotTaken, error) {
	var response MessageScreenshotTaken

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageChatSetTTL parses the JSON-encoded data and return it as MessageChatSetTTL object.
func UnmarshalMessageChatSetTTL(data json.RawMessage) (*MessageChatSetTTL, error) {
	var response MessageChatSetTTL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageCustomServiceAction parses the JSON-encoded data and return it as MessageCustomServiceAction object.
func UnmarshalMessageCustomServiceAction(data json.RawMessage) (*MessageCustomServiceAction, error) {
	var response MessageCustomServiceAction

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageGameScore parses the JSON-encoded data and return it as MessageGameScore object.
func UnmarshalMessageGameScore(data json.RawMessage) (*MessageGameScore, error) {
	var response MessageGameScore

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePaymentSuccessful parses the JSON-encoded data and return it as MessagePaymentSuccessful object.
func UnmarshalMessagePaymentSuccessful(data json.RawMessage) (*MessagePaymentSuccessful, error) {
	var response MessagePaymentSuccessful

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePaymentSuccessfulBot parses the JSON-encoded data and return it as MessagePaymentSuccessfulBot object.
func UnmarshalMessagePaymentSuccessfulBot(data json.RawMessage) (*MessagePaymentSuccessfulBot, error) {
	var response MessagePaymentSuccessfulBot

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageContactRegistered parses the JSON-encoded data and return it as MessageContactRegistered object.
func UnmarshalMessageContactRegistered(data json.RawMessage) (*MessageContactRegistered, error) {
	var response MessageContactRegistered

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageWebsiteConnected parses the JSON-encoded data and return it as MessageWebsiteConnected object.
func UnmarshalMessageWebsiteConnected(data json.RawMessage) (*MessageWebsiteConnected, error) {
	var response MessageWebsiteConnected

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePassportDataSent parses the JSON-encoded data and return it as MessagePassportDataSent object.
func UnmarshalMessagePassportDataSent(data json.RawMessage) (*MessagePassportDataSent, error) {
	var response MessagePassportDataSent

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessagePassportDataReceived parses the JSON-encoded data and return it as MessagePassportDataReceived object.
func UnmarshalMessagePassportDataReceived(data json.RawMessage) (*MessagePassportDataReceived, error) {
	var response MessagePassportDataReceived

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalMessageUnsupported parses the JSON-encoded data and return it as MessageUnsupported object.
func UnmarshalMessageUnsupported(data json.RawMessage) (*MessageUnsupported, error) {
	var response MessageUnsupported

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeMention parses the JSON-encoded data and return it as TextEntityTypeMention object.
func UnmarshalTextEntityTypeMention(data json.RawMessage) (*TextEntityTypeMention, error) {
	var response TextEntityTypeMention

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeHashtag parses the JSON-encoded data and return it as TextEntityTypeHashtag object.
func UnmarshalTextEntityTypeHashtag(data json.RawMessage) (*TextEntityTypeHashtag, error) {
	var response TextEntityTypeHashtag

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeCashtag parses the JSON-encoded data and return it as TextEntityTypeCashtag object.
func UnmarshalTextEntityTypeCashtag(data json.RawMessage) (*TextEntityTypeCashtag, error) {
	var response TextEntityTypeCashtag

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeBotCommand parses the JSON-encoded data and return it as TextEntityTypeBotCommand object.
func UnmarshalTextEntityTypeBotCommand(data json.RawMessage) (*TextEntityTypeBotCommand, error) {
	var response TextEntityTypeBotCommand

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeURL parses the JSON-encoded data and return it as TextEntityTypeURL object.
func UnmarshalTextEntityTypeURL(data json.RawMessage) (*TextEntityTypeURL, error) {
	var response TextEntityTypeURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeEmailAddress parses the JSON-encoded data and return it as TextEntityTypeEmailAddress object.
func UnmarshalTextEntityTypeEmailAddress(data json.RawMessage) (*TextEntityTypeEmailAddress, error) {
	var response TextEntityTypeEmailAddress

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeBold parses the JSON-encoded data and return it as TextEntityTypeBold object.
func UnmarshalTextEntityTypeBold(data json.RawMessage) (*TextEntityTypeBold, error) {
	var response TextEntityTypeBold

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeItalic parses the JSON-encoded data and return it as TextEntityTypeItalic object.
func UnmarshalTextEntityTypeItalic(data json.RawMessage) (*TextEntityTypeItalic, error) {
	var response TextEntityTypeItalic

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeCode parses the JSON-encoded data and return it as TextEntityTypeCode object.
func UnmarshalTextEntityTypeCode(data json.RawMessage) (*TextEntityTypeCode, error) {
	var response TextEntityTypeCode

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypePre parses the JSON-encoded data and return it as TextEntityTypePre object.
func UnmarshalTextEntityTypePre(data json.RawMessage) (*TextEntityTypePre, error) {
	var response TextEntityTypePre

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypePreCode parses the JSON-encoded data and return it as TextEntityTypePreCode object.
func UnmarshalTextEntityTypePreCode(data json.RawMessage) (*TextEntityTypePreCode, error) {
	var response TextEntityTypePreCode

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeTextURL parses the JSON-encoded data and return it as TextEntityTypeTextURL object.
func UnmarshalTextEntityTypeTextURL(data json.RawMessage) (*TextEntityTypeTextURL, error) {
	var response TextEntityTypeTextURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypeMentionName parses the JSON-encoded data and return it as TextEntityTypeMentionName object.
func UnmarshalTextEntityTypeMentionName(data json.RawMessage) (*TextEntityTypeMentionName, error) {
	var response TextEntityTypeMentionName

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextEntityTypePhoneNumber parses the JSON-encoded data and return it as TextEntityTypePhoneNumber object.
func UnmarshalTextEntityTypePhoneNumber(data json.RawMessage) (*TextEntityTypePhoneNumber, error) {
	var response TextEntityTypePhoneNumber

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputThumbnail parses the JSON-encoded data and return it as InputThumbnail object.
func UnmarshalInputThumbnail(data json.RawMessage) (*InputThumbnail, error) {
	var response InputThumbnail

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageText parses the JSON-encoded data and return it as InputMessageText object.
func UnmarshalInputMessageText(data json.RawMessage) (*InputMessageText, error) {
	var response InputMessageText

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageAnimation parses the JSON-encoded data and return it as InputMessageAnimation object.
func UnmarshalInputMessageAnimation(data json.RawMessage) (*InputMessageAnimation, error) {
	var response InputMessageAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageAudio parses the JSON-encoded data and return it as InputMessageAudio object.
func UnmarshalInputMessageAudio(data json.RawMessage) (*InputMessageAudio, error) {
	var response InputMessageAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageDocument parses the JSON-encoded data and return it as InputMessageDocument object.
func UnmarshalInputMessageDocument(data json.RawMessage) (*InputMessageDocument, error) {
	var response InputMessageDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessagePhoto parses the JSON-encoded data and return it as InputMessagePhoto object.
func UnmarshalInputMessagePhoto(data json.RawMessage) (*InputMessagePhoto, error) {
	var response InputMessagePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageSticker parses the JSON-encoded data and return it as InputMessageSticker object.
func UnmarshalInputMessageSticker(data json.RawMessage) (*InputMessageSticker, error) {
	var response InputMessageSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageVideo parses the JSON-encoded data and return it as InputMessageVideo object.
func UnmarshalInputMessageVideo(data json.RawMessage) (*InputMessageVideo, error) {
	var response InputMessageVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageVideoNote parses the JSON-encoded data and return it as InputMessageVideoNote object.
func UnmarshalInputMessageVideoNote(data json.RawMessage) (*InputMessageVideoNote, error) {
	var response InputMessageVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageVoiceNote parses the JSON-encoded data and return it as InputMessageVoiceNote object.
func UnmarshalInputMessageVoiceNote(data json.RawMessage) (*InputMessageVoiceNote, error) {
	var response InputMessageVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageLocation parses the JSON-encoded data and return it as InputMessageLocation object.
func UnmarshalInputMessageLocation(data json.RawMessage) (*InputMessageLocation, error) {
	var response InputMessageLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageVenue parses the JSON-encoded data and return it as InputMessageVenue object.
func UnmarshalInputMessageVenue(data json.RawMessage) (*InputMessageVenue, error) {
	var response InputMessageVenue

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageContact parses the JSON-encoded data and return it as InputMessageContact object.
func UnmarshalInputMessageContact(data json.RawMessage) (*InputMessageContact, error) {
	var response InputMessageContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageGame parses the JSON-encoded data and return it as InputMessageGame object.
func UnmarshalInputMessageGame(data json.RawMessage) (*InputMessageGame, error) {
	var response InputMessageGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageInvoice parses the JSON-encoded data and return it as InputMessageInvoice object.
func UnmarshalInputMessageInvoice(data json.RawMessage) (*InputMessageInvoice, error) {
	var response InputMessageInvoice

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputMessageForwarded parses the JSON-encoded data and return it as InputMessageForwarded object.
func UnmarshalInputMessageForwarded(data json.RawMessage) (*InputMessageForwarded, error) {
	var response InputMessageForwarded

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterEmpty parses the JSON-encoded data and return it as SearchMessagesFilterEmpty object.
func UnmarshalSearchMessagesFilterEmpty(data json.RawMessage) (*SearchMessagesFilterEmpty, error) {
	var response SearchMessagesFilterEmpty

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterAnimation parses the JSON-encoded data and return it as SearchMessagesFilterAnimation object.
func UnmarshalSearchMessagesFilterAnimation(data json.RawMessage) (*SearchMessagesFilterAnimation, error) {
	var response SearchMessagesFilterAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterAudio parses the JSON-encoded data and return it as SearchMessagesFilterAudio object.
func UnmarshalSearchMessagesFilterAudio(data json.RawMessage) (*SearchMessagesFilterAudio, error) {
	var response SearchMessagesFilterAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterDocument parses the JSON-encoded data and return it as SearchMessagesFilterDocument object.
func UnmarshalSearchMessagesFilterDocument(data json.RawMessage) (*SearchMessagesFilterDocument, error) {
	var response SearchMessagesFilterDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterPhoto parses the JSON-encoded data and return it as SearchMessagesFilterPhoto object.
func UnmarshalSearchMessagesFilterPhoto(data json.RawMessage) (*SearchMessagesFilterPhoto, error) {
	var response SearchMessagesFilterPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterVideo parses the JSON-encoded data and return it as SearchMessagesFilterVideo object.
func UnmarshalSearchMessagesFilterVideo(data json.RawMessage) (*SearchMessagesFilterVideo, error) {
	var response SearchMessagesFilterVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterVoiceNote parses the JSON-encoded data and return it as SearchMessagesFilterVoiceNote object.
func UnmarshalSearchMessagesFilterVoiceNote(data json.RawMessage) (*SearchMessagesFilterVoiceNote, error) {
	var response SearchMessagesFilterVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterPhotoAndVideo parses the JSON-encoded data and return it as SearchMessagesFilterPhotoAndVideo object.
func UnmarshalSearchMessagesFilterPhotoAndVideo(data json.RawMessage) (*SearchMessagesFilterPhotoAndVideo, error) {
	var response SearchMessagesFilterPhotoAndVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterURL parses the JSON-encoded data and return it as SearchMessagesFilterURL object.
func UnmarshalSearchMessagesFilterURL(data json.RawMessage) (*SearchMessagesFilterURL, error) {
	var response SearchMessagesFilterURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterChatPhoto parses the JSON-encoded data and return it as SearchMessagesFilterChatPhoto object.
func UnmarshalSearchMessagesFilterChatPhoto(data json.RawMessage) (*SearchMessagesFilterChatPhoto, error) {
	var response SearchMessagesFilterChatPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterCall parses the JSON-encoded data and return it as SearchMessagesFilterCall object.
func UnmarshalSearchMessagesFilterCall(data json.RawMessage) (*SearchMessagesFilterCall, error) {
	var response SearchMessagesFilterCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterMissedCall parses the JSON-encoded data and return it as SearchMessagesFilterMissedCall object.
func UnmarshalSearchMessagesFilterMissedCall(data json.RawMessage) (*SearchMessagesFilterMissedCall, error) {
	var response SearchMessagesFilterMissedCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterVideoNote parses the JSON-encoded data and return it as SearchMessagesFilterVideoNote object.
func UnmarshalSearchMessagesFilterVideoNote(data json.RawMessage) (*SearchMessagesFilterVideoNote, error) {
	var response SearchMessagesFilterVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterVoiceAndVideoNote parses the JSON-encoded data and return it as SearchMessagesFilterVoiceAndVideoNote object.
func UnmarshalSearchMessagesFilterVoiceAndVideoNote(data json.RawMessage) (*SearchMessagesFilterVoiceAndVideoNote, error) {
	var response SearchMessagesFilterVoiceAndVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterMention parses the JSON-encoded data and return it as SearchMessagesFilterMention object.
func UnmarshalSearchMessagesFilterMention(data json.RawMessage) (*SearchMessagesFilterMention, error) {
	var response SearchMessagesFilterMention

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSearchMessagesFilterUnreadMention parses the JSON-encoded data and return it as SearchMessagesFilterUnreadMention object.
func UnmarshalSearchMessagesFilterUnreadMention(data json.RawMessage) (*SearchMessagesFilterUnreadMention, error) {
	var response SearchMessagesFilterUnreadMention

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionTyping parses the JSON-encoded data and return it as ChatActionTyping object.
func UnmarshalChatActionTyping(data json.RawMessage) (*ChatActionTyping, error) {
	var response ChatActionTyping

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionRecordingVideo parses the JSON-encoded data and return it as ChatActionRecordingVideo object.
func UnmarshalChatActionRecordingVideo(data json.RawMessage) (*ChatActionRecordingVideo, error) {
	var response ChatActionRecordingVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionUploadingVideo parses the JSON-encoded data and return it as ChatActionUploadingVideo object.
func UnmarshalChatActionUploadingVideo(data json.RawMessage) (*ChatActionUploadingVideo, error) {
	var response ChatActionUploadingVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionRecordingVoiceNote parses the JSON-encoded data and return it as ChatActionRecordingVoiceNote object.
func UnmarshalChatActionRecordingVoiceNote(data json.RawMessage) (*ChatActionRecordingVoiceNote, error) {
	var response ChatActionRecordingVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionUploadingVoiceNote parses the JSON-encoded data and return it as ChatActionUploadingVoiceNote object.
func UnmarshalChatActionUploadingVoiceNote(data json.RawMessage) (*ChatActionUploadingVoiceNote, error) {
	var response ChatActionUploadingVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionUploadingPhoto parses the JSON-encoded data and return it as ChatActionUploadingPhoto object.
func UnmarshalChatActionUploadingPhoto(data json.RawMessage) (*ChatActionUploadingPhoto, error) {
	var response ChatActionUploadingPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionUploadingDocument parses the JSON-encoded data and return it as ChatActionUploadingDocument object.
func UnmarshalChatActionUploadingDocument(data json.RawMessage) (*ChatActionUploadingDocument, error) {
	var response ChatActionUploadingDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionChoosingLocation parses the JSON-encoded data and return it as ChatActionChoosingLocation object.
func UnmarshalChatActionChoosingLocation(data json.RawMessage) (*ChatActionChoosingLocation, error) {
	var response ChatActionChoosingLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionChoosingContact parses the JSON-encoded data and return it as ChatActionChoosingContact object.
func UnmarshalChatActionChoosingContact(data json.RawMessage) (*ChatActionChoosingContact, error) {
	var response ChatActionChoosingContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionStartPlayingGame parses the JSON-encoded data and return it as ChatActionStartPlayingGame object.
func UnmarshalChatActionStartPlayingGame(data json.RawMessage) (*ChatActionStartPlayingGame, error) {
	var response ChatActionStartPlayingGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionRecordingVideoNote parses the JSON-encoded data and return it as ChatActionRecordingVideoNote object.
func UnmarshalChatActionRecordingVideoNote(data json.RawMessage) (*ChatActionRecordingVideoNote, error) {
	var response ChatActionRecordingVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionUploadingVideoNote parses the JSON-encoded data and return it as ChatActionUploadingVideoNote object.
func UnmarshalChatActionUploadingVideoNote(data json.RawMessage) (*ChatActionUploadingVideoNote, error) {
	var response ChatActionUploadingVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatActionCancel parses the JSON-encoded data and return it as ChatActionCancel object.
func UnmarshalChatActionCancel(data json.RawMessage) (*ChatActionCancel, error) {
	var response ChatActionCancel

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusEmpty parses the JSON-encoded data and return it as UserStatusEmpty object.
func UnmarshalUserStatusEmpty(data json.RawMessage) (*UserStatusEmpty, error) {
	var response UserStatusEmpty

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusOnline parses the JSON-encoded data and return it as UserStatusOnline object.
func UnmarshalUserStatusOnline(data json.RawMessage) (*UserStatusOnline, error) {
	var response UserStatusOnline

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusOffline parses the JSON-encoded data and return it as UserStatusOffline object.
func UnmarshalUserStatusOffline(data json.RawMessage) (*UserStatusOffline, error) {
	var response UserStatusOffline

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusRecently parses the JSON-encoded data and return it as UserStatusRecently object.
func UnmarshalUserStatusRecently(data json.RawMessage) (*UserStatusRecently, error) {
	var response UserStatusRecently

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusLastWeek parses the JSON-encoded data and return it as UserStatusLastWeek object.
func UnmarshalUserStatusLastWeek(data json.RawMessage) (*UserStatusLastWeek, error) {
	var response UserStatusLastWeek

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserStatusLastMonth parses the JSON-encoded data and return it as UserStatusLastMonth object.
func UnmarshalUserStatusLastMonth(data json.RawMessage) (*UserStatusLastMonth, error) {
	var response UserStatusLastMonth

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStickers parses the JSON-encoded data and return it as Stickers object.
func UnmarshalStickers(data json.RawMessage) (*Stickers, error) {
	var response Stickers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStickerEmojis parses the JSON-encoded data and return it as StickerEmojis object.
func UnmarshalStickerEmojis(data json.RawMessage) (*StickerEmojis, error) {
	var response StickerEmojis

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStickerSet parses the JSON-encoded data and return it as StickerSet object.
func UnmarshalStickerSet(data json.RawMessage) (*StickerSet, error) {
	var response StickerSet

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStickerSetInfo parses the JSON-encoded data and return it as StickerSetInfo object.
func UnmarshalStickerSetInfo(data json.RawMessage) (*StickerSetInfo, error) {
	var response StickerSetInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStickerSets parses the JSON-encoded data and return it as StickerSets object.
func UnmarshalStickerSets(data json.RawMessage) (*StickerSets, error) {
	var response StickerSets

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallDiscardReasonEmpty parses the JSON-encoded data and return it as CallDiscardReasonEmpty object.
func UnmarshalCallDiscardReasonEmpty(data json.RawMessage) (*CallDiscardReasonEmpty, error) {
	var response CallDiscardReasonEmpty

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallDiscardReasonMissed parses the JSON-encoded data and return it as CallDiscardReasonMissed object.
func UnmarshalCallDiscardReasonMissed(data json.RawMessage) (*CallDiscardReasonMissed, error) {
	var response CallDiscardReasonMissed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallDiscardReasonDeclined parses the JSON-encoded data and return it as CallDiscardReasonDeclined object.
func UnmarshalCallDiscardReasonDeclined(data json.RawMessage) (*CallDiscardReasonDeclined, error) {
	var response CallDiscardReasonDeclined

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallDiscardReasonDisconnected parses the JSON-encoded data and return it as CallDiscardReasonDisconnected object.
func UnmarshalCallDiscardReasonDisconnected(data json.RawMessage) (*CallDiscardReasonDisconnected, error) {
	var response CallDiscardReasonDisconnected

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallDiscardReasonHungUp parses the JSON-encoded data and return it as CallDiscardReasonHungUp object.
func UnmarshalCallDiscardReasonHungUp(data json.RawMessage) (*CallDiscardReasonHungUp, error) {
	var response CallDiscardReasonHungUp

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallProtocol parses the JSON-encoded data and return it as CallProtocol object.
func UnmarshalCallProtocol(data json.RawMessage) (*CallProtocol, error) {
	var response CallProtocol

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallConnection parses the JSON-encoded data and return it as CallConnection object.
func UnmarshalCallConnection(data json.RawMessage) (*CallConnection, error) {
	var response CallConnection

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallID parses the JSON-encoded data and return it as CallID object.
func UnmarshalCallID(data json.RawMessage) (*CallID, error) {
	var response CallID

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStatePending parses the JSON-encoded data and return it as CallStatePending object.
func UnmarshalCallStatePending(data json.RawMessage) (*CallStatePending, error) {
	var response CallStatePending

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStateExchangingKeys parses the JSON-encoded data and return it as CallStateExchangingKeys object.
func UnmarshalCallStateExchangingKeys(data json.RawMessage) (*CallStateExchangingKeys, error) {
	var response CallStateExchangingKeys

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStateReady parses the JSON-encoded data and return it as CallStateReady object.
func UnmarshalCallStateReady(data json.RawMessage) (*CallStateReady, error) {
	var response CallStateReady

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStateHangingUp parses the JSON-encoded data and return it as CallStateHangingUp object.
func UnmarshalCallStateHangingUp(data json.RawMessage) (*CallStateHangingUp, error) {
	var response CallStateHangingUp

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStateDiscarded parses the JSON-encoded data and return it as CallStateDiscarded object.
func UnmarshalCallStateDiscarded(data json.RawMessage) (*CallStateDiscarded, error) {
	var response CallStateDiscarded

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallStateError parses the JSON-encoded data and return it as CallStateError object.
func UnmarshalCallStateError(data json.RawMessage) (*CallStateError, error) {
	var response CallStateError

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCall parses the JSON-encoded data and return it as Call object.
func UnmarshalCall(data json.RawMessage) (*Call, error) {
	var response Call

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAnimations parses the JSON-encoded data and return it as Animations object.
func UnmarshalAnimations(data json.RawMessage) (*Animations, error) {
	var response Animations

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalImportedContacts parses the JSON-encoded data and return it as ImportedContacts object.
func UnmarshalImportedContacts(data json.RawMessage) (*ImportedContacts, error) {
	var response ImportedContacts

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultAnimatedGif parses the JSON-encoded data and return it as InputInlineQueryResultAnimatedGif object.
func UnmarshalInputInlineQueryResultAnimatedGif(data json.RawMessage) (*InputInlineQueryResultAnimatedGif, error) {
	var response InputInlineQueryResultAnimatedGif

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultAnimatedMpeg4 parses the JSON-encoded data and return it as InputInlineQueryResultAnimatedMpeg4 object.
func UnmarshalInputInlineQueryResultAnimatedMpeg4(data json.RawMessage) (*InputInlineQueryResultAnimatedMpeg4, error) {
	var response InputInlineQueryResultAnimatedMpeg4

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultArticle parses the JSON-encoded data and return it as InputInlineQueryResultArticle object.
func UnmarshalInputInlineQueryResultArticle(data json.RawMessage) (*InputInlineQueryResultArticle, error) {
	var response InputInlineQueryResultArticle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultAudio parses the JSON-encoded data and return it as InputInlineQueryResultAudio object.
func UnmarshalInputInlineQueryResultAudio(data json.RawMessage) (*InputInlineQueryResultAudio, error) {
	var response InputInlineQueryResultAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultContact parses the JSON-encoded data and return it as InputInlineQueryResultContact object.
func UnmarshalInputInlineQueryResultContact(data json.RawMessage) (*InputInlineQueryResultContact, error) {
	var response InputInlineQueryResultContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultDocument parses the JSON-encoded data and return it as InputInlineQueryResultDocument object.
func UnmarshalInputInlineQueryResultDocument(data json.RawMessage) (*InputInlineQueryResultDocument, error) {
	var response InputInlineQueryResultDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultGame parses the JSON-encoded data and return it as InputInlineQueryResultGame object.
func UnmarshalInputInlineQueryResultGame(data json.RawMessage) (*InputInlineQueryResultGame, error) {
	var response InputInlineQueryResultGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultLocation parses the JSON-encoded data and return it as InputInlineQueryResultLocation object.
func UnmarshalInputInlineQueryResultLocation(data json.RawMessage) (*InputInlineQueryResultLocation, error) {
	var response InputInlineQueryResultLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultPhoto parses the JSON-encoded data and return it as InputInlineQueryResultPhoto object.
func UnmarshalInputInlineQueryResultPhoto(data json.RawMessage) (*InputInlineQueryResultPhoto, error) {
	var response InputInlineQueryResultPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultSticker parses the JSON-encoded data and return it as InputInlineQueryResultSticker object.
func UnmarshalInputInlineQueryResultSticker(data json.RawMessage) (*InputInlineQueryResultSticker, error) {
	var response InputInlineQueryResultSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultVenue parses the JSON-encoded data and return it as InputInlineQueryResultVenue object.
func UnmarshalInputInlineQueryResultVenue(data json.RawMessage) (*InputInlineQueryResultVenue, error) {
	var response InputInlineQueryResultVenue

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultVideo parses the JSON-encoded data and return it as InputInlineQueryResultVideo object.
func UnmarshalInputInlineQueryResultVideo(data json.RawMessage) (*InputInlineQueryResultVideo, error) {
	var response InputInlineQueryResultVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputInlineQueryResultVoiceNote parses the JSON-encoded data and return it as InputInlineQueryResultVoiceNote object.
func UnmarshalInputInlineQueryResultVoiceNote(data json.RawMessage) (*InputInlineQueryResultVoiceNote, error) {
	var response InputInlineQueryResultVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultArticle parses the JSON-encoded data and return it as InlineQueryResultArticle object.
func UnmarshalInlineQueryResultArticle(data json.RawMessage) (*InlineQueryResultArticle, error) {
	var response InlineQueryResultArticle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultContact parses the JSON-encoded data and return it as InlineQueryResultContact object.
func UnmarshalInlineQueryResultContact(data json.RawMessage) (*InlineQueryResultContact, error) {
	var response InlineQueryResultContact

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultLocation parses the JSON-encoded data and return it as InlineQueryResultLocation object.
func UnmarshalInlineQueryResultLocation(data json.RawMessage) (*InlineQueryResultLocation, error) {
	var response InlineQueryResultLocation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultVenue parses the JSON-encoded data and return it as InlineQueryResultVenue object.
func UnmarshalInlineQueryResultVenue(data json.RawMessage) (*InlineQueryResultVenue, error) {
	var response InlineQueryResultVenue

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultGame parses the JSON-encoded data and return it as InlineQueryResultGame object.
func UnmarshalInlineQueryResultGame(data json.RawMessage) (*InlineQueryResultGame, error) {
	var response InlineQueryResultGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultAnimation parses the JSON-encoded data and return it as InlineQueryResultAnimation object.
func UnmarshalInlineQueryResultAnimation(data json.RawMessage) (*InlineQueryResultAnimation, error) {
	var response InlineQueryResultAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultAudio parses the JSON-encoded data and return it as InlineQueryResultAudio object.
func UnmarshalInlineQueryResultAudio(data json.RawMessage) (*InlineQueryResultAudio, error) {
	var response InlineQueryResultAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultDocument parses the JSON-encoded data and return it as InlineQueryResultDocument object.
func UnmarshalInlineQueryResultDocument(data json.RawMessage) (*InlineQueryResultDocument, error) {
	var response InlineQueryResultDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultPhoto parses the JSON-encoded data and return it as InlineQueryResultPhoto object.
func UnmarshalInlineQueryResultPhoto(data json.RawMessage) (*InlineQueryResultPhoto, error) {
	var response InlineQueryResultPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultSticker parses the JSON-encoded data and return it as InlineQueryResultSticker object.
func UnmarshalInlineQueryResultSticker(data json.RawMessage) (*InlineQueryResultSticker, error) {
	var response InlineQueryResultSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultVideo parses the JSON-encoded data and return it as InlineQueryResultVideo object.
func UnmarshalInlineQueryResultVideo(data json.RawMessage) (*InlineQueryResultVideo, error) {
	var response InlineQueryResultVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResultVoiceNote parses the JSON-encoded data and return it as InlineQueryResultVoiceNote object.
func UnmarshalInlineQueryResultVoiceNote(data json.RawMessage) (*InlineQueryResultVoiceNote, error) {
	var response InlineQueryResultVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInlineQueryResults parses the JSON-encoded data and return it as InlineQueryResults object.
func UnmarshalInlineQueryResults(data json.RawMessage) (*InlineQueryResults, error) {
	var response InlineQueryResults

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallbackQueryPayloadData parses the JSON-encoded data and return it as CallbackQueryPayloadData object.
func UnmarshalCallbackQueryPayloadData(data json.RawMessage) (*CallbackQueryPayloadData, error) {
	var response CallbackQueryPayloadData

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallbackQueryPayloadGame parses the JSON-encoded data and return it as CallbackQueryPayloadGame object.
func UnmarshalCallbackQueryPayloadGame(data json.RawMessage) (*CallbackQueryPayloadGame, error) {
	var response CallbackQueryPayloadGame

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCallbackQueryAnswer parses the JSON-encoded data and return it as CallbackQueryAnswer object.
func UnmarshalCallbackQueryAnswer(data json.RawMessage) (*CallbackQueryAnswer, error) {
	var response CallbackQueryAnswer

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCustomRequestResult parses the JSON-encoded data and return it as CustomRequestResult object.
func UnmarshalCustomRequestResult(data json.RawMessage) (*CustomRequestResult, error) {
	var response CustomRequestResult

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalGameHighScore parses the JSON-encoded data and return it as GameHighScore object.
func UnmarshalGameHighScore(data json.RawMessage) (*GameHighScore, error) {
	var response GameHighScore

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalGameHighScores parses the JSON-encoded data and return it as GameHighScores object.
func UnmarshalGameHighScores(data json.RawMessage) (*GameHighScores, error) {
	var response GameHighScores

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMessageEdited parses the JSON-encoded data and return it as ChatEventMessageEdited object.
func UnmarshalChatEventMessageEdited(data json.RawMessage) (*ChatEventMessageEdited, error) {
	var response ChatEventMessageEdited

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMessageDeleted parses the JSON-encoded data and return it as ChatEventMessageDeleted object.
func UnmarshalChatEventMessageDeleted(data json.RawMessage) (*ChatEventMessageDeleted, error) {
	var response ChatEventMessageDeleted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMessagePinned parses the JSON-encoded data and return it as ChatEventMessagePinned object.
func UnmarshalChatEventMessagePinned(data json.RawMessage) (*ChatEventMessagePinned, error) {
	var response ChatEventMessagePinned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMessageUnpinned parses the JSON-encoded data and return it as ChatEventMessageUnpinned object.
func UnmarshalChatEventMessageUnpinned(data json.RawMessage) (*ChatEventMessageUnpinned, error) {
	var response ChatEventMessageUnpinned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMemberJoined parses the JSON-encoded data and return it as ChatEventMemberJoined object.
func UnmarshalChatEventMemberJoined(data json.RawMessage) (*ChatEventMemberJoined, error) {
	var response ChatEventMemberJoined

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMemberLeft parses the JSON-encoded data and return it as ChatEventMemberLeft object.
func UnmarshalChatEventMemberLeft(data json.RawMessage) (*ChatEventMemberLeft, error) {
	var response ChatEventMemberLeft

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMemberInvited parses the JSON-encoded data and return it as ChatEventMemberInvited object.
func UnmarshalChatEventMemberInvited(data json.RawMessage) (*ChatEventMemberInvited, error) {
	var response ChatEventMemberInvited

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMemberPromoted parses the JSON-encoded data and return it as ChatEventMemberPromoted object.
func UnmarshalChatEventMemberPromoted(data json.RawMessage) (*ChatEventMemberPromoted, error) {
	var response ChatEventMemberPromoted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventMemberRestricted parses the JSON-encoded data and return it as ChatEventMemberRestricted object.
func UnmarshalChatEventMemberRestricted(data json.RawMessage) (*ChatEventMemberRestricted, error) {
	var response ChatEventMemberRestricted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventTitleChanged parses the JSON-encoded data and return it as ChatEventTitleChanged object.
func UnmarshalChatEventTitleChanged(data json.RawMessage) (*ChatEventTitleChanged, error) {
	var response ChatEventTitleChanged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventDescriptionChanged parses the JSON-encoded data and return it as ChatEventDescriptionChanged object.
func UnmarshalChatEventDescriptionChanged(data json.RawMessage) (*ChatEventDescriptionChanged, error) {
	var response ChatEventDescriptionChanged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventUsernameChanged parses the JSON-encoded data and return it as ChatEventUsernameChanged object.
func UnmarshalChatEventUsernameChanged(data json.RawMessage) (*ChatEventUsernameChanged, error) {
	var response ChatEventUsernameChanged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventPhotoChanged parses the JSON-encoded data and return it as ChatEventPhotoChanged object.
func UnmarshalChatEventPhotoChanged(data json.RawMessage) (*ChatEventPhotoChanged, error) {
	var response ChatEventPhotoChanged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventInvitesToggled parses the JSON-encoded data and return it as ChatEventInvitesToggled object.
func UnmarshalChatEventInvitesToggled(data json.RawMessage) (*ChatEventInvitesToggled, error) {
	var response ChatEventInvitesToggled

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventSignMessagesToggled parses the JSON-encoded data and return it as ChatEventSignMessagesToggled object.
func UnmarshalChatEventSignMessagesToggled(data json.RawMessage) (*ChatEventSignMessagesToggled, error) {
	var response ChatEventSignMessagesToggled

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventStickerSetChanged parses the JSON-encoded data and return it as ChatEventStickerSetChanged object.
func UnmarshalChatEventStickerSetChanged(data json.RawMessage) (*ChatEventStickerSetChanged, error) {
	var response ChatEventStickerSetChanged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventIsAllHistoryAvailableToggled parses the JSON-encoded data and return it as ChatEventIsAllHistoryAvailableToggled object.
func UnmarshalChatEventIsAllHistoryAvailableToggled(data json.RawMessage) (*ChatEventIsAllHistoryAvailableToggled, error) {
	var response ChatEventIsAllHistoryAvailableToggled

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEvent parses the JSON-encoded data and return it as ChatEvent object.
func UnmarshalChatEvent(data json.RawMessage) (*ChatEvent, error) {
	var response ChatEvent

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEvents parses the JSON-encoded data and return it as ChatEvents object.
func UnmarshalChatEvents(data json.RawMessage) (*ChatEvents, error) {
	var response ChatEvents

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatEventLogFilters parses the JSON-encoded data and return it as ChatEventLogFilters object.
func UnmarshalChatEventLogFilters(data json.RawMessage) (*ChatEventLogFilters, error) {
	var response ChatEventLogFilters

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackStringValueOrdinary parses the JSON-encoded data and return it as LanguagePackStringValueOrdinary object.
func UnmarshalLanguagePackStringValueOrdinary(data json.RawMessage) (*LanguagePackStringValueOrdinary, error) {
	var response LanguagePackStringValueOrdinary

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackStringValuePluralized parses the JSON-encoded data and return it as LanguagePackStringValuePluralized object.
func UnmarshalLanguagePackStringValuePluralized(data json.RawMessage) (*LanguagePackStringValuePluralized, error) {
	var response LanguagePackStringValuePluralized

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackStringValueDeleted parses the JSON-encoded data and return it as LanguagePackStringValueDeleted object.
func UnmarshalLanguagePackStringValueDeleted(data json.RawMessage) (*LanguagePackStringValueDeleted, error) {
	var response LanguagePackStringValueDeleted

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackString parses the JSON-encoded data and return it as LanguagePackString object.
func UnmarshalLanguagePackString(data json.RawMessage) (*LanguagePackString, error) {
	var response LanguagePackString

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackStrings parses the JSON-encoded data and return it as LanguagePackStrings object.
func UnmarshalLanguagePackStrings(data json.RawMessage) (*LanguagePackStrings, error) {
	var response LanguagePackStrings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLanguagePackInfo parses the JSON-encoded data and return it as LanguagePackInfo object.
func UnmarshalLanguagePackInfo(data json.RawMessage) (*LanguagePackInfo, error) {
	var response LanguagePackInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalLocalizationTargetInfo parses the JSON-encoded data and return it as LocalizationTargetInfo object.
func UnmarshalLocalizationTargetInfo(data json.RawMessage) (*LocalizationTargetInfo, error) {
	var response LocalizationTargetInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenGoogleCloudMessaging parses the JSON-encoded data and return it as DeviceTokenGoogleCloudMessaging object.
func UnmarshalDeviceTokenGoogleCloudMessaging(data json.RawMessage) (*DeviceTokenGoogleCloudMessaging, error) {
	var response DeviceTokenGoogleCloudMessaging

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenApplePush parses the JSON-encoded data and return it as DeviceTokenApplePush object.
func UnmarshalDeviceTokenApplePush(data json.RawMessage) (*DeviceTokenApplePush, error) {
	var response DeviceTokenApplePush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenApplePushVoIP parses the JSON-encoded data and return it as DeviceTokenApplePushVoIP object.
func UnmarshalDeviceTokenApplePushVoIP(data json.RawMessage) (*DeviceTokenApplePushVoIP, error) {
	var response DeviceTokenApplePushVoIP

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenWindowsPush parses the JSON-encoded data and return it as DeviceTokenWindowsPush object.
func UnmarshalDeviceTokenWindowsPush(data json.RawMessage) (*DeviceTokenWindowsPush, error) {
	var response DeviceTokenWindowsPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenMicrosoftPush parses the JSON-encoded data and return it as DeviceTokenMicrosoftPush object.
func UnmarshalDeviceTokenMicrosoftPush(data json.RawMessage) (*DeviceTokenMicrosoftPush, error) {
	var response DeviceTokenMicrosoftPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenMicrosoftPushVoIP parses the JSON-encoded data and return it as DeviceTokenMicrosoftPushVoIP object.
func UnmarshalDeviceTokenMicrosoftPushVoIP(data json.RawMessage) (*DeviceTokenMicrosoftPushVoIP, error) {
	var response DeviceTokenMicrosoftPushVoIP

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenWebPush parses the JSON-encoded data and return it as DeviceTokenWebPush object.
func UnmarshalDeviceTokenWebPush(data json.RawMessage) (*DeviceTokenWebPush, error) {
	var response DeviceTokenWebPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenSimplePush parses the JSON-encoded data and return it as DeviceTokenSimplePush object.
func UnmarshalDeviceTokenSimplePush(data json.RawMessage) (*DeviceTokenSimplePush, error) {
	var response DeviceTokenSimplePush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenUbuntuPush parses the JSON-encoded data and return it as DeviceTokenUbuntuPush object.
func UnmarshalDeviceTokenUbuntuPush(data json.RawMessage) (*DeviceTokenUbuntuPush, error) {
	var response DeviceTokenUbuntuPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenBlackBerryPush parses the JSON-encoded data and return it as DeviceTokenBlackBerryPush object.
func UnmarshalDeviceTokenBlackBerryPush(data json.RawMessage) (*DeviceTokenBlackBerryPush, error) {
	var response DeviceTokenBlackBerryPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeviceTokenTizenPush parses the JSON-encoded data and return it as DeviceTokenTizenPush object.
func UnmarshalDeviceTokenTizenPush(data json.RawMessage) (*DeviceTokenTizenPush, error) {
	var response DeviceTokenTizenPush

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalWallpaper parses the JSON-encoded data and return it as Wallpaper object.
func UnmarshalWallpaper(data json.RawMessage) (*Wallpaper, error) {
	var response Wallpaper

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalWallpapers parses the JSON-encoded data and return it as Wallpapers object.
func UnmarshalWallpapers(data json.RawMessage) (*Wallpapers, error) {
	var response Wallpapers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalHashtags parses the JSON-encoded data and return it as Hashtags object.
func UnmarshalHashtags(data json.RawMessage) (*Hashtags, error) {
	var response Hashtags

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCheckChatUsernameResultOk parses the JSON-encoded data and return it as CheckChatUsernameResultOk object.
func UnmarshalCheckChatUsernameResultOk(data json.RawMessage) (*CheckChatUsernameResultOk, error) {
	var response CheckChatUsernameResultOk

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCheckChatUsernameResultUsernameInvalid parses the JSON-encoded data and return it as CheckChatUsernameResultUsernameInvalid object.
func UnmarshalCheckChatUsernameResultUsernameInvalid(data json.RawMessage) (*CheckChatUsernameResultUsernameInvalid, error) {
	var response CheckChatUsernameResultUsernameInvalid

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCheckChatUsernameResultUsernameOccupied parses the JSON-encoded data and return it as CheckChatUsernameResultUsernameOccupied object.
func UnmarshalCheckChatUsernameResultUsernameOccupied(data json.RawMessage) (*CheckChatUsernameResultUsernameOccupied, error) {
	var response CheckChatUsernameResultUsernameOccupied

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCheckChatUsernameResultPublicChatsTooMuch parses the JSON-encoded data and return it as CheckChatUsernameResultPublicChatsTooMuch object.
func UnmarshalCheckChatUsernameResultPublicChatsTooMuch(data json.RawMessage) (*CheckChatUsernameResultPublicChatsTooMuch, error) {
	var response CheckChatUsernameResultPublicChatsTooMuch

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCheckChatUsernameResultPublicGroupsUnavailable parses the JSON-encoded data and return it as CheckChatUsernameResultPublicGroupsUnavailable object.
func UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data json.RawMessage) (*CheckChatUsernameResultPublicGroupsUnavailable, error) {
	var response CheckChatUsernameResultPublicGroupsUnavailable

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOptionValueBoolean parses the JSON-encoded data and return it as OptionValueBoolean object.
func UnmarshalOptionValueBoolean(data json.RawMessage) (*OptionValueBoolean, error) {
	var response OptionValueBoolean

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOptionValueEmpty parses the JSON-encoded data and return it as OptionValueEmpty object.
func UnmarshalOptionValueEmpty(data json.RawMessage) (*OptionValueEmpty, error) {
	var response OptionValueEmpty

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOptionValueInteger parses the JSON-encoded data and return it as OptionValueInteger object.
func UnmarshalOptionValueInteger(data json.RawMessage) (*OptionValueInteger, error) {
	var response OptionValueInteger

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalOptionValueString parses the JSON-encoded data and return it as OptionValueString object.
func UnmarshalOptionValueString(data json.RawMessage) (*OptionValueString, error) {
	var response OptionValueString

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleAllowAll parses the JSON-encoded data and return it as UserPrivacySettingRuleAllowAll object.
func UnmarshalUserPrivacySettingRuleAllowAll(data json.RawMessage) (*UserPrivacySettingRuleAllowAll, error) {
	var response UserPrivacySettingRuleAllowAll

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleAllowContacts parses the JSON-encoded data and return it as UserPrivacySettingRuleAllowContacts object.
func UnmarshalUserPrivacySettingRuleAllowContacts(data json.RawMessage) (*UserPrivacySettingRuleAllowContacts, error) {
	var response UserPrivacySettingRuleAllowContacts

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleAllowUsers parses the JSON-encoded data and return it as UserPrivacySettingRuleAllowUsers object.
func UnmarshalUserPrivacySettingRuleAllowUsers(data json.RawMessage) (*UserPrivacySettingRuleAllowUsers, error) {
	var response UserPrivacySettingRuleAllowUsers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleRestrictAll parses the JSON-encoded data and return it as UserPrivacySettingRuleRestrictAll object.
func UnmarshalUserPrivacySettingRuleRestrictAll(data json.RawMessage) (*UserPrivacySettingRuleRestrictAll, error) {
	var response UserPrivacySettingRuleRestrictAll

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleRestrictContacts parses the JSON-encoded data and return it as UserPrivacySettingRuleRestrictContacts object.
func UnmarshalUserPrivacySettingRuleRestrictContacts(data json.RawMessage) (*UserPrivacySettingRuleRestrictContacts, error) {
	var response UserPrivacySettingRuleRestrictContacts

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRuleRestrictUsers parses the JSON-encoded data and return it as UserPrivacySettingRuleRestrictUsers object.
func UnmarshalUserPrivacySettingRuleRestrictUsers(data json.RawMessage) (*UserPrivacySettingRuleRestrictUsers, error) {
	var response UserPrivacySettingRuleRestrictUsers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingRules parses the JSON-encoded data and return it as UserPrivacySettingRules object.
func UnmarshalUserPrivacySettingRules(data json.RawMessage) (*UserPrivacySettingRules, error) {
	var response UserPrivacySettingRules

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingShowStatus parses the JSON-encoded data and return it as UserPrivacySettingShowStatus object.
func UnmarshalUserPrivacySettingShowStatus(data json.RawMessage) (*UserPrivacySettingShowStatus, error) {
	var response UserPrivacySettingShowStatus

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingAllowChatInvites parses the JSON-encoded data and return it as UserPrivacySettingAllowChatInvites object.
func UnmarshalUserPrivacySettingAllowChatInvites(data json.RawMessage) (*UserPrivacySettingAllowChatInvites, error) {
	var response UserPrivacySettingAllowChatInvites

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUserPrivacySettingAllowCalls parses the JSON-encoded data and return it as UserPrivacySettingAllowCalls object.
func UnmarshalUserPrivacySettingAllowCalls(data json.RawMessage) (*UserPrivacySettingAllowCalls, error) {
	var response UserPrivacySettingAllowCalls

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalAccountTTL parses the JSON-encoded data and return it as AccountTTL object.
func UnmarshalAccountTTL(data json.RawMessage) (*AccountTTL, error) {
	var response AccountTTL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSession parses the JSON-encoded data and return it as Session object.
func UnmarshalSession(data json.RawMessage) (*Session, error) {
	var response Session

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSessions parses the JSON-encoded data and return it as Sessions object.
func UnmarshalSessions(data json.RawMessage) (*Sessions, error) {
	var response Sessions

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectedWebsite parses the JSON-encoded data and return it as ConnectedWebsite object.
func UnmarshalConnectedWebsite(data json.RawMessage) (*ConnectedWebsite, error) {
	var response ConnectedWebsite

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectedWebsites parses the JSON-encoded data and return it as ConnectedWebsites object.
func UnmarshalConnectedWebsites(data json.RawMessage) (*ConnectedWebsites, error) {
	var response ConnectedWebsites

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportSpamState parses the JSON-encoded data and return it as ChatReportSpamState object.
func UnmarshalChatReportSpamState(data json.RawMessage) (*ChatReportSpamState, error) {
	var response ChatReportSpamState

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportReasonSpam parses the JSON-encoded data and return it as ChatReportReasonSpam object.
func UnmarshalChatReportReasonSpam(data json.RawMessage) (*ChatReportReasonSpam, error) {
	var response ChatReportReasonSpam

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportReasonViolence parses the JSON-encoded data and return it as ChatReportReasonViolence object.
func UnmarshalChatReportReasonViolence(data json.RawMessage) (*ChatReportReasonViolence, error) {
	var response ChatReportReasonViolence

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportReasonPornography parses the JSON-encoded data and return it as ChatReportReasonPornography object.
func UnmarshalChatReportReasonPornography(data json.RawMessage) (*ChatReportReasonPornography, error) {
	var response ChatReportReasonPornography

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportReasonCopyright parses the JSON-encoded data and return it as ChatReportReasonCopyright object.
func UnmarshalChatReportReasonCopyright(data json.RawMessage) (*ChatReportReasonCopyright, error) {
	var response ChatReportReasonCopyright

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalChatReportReasonCustom parses the JSON-encoded data and return it as ChatReportReasonCustom object.
func UnmarshalChatReportReasonCustom(data json.RawMessage) (*ChatReportReasonCustom, error) {
	var response ChatReportReasonCustom

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalPublicMessageLink parses the JSON-encoded data and return it as PublicMessageLink object.
func UnmarshalPublicMessageLink(data json.RawMessage) (*PublicMessageLink, error) {
	var response PublicMessageLink

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeNone parses the JSON-encoded data and return it as FileTypeNone object.
func UnmarshalFileTypeNone(data json.RawMessage) (*FileTypeNone, error) {
	var response FileTypeNone

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeAnimation parses the JSON-encoded data and return it as FileTypeAnimation object.
func UnmarshalFileTypeAnimation(data json.RawMessage) (*FileTypeAnimation, error) {
	var response FileTypeAnimation

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeAudio parses the JSON-encoded data and return it as FileTypeAudio object.
func UnmarshalFileTypeAudio(data json.RawMessage) (*FileTypeAudio, error) {
	var response FileTypeAudio

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeDocument parses the JSON-encoded data and return it as FileTypeDocument object.
func UnmarshalFileTypeDocument(data json.RawMessage) (*FileTypeDocument, error) {
	var response FileTypeDocument

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypePhoto parses the JSON-encoded data and return it as FileTypePhoto object.
func UnmarshalFileTypePhoto(data json.RawMessage) (*FileTypePhoto, error) {
	var response FileTypePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeProfilePhoto parses the JSON-encoded data and return it as FileTypeProfilePhoto object.
func UnmarshalFileTypeProfilePhoto(data json.RawMessage) (*FileTypeProfilePhoto, error) {
	var response FileTypeProfilePhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeSecret parses the JSON-encoded data and return it as FileTypeSecret object.
func UnmarshalFileTypeSecret(data json.RawMessage) (*FileTypeSecret, error) {
	var response FileTypeSecret

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeSecretThumbnail parses the JSON-encoded data and return it as FileTypeSecretThumbnail object.
func UnmarshalFileTypeSecretThumbnail(data json.RawMessage) (*FileTypeSecretThumbnail, error) {
	var response FileTypeSecretThumbnail

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeSecure parses the JSON-encoded data and return it as FileTypeSecure object.
func UnmarshalFileTypeSecure(data json.RawMessage) (*FileTypeSecure, error) {
	var response FileTypeSecure

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeSticker parses the JSON-encoded data and return it as FileTypeSticker object.
func UnmarshalFileTypeSticker(data json.RawMessage) (*FileTypeSticker, error) {
	var response FileTypeSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeThumbnail parses the JSON-encoded data and return it as FileTypeThumbnail object.
func UnmarshalFileTypeThumbnail(data json.RawMessage) (*FileTypeThumbnail, error) {
	var response FileTypeThumbnail

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeUnknown parses the JSON-encoded data and return it as FileTypeUnknown object.
func UnmarshalFileTypeUnknown(data json.RawMessage) (*FileTypeUnknown, error) {
	var response FileTypeUnknown

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeVideo parses the JSON-encoded data and return it as FileTypeVideo object.
func UnmarshalFileTypeVideo(data json.RawMessage) (*FileTypeVideo, error) {
	var response FileTypeVideo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeVideoNote parses the JSON-encoded data and return it as FileTypeVideoNote object.
func UnmarshalFileTypeVideoNote(data json.RawMessage) (*FileTypeVideoNote, error) {
	var response FileTypeVideoNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeVoiceNote parses the JSON-encoded data and return it as FileTypeVoiceNote object.
func UnmarshalFileTypeVoiceNote(data json.RawMessage) (*FileTypeVoiceNote, error) {
	var response FileTypeVoiceNote

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalFileTypeWallpaper parses the JSON-encoded data and return it as FileTypeWallpaper object.
func UnmarshalFileTypeWallpaper(data json.RawMessage) (*FileTypeWallpaper, error) {
	var response FileTypeWallpaper

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStorageStatisticsByFileType parses the JSON-encoded data and return it as StorageStatisticsByFileType object.
func UnmarshalStorageStatisticsByFileType(data json.RawMessage) (*StorageStatisticsByFileType, error) {
	var response StorageStatisticsByFileType

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStorageStatisticsByChat parses the JSON-encoded data and return it as StorageStatisticsByChat object.
func UnmarshalStorageStatisticsByChat(data json.RawMessage) (*StorageStatisticsByChat, error) {
	var response StorageStatisticsByChat

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStorageStatistics parses the JSON-encoded data and return it as StorageStatistics object.
func UnmarshalStorageStatistics(data json.RawMessage) (*StorageStatistics, error) {
	var response StorageStatistics

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalStorageStatisticsFast parses the JSON-encoded data and return it as StorageStatisticsFast object.
func UnmarshalStorageStatisticsFast(data json.RawMessage) (*StorageStatisticsFast, error) {
	var response StorageStatisticsFast

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkTypeNone parses the JSON-encoded data and return it as NetworkTypeNone object.
func UnmarshalNetworkTypeNone(data json.RawMessage) (*NetworkTypeNone, error) {
	var response NetworkTypeNone

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkTypeMobile parses the JSON-encoded data and return it as NetworkTypeMobile object.
func UnmarshalNetworkTypeMobile(data json.RawMessage) (*NetworkTypeMobile, error) {
	var response NetworkTypeMobile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkTypeMobileRoaming parses the JSON-encoded data and return it as NetworkTypeMobileRoaming object.
func UnmarshalNetworkTypeMobileRoaming(data json.RawMessage) (*NetworkTypeMobileRoaming, error) {
	var response NetworkTypeMobileRoaming

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkTypeWiFi parses the JSON-encoded data and return it as NetworkTypeWiFi object.
func UnmarshalNetworkTypeWiFi(data json.RawMessage) (*NetworkTypeWiFi, error) {
	var response NetworkTypeWiFi

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkTypeOther parses the JSON-encoded data and return it as NetworkTypeOther object.
func UnmarshalNetworkTypeOther(data json.RawMessage) (*NetworkTypeOther, error) {
	var response NetworkTypeOther

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkStatisticsEntryFile parses the JSON-encoded data and return it as NetworkStatisticsEntryFile object.
func UnmarshalNetworkStatisticsEntryFile(data json.RawMessage) (*NetworkStatisticsEntryFile, error) {
	var response NetworkStatisticsEntryFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkStatisticsEntryCall parses the JSON-encoded data and return it as NetworkStatisticsEntryCall object.
func UnmarshalNetworkStatisticsEntryCall(data json.RawMessage) (*NetworkStatisticsEntryCall, error) {
	var response NetworkStatisticsEntryCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalNetworkStatistics parses the JSON-encoded data and return it as NetworkStatistics object.
func UnmarshalNetworkStatistics(data json.RawMessage) (*NetworkStatistics, error) {
	var response NetworkStatistics

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectionStateWaitingForNetwork parses the JSON-encoded data and return it as ConnectionStateWaitingForNetwork object.
func UnmarshalConnectionStateWaitingForNetwork(data json.RawMessage) (*ConnectionStateWaitingForNetwork, error) {
	var response ConnectionStateWaitingForNetwork

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectionStateConnectingToProxy parses the JSON-encoded data and return it as ConnectionStateConnectingToProxy object.
func UnmarshalConnectionStateConnectingToProxy(data json.RawMessage) (*ConnectionStateConnectingToProxy, error) {
	var response ConnectionStateConnectingToProxy

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectionStateConnecting parses the JSON-encoded data and return it as ConnectionStateConnecting object.
func UnmarshalConnectionStateConnecting(data json.RawMessage) (*ConnectionStateConnecting, error) {
	var response ConnectionStateConnecting

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectionStateUpdating parses the JSON-encoded data and return it as ConnectionStateUpdating object.
func UnmarshalConnectionStateUpdating(data json.RawMessage) (*ConnectionStateUpdating, error) {
	var response ConnectionStateUpdating

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalConnectionStateReady parses the JSON-encoded data and return it as ConnectionStateReady object.
func UnmarshalConnectionStateReady(data json.RawMessage) (*ConnectionStateReady, error) {
	var response ConnectionStateReady

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryUsers parses the JSON-encoded data and return it as TopChatCategoryUsers object.
func UnmarshalTopChatCategoryUsers(data json.RawMessage) (*TopChatCategoryUsers, error) {
	var response TopChatCategoryUsers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryBots parses the JSON-encoded data and return it as TopChatCategoryBots object.
func UnmarshalTopChatCategoryBots(data json.RawMessage) (*TopChatCategoryBots, error) {
	var response TopChatCategoryBots

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryGroups parses the JSON-encoded data and return it as TopChatCategoryGroups object.
func UnmarshalTopChatCategoryGroups(data json.RawMessage) (*TopChatCategoryGroups, error) {
	var response TopChatCategoryGroups

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryChannels parses the JSON-encoded data and return it as TopChatCategoryChannels object.
func UnmarshalTopChatCategoryChannels(data json.RawMessage) (*TopChatCategoryChannels, error) {
	var response TopChatCategoryChannels

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryInlineBots parses the JSON-encoded data and return it as TopChatCategoryInlineBots object.
func UnmarshalTopChatCategoryInlineBots(data json.RawMessage) (*TopChatCategoryInlineBots, error) {
	var response TopChatCategoryInlineBots

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTopChatCategoryCalls parses the JSON-encoded data and return it as TopChatCategoryCalls object.
func UnmarshalTopChatCategoryCalls(data json.RawMessage) (*TopChatCategoryCalls, error) {
	var response TopChatCategoryCalls

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURLTypeUser parses the JSON-encoded data and return it as TMeURLTypeUser object.
func UnmarshalTMeURLTypeUser(data json.RawMessage) (*TMeURLTypeUser, error) {
	var response TMeURLTypeUser

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURLTypeSupergroup parses the JSON-encoded data and return it as TMeURLTypeSupergroup object.
func UnmarshalTMeURLTypeSupergroup(data json.RawMessage) (*TMeURLTypeSupergroup, error) {
	var response TMeURLTypeSupergroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURLTypeChatInvite parses the JSON-encoded data and return it as TMeURLTypeChatInvite object.
func UnmarshalTMeURLTypeChatInvite(data json.RawMessage) (*TMeURLTypeChatInvite, error) {
	var response TMeURLTypeChatInvite

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURLTypeStickerSet parses the JSON-encoded data and return it as TMeURLTypeStickerSet object.
func UnmarshalTMeURLTypeStickerSet(data json.RawMessage) (*TMeURLTypeStickerSet, error) {
	var response TMeURLTypeStickerSet

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURL parses the JSON-encoded data and return it as TMeURL object.
func UnmarshalTMeURL(data json.RawMessage) (*TMeURL, error) {
	var response TMeURL

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTMeURLs parses the JSON-encoded data and return it as TMeURLs object.
func UnmarshalTMeURLs(data json.RawMessage) (*TMeURLs, error) {
	var response TMeURLs

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalCount parses the JSON-encoded data and return it as Count object.
func UnmarshalCount(data json.RawMessage) (*Count, error) {
	var response Count

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalText parses the JSON-encoded data and return it as Text object.
func UnmarshalText(data json.RawMessage) (*Text, error) {
	var response Text

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalSeconds parses the JSON-encoded data and return it as Seconds object.
func UnmarshalSeconds(data json.RawMessage) (*Seconds, error) {
	var response Seconds

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalDeepLinkInfo parses the JSON-encoded data and return it as DeepLinkInfo object.
func UnmarshalDeepLinkInfo(data json.RawMessage) (*DeepLinkInfo, error) {
	var response DeepLinkInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextParseModeMarkdown parses the JSON-encoded data and return it as TextParseModeMarkdown object.
func UnmarshalTextParseModeMarkdown(data json.RawMessage) (*TextParseModeMarkdown, error) {
	var response TextParseModeMarkdown

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTextParseModeHTML parses the JSON-encoded data and return it as TextParseModeHTML object.
func UnmarshalTextParseModeHTML(data json.RawMessage) (*TextParseModeHTML, error) {
	var response TextParseModeHTML

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProxyTypeSocks5 parses the JSON-encoded data and return it as ProxyTypeSocks5 object.
func UnmarshalProxyTypeSocks5(data json.RawMessage) (*ProxyTypeSocks5, error) {
	var response ProxyTypeSocks5

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProxyTypeHTTP parses the JSON-encoded data and return it as ProxyTypeHTTP object.
func UnmarshalProxyTypeHTTP(data json.RawMessage) (*ProxyTypeHTTP, error) {
	var response ProxyTypeHTTP

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProxyTypeMtproto parses the JSON-encoded data and return it as ProxyTypeMtproto object.
func UnmarshalProxyTypeMtproto(data json.RawMessage) (*ProxyTypeMtproto, error) {
	var response ProxyTypeMtproto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProxy parses the JSON-encoded data and return it as Proxy object.
func UnmarshalProxy(data json.RawMessage) (*Proxy, error) {
	var response Proxy

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalProxies parses the JSON-encoded data and return it as Proxies object.
func UnmarshalProxies(data json.RawMessage) (*Proxies, error) {
	var response Proxies

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalInputSticker parses the JSON-encoded data and return it as InputSticker object.
func UnmarshalInputSticker(data json.RawMessage) (*InputSticker, error) {
	var response InputSticker

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateAuthorizationState parses the JSON-encoded data and return it as UpdateAuthorizationState object.
func UnmarshalUpdateAuthorizationState(data json.RawMessage) (*UpdateAuthorizationState, error) {
	var response UpdateAuthorizationState

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewMessage parses the JSON-encoded data and return it as UpdateNewMessage object.
func UnmarshalUpdateNewMessage(data json.RawMessage) (*UpdateNewMessage, error) {
	var response UpdateNewMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageSendAcknowledged parses the JSON-encoded data and return it as UpdateMessageSendAcknowledged object.
func UnmarshalUpdateMessageSendAcknowledged(data json.RawMessage) (*UpdateMessageSendAcknowledged, error) {
	var response UpdateMessageSendAcknowledged

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageSendSucceeded parses the JSON-encoded data and return it as UpdateMessageSendSucceeded object.
func UnmarshalUpdateMessageSendSucceeded(data json.RawMessage) (*UpdateMessageSendSucceeded, error) {
	var response UpdateMessageSendSucceeded

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageSendFailed parses the JSON-encoded data and return it as UpdateMessageSendFailed object.
func UnmarshalUpdateMessageSendFailed(data json.RawMessage) (*UpdateMessageSendFailed, error) {
	var response UpdateMessageSendFailed

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageContent parses the JSON-encoded data and return it as UpdateMessageContent object.
func UnmarshalUpdateMessageContent(data json.RawMessage) (*UpdateMessageContent, error) {
	var response UpdateMessageContent

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageEdited parses the JSON-encoded data and return it as UpdateMessageEdited object.
func UnmarshalUpdateMessageEdited(data json.RawMessage) (*UpdateMessageEdited, error) {
	var response UpdateMessageEdited

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageViews parses the JSON-encoded data and return it as UpdateMessageViews object.
func UnmarshalUpdateMessageViews(data json.RawMessage) (*UpdateMessageViews, error) {
	var response UpdateMessageViews

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageContentOpened parses the JSON-encoded data and return it as UpdateMessageContentOpened object.
func UnmarshalUpdateMessageContentOpened(data json.RawMessage) (*UpdateMessageContentOpened, error) {
	var response UpdateMessageContentOpened

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateMessageMentionRead parses the JSON-encoded data and return it as UpdateMessageMentionRead object.
func UnmarshalUpdateMessageMentionRead(data json.RawMessage) (*UpdateMessageMentionRead, error) {
	var response UpdateMessageMentionRead

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewChat parses the JSON-encoded data and return it as UpdateNewChat object.
func UnmarshalUpdateNewChat(data json.RawMessage) (*UpdateNewChat, error) {
	var response UpdateNewChat

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatTitle parses the JSON-encoded data and return it as UpdateChatTitle object.
func UnmarshalUpdateChatTitle(data json.RawMessage) (*UpdateChatTitle, error) {
	var response UpdateChatTitle

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatPhoto parses the JSON-encoded data and return it as UpdateChatPhoto object.
func UnmarshalUpdateChatPhoto(data json.RawMessage) (*UpdateChatPhoto, error) {
	var response UpdateChatPhoto

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatLastMessage parses the JSON-encoded data and return it as UpdateChatLastMessage object.
func UnmarshalUpdateChatLastMessage(data json.RawMessage) (*UpdateChatLastMessage, error) {
	var response UpdateChatLastMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatOrder parses the JSON-encoded data and return it as UpdateChatOrder object.
func UnmarshalUpdateChatOrder(data json.RawMessage) (*UpdateChatOrder, error) {
	var response UpdateChatOrder

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatIsPinned parses the JSON-encoded data and return it as UpdateChatIsPinned object.
func UnmarshalUpdateChatIsPinned(data json.RawMessage) (*UpdateChatIsPinned, error) {
	var response UpdateChatIsPinned

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatIsMarkedAsUnread parses the JSON-encoded data and return it as UpdateChatIsMarkedAsUnread object.
func UnmarshalUpdateChatIsMarkedAsUnread(data json.RawMessage) (*UpdateChatIsMarkedAsUnread, error) {
	var response UpdateChatIsMarkedAsUnread

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatIsSponsored parses the JSON-encoded data and return it as UpdateChatIsSponsored object.
func UnmarshalUpdateChatIsSponsored(data json.RawMessage) (*UpdateChatIsSponsored, error) {
	var response UpdateChatIsSponsored

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatDefaultDisableNotification parses the JSON-encoded data and return it as UpdateChatDefaultDisableNotification object.
func UnmarshalUpdateChatDefaultDisableNotification(data json.RawMessage) (*UpdateChatDefaultDisableNotification, error) {
	var response UpdateChatDefaultDisableNotification

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatReadInbox parses the JSON-encoded data and return it as UpdateChatReadInbox object.
func UnmarshalUpdateChatReadInbox(data json.RawMessage) (*UpdateChatReadInbox, error) {
	var response UpdateChatReadInbox

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatReadOutbox parses the JSON-encoded data and return it as UpdateChatReadOutbox object.
func UnmarshalUpdateChatReadOutbox(data json.RawMessage) (*UpdateChatReadOutbox, error) {
	var response UpdateChatReadOutbox

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatUnreadMentionCount parses the JSON-encoded data and return it as UpdateChatUnreadMentionCount object.
func UnmarshalUpdateChatUnreadMentionCount(data json.RawMessage) (*UpdateChatUnreadMentionCount, error) {
	var response UpdateChatUnreadMentionCount

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatNotificationSettings parses the JSON-encoded data and return it as UpdateChatNotificationSettings object.
func UnmarshalUpdateChatNotificationSettings(data json.RawMessage) (*UpdateChatNotificationSettings, error) {
	var response UpdateChatNotificationSettings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateScopeNotificationSettings parses the JSON-encoded data and return it as UpdateScopeNotificationSettings object.
func UnmarshalUpdateScopeNotificationSettings(data json.RawMessage) (*UpdateScopeNotificationSettings, error) {
	var response UpdateScopeNotificationSettings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatReplyMarkup parses the JSON-encoded data and return it as UpdateChatReplyMarkup object.
func UnmarshalUpdateChatReplyMarkup(data json.RawMessage) (*UpdateChatReplyMarkup, error) {
	var response UpdateChatReplyMarkup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateChatDraftMessage parses the JSON-encoded data and return it as UpdateChatDraftMessage object.
func UnmarshalUpdateChatDraftMessage(data json.RawMessage) (*UpdateChatDraftMessage, error) {
	var response UpdateChatDraftMessage

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateDeleteMessages parses the JSON-encoded data and return it as UpdateDeleteMessages object.
func UnmarshalUpdateDeleteMessages(data json.RawMessage) (*UpdateDeleteMessages, error) {
	var response UpdateDeleteMessages

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUserChatAction parses the JSON-encoded data and return it as UpdateUserChatAction object.
func UnmarshalUpdateUserChatAction(data json.RawMessage) (*UpdateUserChatAction, error) {
	var response UpdateUserChatAction

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUserStatus parses the JSON-encoded data and return it as UpdateUserStatus object.
func UnmarshalUpdateUserStatus(data json.RawMessage) (*UpdateUserStatus, error) {
	var response UpdateUserStatus

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUser parses the JSON-encoded data and return it as UpdateUser object.
func UnmarshalUpdateUser(data json.RawMessage) (*UpdateUser, error) {
	var response UpdateUser

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateBasicGroup parses the JSON-encoded data and return it as UpdateBasicGroup object.
func UnmarshalUpdateBasicGroup(data json.RawMessage) (*UpdateBasicGroup, error) {
	var response UpdateBasicGroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateSupergroup parses the JSON-encoded data and return it as UpdateSupergroup object.
func UnmarshalUpdateSupergroup(data json.RawMessage) (*UpdateSupergroup, error) {
	var response UpdateSupergroup

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateSecretChat parses the JSON-encoded data and return it as UpdateSecretChat object.
func UnmarshalUpdateSecretChat(data json.RawMessage) (*UpdateSecretChat, error) {
	var response UpdateSecretChat

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUserFullInfo parses the JSON-encoded data and return it as UpdateUserFullInfo object.
func UnmarshalUpdateUserFullInfo(data json.RawMessage) (*UpdateUserFullInfo, error) {
	var response UpdateUserFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateBasicGroupFullInfo parses the JSON-encoded data and return it as UpdateBasicGroupFullInfo object.
func UnmarshalUpdateBasicGroupFullInfo(data json.RawMessage) (*UpdateBasicGroupFullInfo, error) {
	var response UpdateBasicGroupFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateSupergroupFullInfo parses the JSON-encoded data and return it as UpdateSupergroupFullInfo object.
func UnmarshalUpdateSupergroupFullInfo(data json.RawMessage) (*UpdateSupergroupFullInfo, error) {
	var response UpdateSupergroupFullInfo

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateServiceNotification parses the JSON-encoded data and return it as UpdateServiceNotification object.
func UnmarshalUpdateServiceNotification(data json.RawMessage) (*UpdateServiceNotification, error) {
	var response UpdateServiceNotification

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateFile parses the JSON-encoded data and return it as UpdateFile object.
func UnmarshalUpdateFile(data json.RawMessage) (*UpdateFile, error) {
	var response UpdateFile

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateFileGenerationStart parses the JSON-encoded data and return it as UpdateFileGenerationStart object.
func UnmarshalUpdateFileGenerationStart(data json.RawMessage) (*UpdateFileGenerationStart, error) {
	var response UpdateFileGenerationStart

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateFileGenerationStop parses the JSON-encoded data and return it as UpdateFileGenerationStop object.
func UnmarshalUpdateFileGenerationStop(data json.RawMessage) (*UpdateFileGenerationStop, error) {
	var response UpdateFileGenerationStop

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateCall parses the JSON-encoded data and return it as UpdateCall object.
func UnmarshalUpdateCall(data json.RawMessage) (*UpdateCall, error) {
	var response UpdateCall

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUserPrivacySettingRules parses the JSON-encoded data and return it as UpdateUserPrivacySettingRules object.
func UnmarshalUpdateUserPrivacySettingRules(data json.RawMessage) (*UpdateUserPrivacySettingRules, error) {
	var response UpdateUserPrivacySettingRules

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUnreadMessageCount parses the JSON-encoded data and return it as UpdateUnreadMessageCount object.
func UnmarshalUpdateUnreadMessageCount(data json.RawMessage) (*UpdateUnreadMessageCount, error) {
	var response UpdateUnreadMessageCount

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateUnreadChatCount parses the JSON-encoded data and return it as UpdateUnreadChatCount object.
func UnmarshalUpdateUnreadChatCount(data json.RawMessage) (*UpdateUnreadChatCount, error) {
	var response UpdateUnreadChatCount

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateOption parses the JSON-encoded data and return it as UpdateOption object.
func UnmarshalUpdateOption(data json.RawMessage) (*UpdateOption, error) {
	var response UpdateOption

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateInstalledStickerSets parses the JSON-encoded data and return it as UpdateInstalledStickerSets object.
func UnmarshalUpdateInstalledStickerSets(data json.RawMessage) (*UpdateInstalledStickerSets, error) {
	var response UpdateInstalledStickerSets

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateTrendingStickerSets parses the JSON-encoded data and return it as UpdateTrendingStickerSets object.
func UnmarshalUpdateTrendingStickerSets(data json.RawMessage) (*UpdateTrendingStickerSets, error) {
	var response UpdateTrendingStickerSets

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateRecentStickers parses the JSON-encoded data and return it as UpdateRecentStickers object.
func UnmarshalUpdateRecentStickers(data json.RawMessage) (*UpdateRecentStickers, error) {
	var response UpdateRecentStickers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateFavoriteStickers parses the JSON-encoded data and return it as UpdateFavoriteStickers object.
func UnmarshalUpdateFavoriteStickers(data json.RawMessage) (*UpdateFavoriteStickers, error) {
	var response UpdateFavoriteStickers

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateSavedAnimations parses the JSON-encoded data and return it as UpdateSavedAnimations object.
func UnmarshalUpdateSavedAnimations(data json.RawMessage) (*UpdateSavedAnimations, error) {
	var response UpdateSavedAnimations

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateLanguagePackStrings parses the JSON-encoded data and return it as UpdateLanguagePackStrings object.
func UnmarshalUpdateLanguagePackStrings(data json.RawMessage) (*UpdateLanguagePackStrings, error) {
	var response UpdateLanguagePackStrings

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateConnectionState parses the JSON-encoded data and return it as UpdateConnectionState object.
func UnmarshalUpdateConnectionState(data json.RawMessage) (*UpdateConnectionState, error) {
	var response UpdateConnectionState

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateTermsOfService parses the JSON-encoded data and return it as UpdateTermsOfService object.
func UnmarshalUpdateTermsOfService(data json.RawMessage) (*UpdateTermsOfService, error) {
	var response UpdateTermsOfService

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewInlineQuery parses the JSON-encoded data and return it as UpdateNewInlineQuery object.
func UnmarshalUpdateNewInlineQuery(data json.RawMessage) (*UpdateNewInlineQuery, error) {
	var response UpdateNewInlineQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewChosenInlineResult parses the JSON-encoded data and return it as UpdateNewChosenInlineResult object.
func UnmarshalUpdateNewChosenInlineResult(data json.RawMessage) (*UpdateNewChosenInlineResult, error) {
	var response UpdateNewChosenInlineResult

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewCallbackQuery parses the JSON-encoded data and return it as UpdateNewCallbackQuery object.
func UnmarshalUpdateNewCallbackQuery(data json.RawMessage) (*UpdateNewCallbackQuery, error) {
	var response UpdateNewCallbackQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewInlineCallbackQuery parses the JSON-encoded data and return it as UpdateNewInlineCallbackQuery object.
func UnmarshalUpdateNewInlineCallbackQuery(data json.RawMessage) (*UpdateNewInlineCallbackQuery, error) {
	var response UpdateNewInlineCallbackQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewShippingQuery parses the JSON-encoded data and return it as UpdateNewShippingQuery object.
func UnmarshalUpdateNewShippingQuery(data json.RawMessage) (*UpdateNewShippingQuery, error) {
	var response UpdateNewShippingQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewPreCheckoutQuery parses the JSON-encoded data and return it as UpdateNewPreCheckoutQuery object.
func UnmarshalUpdateNewPreCheckoutQuery(data json.RawMessage) (*UpdateNewPreCheckoutQuery, error) {
	var response UpdateNewPreCheckoutQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewCustomEvent parses the JSON-encoded data and return it as UpdateNewCustomEvent object.
func UnmarshalUpdateNewCustomEvent(data json.RawMessage) (*UpdateNewCustomEvent, error) {
	var response UpdateNewCustomEvent

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalUpdateNewCustomQuery parses the JSON-encoded data and return it as UpdateNewCustomQuery object.
func UnmarshalUpdateNewCustomQuery(data json.RawMessage) (*UpdateNewCustomQuery, error) {
	var response UpdateNewCustomQuery

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestInt parses the JSON-encoded data and return it as TestInt object.
func UnmarshalTestInt(data json.RawMessage) (*TestInt, error) {
	var response TestInt

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestString parses the JSON-encoded data and return it as TestString object.
func UnmarshalTestString(data json.RawMessage) (*TestString, error) {
	var response TestString

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestBytes parses the JSON-encoded data and return it as TestBytes object.
func UnmarshalTestBytes(data json.RawMessage) (*TestBytes, error) {
	var response TestBytes

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestVectorInt parses the JSON-encoded data and return it as TestVectorInt object.
func UnmarshalTestVectorInt(data json.RawMessage) (*TestVectorInt, error) {
	var response TestVectorInt

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestVectorIntObject parses the JSON-encoded data and return it as TestVectorIntObject object.
func UnmarshalTestVectorIntObject(data json.RawMessage) (*TestVectorIntObject, error) {
	var response TestVectorIntObject

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestVectorString parses the JSON-encoded data and return it as TestVectorString object.
func UnmarshalTestVectorString(data json.RawMessage) (*TestVectorString, error) {
	var response TestVectorString

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalTestVectorStringObject parses the JSON-encoded data and return it as TestVectorStringObject object.
func UnmarshalTestVectorStringObject(data json.RawMessage) (*TestVectorStringObject, error) {
	var response TestVectorStringObject

	err := json.Unmarshal(data, &response)

	return &response, err
}

// UnmarshalType parses the JSON-encoded data and return it as %s object.
func UnmarshalType(data json.RawMessage) (Type, error) {
	var meta meta

	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.Type {
	case TypeError:
		return UnmarshalError(data)

	case TypeOk:
		return UnmarshalOk(data)

	case TypeTdlibParameters:
		return UnmarshalTdlibParameters(data)

	case TypeAuthenticationCodeTypeTelegramMessage:
		return UnmarshalAuthenticationCodeTypeTelegramMessage(data)

	case TypeAuthenticationCodeTypeSms:
		return UnmarshalAuthenticationCodeTypeSms(data)

	case TypeAuthenticationCodeTypeCall:
		return UnmarshalAuthenticationCodeTypeCall(data)

	case TypeAuthenticationCodeTypeFlashCall:
		return UnmarshalAuthenticationCodeTypeFlashCall(data)

	case TypeAuthenticationCodeInfo:
		return UnmarshalAuthenticationCodeInfo(data)

	case TypeEmailAddressAuthenticationCodeInfo:
		return UnmarshalEmailAddressAuthenticationCodeInfo(data)

	case TypeTextEntity:
		return UnmarshalTextEntity(data)

	case TypeTextEntities:
		return UnmarshalTextEntities(data)

	case TypeFormattedText:
		return UnmarshalFormattedText(data)

	case TypeTermsOfService:
		return UnmarshalTermsOfService(data)

	case TypeAuthorizationStateWaitTdlibParameters:
		return UnmarshalAuthorizationStateWaitTdlibParameters(data)

	case TypeAuthorizationStateWaitEncryptionKey:
		return UnmarshalAuthorizationStateWaitEncryptionKey(data)

	case TypeAuthorizationStateWaitPhoneNumber:
		return UnmarshalAuthorizationStateWaitPhoneNumber(data)

	case TypeAuthorizationStateWaitCode:
		return UnmarshalAuthorizationStateWaitCode(data)

	case TypeAuthorizationStateWaitPassword:
		return UnmarshalAuthorizationStateWaitPassword(data)

	case TypeAuthorizationStateReady:
		return UnmarshalAuthorizationStateReady(data)

	case TypeAuthorizationStateLoggingOut:
		return UnmarshalAuthorizationStateLoggingOut(data)

	case TypeAuthorizationStateClosing:
		return UnmarshalAuthorizationStateClosing(data)

	case TypeAuthorizationStateClosed:
		return UnmarshalAuthorizationStateClosed(data)

	case TypePasswordState:
		return UnmarshalPasswordState(data)

	case TypeRecoveryEmailAddress:
		return UnmarshalRecoveryEmailAddress(data)

	case TypeTemporaryPasswordState:
		return UnmarshalTemporaryPasswordState(data)

	case TypeLocalFile:
		return UnmarshalLocalFile(data)

	case TypeRemoteFile:
		return UnmarshalRemoteFile(data)

	case TypeFile:
		return UnmarshalFile(data)

	case TypeInputFileID:
		return UnmarshalInputFileID(data)

	case TypeInputFileRemote:
		return UnmarshalInputFileRemote(data)

	case TypeInputFileLocal:
		return UnmarshalInputFileLocal(data)

	case TypeInputFileGenerated:
		return UnmarshalInputFileGenerated(data)

	case TypePhotoSize:
		return UnmarshalPhotoSize(data)

	case TypeMaskPointForehead:
		return UnmarshalMaskPointForehead(data)

	case TypeMaskPointEyes:
		return UnmarshalMaskPointEyes(data)

	case TypeMaskPointMouth:
		return UnmarshalMaskPointMouth(data)

	case TypeMaskPointChin:
		return UnmarshalMaskPointChin(data)

	case TypeMaskPosition:
		return UnmarshalMaskPosition(data)

	case TypeAnimation:
		return UnmarshalAnimation(data)

	case TypeAudio:
		return UnmarshalAudio(data)

	case TypeDocument:
		return UnmarshalDocument(data)

	case TypePhoto:
		return UnmarshalPhoto(data)

	case TypeSticker:
		return UnmarshalSticker(data)

	case TypeVideo:
		return UnmarshalVideo(data)

	case TypeVideoNote:
		return UnmarshalVideoNote(data)

	case TypeVoiceNote:
		return UnmarshalVoiceNote(data)

	case TypeContact:
		return UnmarshalContact(data)

	case TypeLocation:
		return UnmarshalLocation(data)

	case TypeVenue:
		return UnmarshalVenue(data)

	case TypeGame:
		return UnmarshalGame(data)

	case TypeProfilePhoto:
		return UnmarshalProfilePhoto(data)

	case TypeChatPhoto:
		return UnmarshalChatPhoto(data)

	case TypeLinkStateNone:
		return UnmarshalLinkStateNone(data)

	case TypeLinkStateKnowsPhoneNumber:
		return UnmarshalLinkStateKnowsPhoneNumber(data)

	case TypeLinkStateIsContact:
		return UnmarshalLinkStateIsContact(data)

	case TypeUserTypeRegular:
		return UnmarshalUserTypeRegular(data)

	case TypeUserTypeDeleted:
		return UnmarshalUserTypeDeleted(data)

	case TypeUserTypeBot:
		return UnmarshalUserTypeBot(data)

	case TypeUserTypeUnknown:
		return UnmarshalUserTypeUnknown(data)

	case TypeBotCommand:
		return UnmarshalBotCommand(data)

	case TypeBotInfo:
		return UnmarshalBotInfo(data)

	case TypeUser:
		return UnmarshalUser(data)

	case TypeUserFullInfo:
		return UnmarshalUserFullInfo(data)

	case TypeUserProfilePhotos:
		return UnmarshalUserProfilePhotos(data)

	case TypeUsers:
		return UnmarshalUsers(data)

	case TypeChatMemberStatusCreator:
		return UnmarshalChatMemberStatusCreator(data)

	case TypeChatMemberStatusAdministrator:
		return UnmarshalChatMemberStatusAdministrator(data)

	case TypeChatMemberStatusMember:
		return UnmarshalChatMemberStatusMember(data)

	case TypeChatMemberStatusRestricted:
		return UnmarshalChatMemberStatusRestricted(data)

	case TypeChatMemberStatusLeft:
		return UnmarshalChatMemberStatusLeft(data)

	case TypeChatMemberStatusBanned:
		return UnmarshalChatMemberStatusBanned(data)

	case TypeChatMember:
		return UnmarshalChatMember(data)

	case TypeChatMembers:
		return UnmarshalChatMembers(data)

	case TypeChatMembersFilterAdministrators:
		return UnmarshalChatMembersFilterAdministrators(data)

	case TypeChatMembersFilterMembers:
		return UnmarshalChatMembersFilterMembers(data)

	case TypeChatMembersFilterRestricted:
		return UnmarshalChatMembersFilterRestricted(data)

	case TypeChatMembersFilterBanned:
		return UnmarshalChatMembersFilterBanned(data)

	case TypeChatMembersFilterBots:
		return UnmarshalChatMembersFilterBots(data)

	case TypeSupergroupMembersFilterRecent:
		return UnmarshalSupergroupMembersFilterRecent(data)

	case TypeSupergroupMembersFilterAdministrators:
		return UnmarshalSupergroupMembersFilterAdministrators(data)

	case TypeSupergroupMembersFilterSearch:
		return UnmarshalSupergroupMembersFilterSearch(data)

	case TypeSupergroupMembersFilterRestricted:
		return UnmarshalSupergroupMembersFilterRestricted(data)

	case TypeSupergroupMembersFilterBanned:
		return UnmarshalSupergroupMembersFilterBanned(data)

	case TypeSupergroupMembersFilterBots:
		return UnmarshalSupergroupMembersFilterBots(data)

	case TypeBasicGroup:
		return UnmarshalBasicGroup(data)

	case TypeBasicGroupFullInfo:
		return UnmarshalBasicGroupFullInfo(data)

	case TypeSupergroup:
		return UnmarshalSupergroup(data)

	case TypeSupergroupFullInfo:
		return UnmarshalSupergroupFullInfo(data)

	case TypeSecretChatStatePending:
		return UnmarshalSecretChatStatePending(data)

	case TypeSecretChatStateReady:
		return UnmarshalSecretChatStateReady(data)

	case TypeSecretChatStateClosed:
		return UnmarshalSecretChatStateClosed(data)

	case TypeSecretChat:
		return UnmarshalSecretChat(data)

	case TypeMessageForwardedFromUser:
		return UnmarshalMessageForwardedFromUser(data)

	case TypeMessageForwardedPost:
		return UnmarshalMessageForwardedPost(data)

	case TypeMessageSendingStatePending:
		return UnmarshalMessageSendingStatePending(data)

	case TypeMessageSendingStateFailed:
		return UnmarshalMessageSendingStateFailed(data)

	case TypeMessage:
		return UnmarshalMessage(data)

	case TypeMessages:
		return UnmarshalMessages(data)

	case TypeFoundMessages:
		return UnmarshalFoundMessages(data)

	case TypeNotificationSettingsScopePrivateChats:
		return UnmarshalNotificationSettingsScopePrivateChats(data)

	case TypeNotificationSettingsScopeGroupChats:
		return UnmarshalNotificationSettingsScopeGroupChats(data)

	case TypeChatNotificationSettings:
		return UnmarshalChatNotificationSettings(data)

	case TypeScopeNotificationSettings:
		return UnmarshalScopeNotificationSettings(data)

	case TypeDraftMessage:
		return UnmarshalDraftMessage(data)

	case TypeChatTypePrivate:
		return UnmarshalChatTypePrivate(data)

	case TypeChatTypeBasicGroup:
		return UnmarshalChatTypeBasicGroup(data)

	case TypeChatTypeSupergroup:
		return UnmarshalChatTypeSupergroup(data)

	case TypeChatTypeSecret:
		return UnmarshalChatTypeSecret(data)

	case TypeChat:
		return UnmarshalChat(data)

	case TypeChats:
		return UnmarshalChats(data)

	case TypeChatInviteLink:
		return UnmarshalChatInviteLink(data)

	case TypeChatInviteLinkInfo:
		return UnmarshalChatInviteLinkInfo(data)

	case TypeKeyboardButtonTypeText:
		return UnmarshalKeyboardButtonTypeText(data)

	case TypeKeyboardButtonTypeRequestPhoneNumber:
		return UnmarshalKeyboardButtonTypeRequestPhoneNumber(data)

	case TypeKeyboardButtonTypeRequestLocation:
		return UnmarshalKeyboardButtonTypeRequestLocation(data)

	case TypeKeyboardButton:
		return UnmarshalKeyboardButton(data)

	case TypeInlineKeyboardButtonTypeURL:
		return UnmarshalInlineKeyboardButtonTypeURL(data)

	case TypeInlineKeyboardButtonTypeCallback:
		return UnmarshalInlineKeyboardButtonTypeCallback(data)

	case TypeInlineKeyboardButtonTypeCallbackGame:
		return UnmarshalInlineKeyboardButtonTypeCallbackGame(data)

	case TypeInlineKeyboardButtonTypeSwitchInline:
		return UnmarshalInlineKeyboardButtonTypeSwitchInline(data)

	case TypeInlineKeyboardButtonTypeBuy:
		return UnmarshalInlineKeyboardButtonTypeBuy(data)

	case TypeInlineKeyboardButton:
		return UnmarshalInlineKeyboardButton(data)

	case TypeReplyMarkupRemoveKeyboard:
		return UnmarshalReplyMarkupRemoveKeyboard(data)

	case TypeReplyMarkupForceReply:
		return UnmarshalReplyMarkupForceReply(data)

	case TypeReplyMarkupShowKeyboard:
		return UnmarshalReplyMarkupShowKeyboard(data)

	case TypeReplyMarkupInlineKeyboard:
		return UnmarshalReplyMarkupInlineKeyboard(data)

	case TypeRichTextPlain:
		return UnmarshalRichTextPlain(data)

	case TypeRichTextBold:
		return UnmarshalRichTextBold(data)

	case TypeRichTextItalic:
		return UnmarshalRichTextItalic(data)

	case TypeRichTextUnderline:
		return UnmarshalRichTextUnderline(data)

	case TypeRichTextStrikethrough:
		return UnmarshalRichTextStrikethrough(data)

	case TypeRichTextFixed:
		return UnmarshalRichTextFixed(data)

	case TypeRichTextURL:
		return UnmarshalRichTextURL(data)

	case TypeRichTextEmailAddress:
		return UnmarshalRichTextEmailAddress(data)

	case TypeRichTexts:
		return UnmarshalRichTexts(data)

	case TypePageBlockTitle:
		return UnmarshalPageBlockTitle(data)

	case TypePageBlockSubtitle:
		return UnmarshalPageBlockSubtitle(data)

	case TypePageBlockAuthorDate:
		return UnmarshalPageBlockAuthorDate(data)

	case TypePageBlockHeader:
		return UnmarshalPageBlockHeader(data)

	case TypePageBlockSubheader:
		return UnmarshalPageBlockSubheader(data)

	case TypePageBlockParagraph:
		return UnmarshalPageBlockParagraph(data)

	case TypePageBlockPreformatted:
		return UnmarshalPageBlockPreformatted(data)

	case TypePageBlockFooter:
		return UnmarshalPageBlockFooter(data)

	case TypePageBlockDivider:
		return UnmarshalPageBlockDivider(data)

	case TypePageBlockAnchor:
		return UnmarshalPageBlockAnchor(data)

	case TypePageBlockList:
		return UnmarshalPageBlockList(data)

	case TypePageBlockBlockQuote:
		return UnmarshalPageBlockBlockQuote(data)

	case TypePageBlockPullQuote:
		return UnmarshalPageBlockPullQuote(data)

	case TypePageBlockAnimation:
		return UnmarshalPageBlockAnimation(data)

	case TypePageBlockAudio:
		return UnmarshalPageBlockAudio(data)

	case TypePageBlockPhoto:
		return UnmarshalPageBlockPhoto(data)

	case TypePageBlockVideo:
		return UnmarshalPageBlockVideo(data)

	case TypePageBlockCover:
		return UnmarshalPageBlockCover(data)

	case TypePageBlockEmbedded:
		return UnmarshalPageBlockEmbedded(data)

	case TypePageBlockEmbeddedPost:
		return UnmarshalPageBlockEmbeddedPost(data)

	case TypePageBlockCollage:
		return UnmarshalPageBlockCollage(data)

	case TypePageBlockSlideshow:
		return UnmarshalPageBlockSlideshow(data)

	case TypePageBlockChatLink:
		return UnmarshalPageBlockChatLink(data)

	case TypeWebPageInstantView:
		return UnmarshalWebPageInstantView(data)

	case TypeWebPage:
		return UnmarshalWebPage(data)

	case TypeAddress:
		return UnmarshalAddress(data)

	case TypeLabeledPricePart:
		return UnmarshalLabeledPricePart(data)

	case TypeInvoice:
		return UnmarshalInvoice(data)

	case TypeOrderInfo:
		return UnmarshalOrderInfo(data)

	case TypeShippingOption:
		return UnmarshalShippingOption(data)

	case TypeSavedCredentials:
		return UnmarshalSavedCredentials(data)

	case TypeInputCredentialsSaved:
		return UnmarshalInputCredentialsSaved(data)

	case TypeInputCredentialsNew:
		return UnmarshalInputCredentialsNew(data)

	case TypeInputCredentialsAndroidPay:
		return UnmarshalInputCredentialsAndroidPay(data)

	case TypeInputCredentialsApplePay:
		return UnmarshalInputCredentialsApplePay(data)

	case TypePaymentsProviderStripe:
		return UnmarshalPaymentsProviderStripe(data)

	case TypePaymentForm:
		return UnmarshalPaymentForm(data)

	case TypeValidatedOrderInfo:
		return UnmarshalValidatedOrderInfo(data)

	case TypePaymentResult:
		return UnmarshalPaymentResult(data)

	case TypePaymentReceipt:
		return UnmarshalPaymentReceipt(data)

	case TypeDatedFile:
		return UnmarshalDatedFile(data)

	case TypePassportElementTypePersonalDetails:
		return UnmarshalPassportElementTypePersonalDetails(data)

	case TypePassportElementTypePassport:
		return UnmarshalPassportElementTypePassport(data)

	case TypePassportElementTypeDriverLicense:
		return UnmarshalPassportElementTypeDriverLicense(data)

	case TypePassportElementTypeIdentityCard:
		return UnmarshalPassportElementTypeIdentityCard(data)

	case TypePassportElementTypeInternalPassport:
		return UnmarshalPassportElementTypeInternalPassport(data)

	case TypePassportElementTypeAddress:
		return UnmarshalPassportElementTypeAddress(data)

	case TypePassportElementTypeUtilityBill:
		return UnmarshalPassportElementTypeUtilityBill(data)

	case TypePassportElementTypeBankStatement:
		return UnmarshalPassportElementTypeBankStatement(data)

	case TypePassportElementTypeRentalAgreement:
		return UnmarshalPassportElementTypeRentalAgreement(data)

	case TypePassportElementTypePassportRegistration:
		return UnmarshalPassportElementTypePassportRegistration(data)

	case TypePassportElementTypeTemporaryRegistration:
		return UnmarshalPassportElementTypeTemporaryRegistration(data)

	case TypePassportElementTypePhoneNumber:
		return UnmarshalPassportElementTypePhoneNumber(data)

	case TypePassportElementTypeEmailAddress:
		return UnmarshalPassportElementTypeEmailAddress(data)

	case TypeDate:
		return UnmarshalDate(data)

	case TypePersonalDetails:
		return UnmarshalPersonalDetails(data)

	case TypeIdentityDocument:
		return UnmarshalIdentityDocument(data)

	case TypeInputIdentityDocument:
		return UnmarshalInputIdentityDocument(data)

	case TypePersonalDocument:
		return UnmarshalPersonalDocument(data)

	case TypeInputPersonalDocument:
		return UnmarshalInputPersonalDocument(data)

	case TypePassportElementPersonalDetails:
		return UnmarshalPassportElementPersonalDetails(data)

	case TypePassportElementPassport:
		return UnmarshalPassportElementPassport(data)

	case TypePassportElementDriverLicense:
		return UnmarshalPassportElementDriverLicense(data)

	case TypePassportElementIdentityCard:
		return UnmarshalPassportElementIdentityCard(data)

	case TypePassportElementInternalPassport:
		return UnmarshalPassportElementInternalPassport(data)

	case TypePassportElementAddress:
		return UnmarshalPassportElementAddress(data)

	case TypePassportElementUtilityBill:
		return UnmarshalPassportElementUtilityBill(data)

	case TypePassportElementBankStatement:
		return UnmarshalPassportElementBankStatement(data)

	case TypePassportElementRentalAgreement:
		return UnmarshalPassportElementRentalAgreement(data)

	case TypePassportElementPassportRegistration:
		return UnmarshalPassportElementPassportRegistration(data)

	case TypePassportElementTemporaryRegistration:
		return UnmarshalPassportElementTemporaryRegistration(data)

	case TypePassportElementPhoneNumber:
		return UnmarshalPassportElementPhoneNumber(data)

	case TypePassportElementEmailAddress:
		return UnmarshalPassportElementEmailAddress(data)

	case TypeInputPassportElementPersonalDetails:
		return UnmarshalInputPassportElementPersonalDetails(data)

	case TypeInputPassportElementPassport:
		return UnmarshalInputPassportElementPassport(data)

	case TypeInputPassportElementDriverLicense:
		return UnmarshalInputPassportElementDriverLicense(data)

	case TypeInputPassportElementIdentityCard:
		return UnmarshalInputPassportElementIdentityCard(data)

	case TypeInputPassportElementInternalPassport:
		return UnmarshalInputPassportElementInternalPassport(data)

	case TypeInputPassportElementAddress:
		return UnmarshalInputPassportElementAddress(data)

	case TypeInputPassportElementUtilityBill:
		return UnmarshalInputPassportElementUtilityBill(data)

	case TypeInputPassportElementBankStatement:
		return UnmarshalInputPassportElementBankStatement(data)

	case TypeInputPassportElementRentalAgreement:
		return UnmarshalInputPassportElementRentalAgreement(data)

	case TypeInputPassportElementPassportRegistration:
		return UnmarshalInputPassportElementPassportRegistration(data)

	case TypeInputPassportElementTemporaryRegistration:
		return UnmarshalInputPassportElementTemporaryRegistration(data)

	case TypeInputPassportElementPhoneNumber:
		return UnmarshalInputPassportElementPhoneNumber(data)

	case TypeInputPassportElementEmailAddress:
		return UnmarshalInputPassportElementEmailAddress(data)

	case TypePassportElements:
		return UnmarshalPassportElements(data)

	case TypePassportElementErrorSourceUnspecified:
		return UnmarshalPassportElementErrorSourceUnspecified(data)

	case TypePassportElementErrorSourceDataField:
		return UnmarshalPassportElementErrorSourceDataField(data)

	case TypePassportElementErrorSourceFrontSide:
		return UnmarshalPassportElementErrorSourceFrontSide(data)

	case TypePassportElementErrorSourceReverseSide:
		return UnmarshalPassportElementErrorSourceReverseSide(data)

	case TypePassportElementErrorSourceSelfie:
		return UnmarshalPassportElementErrorSourceSelfie(data)

	case TypePassportElementErrorSourceTranslationFile:
		return UnmarshalPassportElementErrorSourceTranslationFile(data)

	case TypePassportElementErrorSourceTranslationFiles:
		return UnmarshalPassportElementErrorSourceTranslationFiles(data)

	case TypePassportElementErrorSourceFile:
		return UnmarshalPassportElementErrorSourceFile(data)

	case TypePassportElementErrorSourceFiles:
		return UnmarshalPassportElementErrorSourceFiles(data)

	case TypePassportElementError:
		return UnmarshalPassportElementError(data)

	case TypePassportSuitableElement:
		return UnmarshalPassportSuitableElement(data)

	case TypePassportRequiredElement:
		return UnmarshalPassportRequiredElement(data)

	case TypePassportAuthorizationForm:
		return UnmarshalPassportAuthorizationForm(data)

	case TypeEncryptedCredentials:
		return UnmarshalEncryptedCredentials(data)

	case TypeEncryptedPassportElement:
		return UnmarshalEncryptedPassportElement(data)

	case TypeInputPassportElementErrorSourceUnspecified:
		return UnmarshalInputPassportElementErrorSourceUnspecified(data)

	case TypeInputPassportElementErrorSourceDataField:
		return UnmarshalInputPassportElementErrorSourceDataField(data)

	case TypeInputPassportElementErrorSourceFrontSide:
		return UnmarshalInputPassportElementErrorSourceFrontSide(data)

	case TypeInputPassportElementErrorSourceReverseSide:
		return UnmarshalInputPassportElementErrorSourceReverseSide(data)

	case TypeInputPassportElementErrorSourceSelfie:
		return UnmarshalInputPassportElementErrorSourceSelfie(data)

	case TypeInputPassportElementErrorSourceTranslationFile:
		return UnmarshalInputPassportElementErrorSourceTranslationFile(data)

	case TypeInputPassportElementErrorSourceTranslationFiles:
		return UnmarshalInputPassportElementErrorSourceTranslationFiles(data)

	case TypeInputPassportElementErrorSourceFile:
		return UnmarshalInputPassportElementErrorSourceFile(data)

	case TypeInputPassportElementErrorSourceFiles:
		return UnmarshalInputPassportElementErrorSourceFiles(data)

	case TypeInputPassportElementError:
		return UnmarshalInputPassportElementError(data)

	case TypeMessageText:
		return UnmarshalMessageText(data)

	case TypeMessageAnimation:
		return UnmarshalMessageAnimation(data)

	case TypeMessageAudio:
		return UnmarshalMessageAudio(data)

	case TypeMessageDocument:
		return UnmarshalMessageDocument(data)

	case TypeMessagePhoto:
		return UnmarshalMessagePhoto(data)

	case TypeMessageExpiredPhoto:
		return UnmarshalMessageExpiredPhoto(data)

	case TypeMessageSticker:
		return UnmarshalMessageSticker(data)

	case TypeMessageVideo:
		return UnmarshalMessageVideo(data)

	case TypeMessageExpiredVideo:
		return UnmarshalMessageExpiredVideo(data)

	case TypeMessageVideoNote:
		return UnmarshalMessageVideoNote(data)

	case TypeMessageVoiceNote:
		return UnmarshalMessageVoiceNote(data)

	case TypeMessageLocation:
		return UnmarshalMessageLocation(data)

	case TypeMessageVenue:
		return UnmarshalMessageVenue(data)

	case TypeMessageContact:
		return UnmarshalMessageContact(data)

	case TypeMessageGame:
		return UnmarshalMessageGame(data)

	case TypeMessageInvoice:
		return UnmarshalMessageInvoice(data)

	case TypeMessageCall:
		return UnmarshalMessageCall(data)

	case TypeMessageBasicGroupChatCreate:
		return UnmarshalMessageBasicGroupChatCreate(data)

	case TypeMessageSupergroupChatCreate:
		return UnmarshalMessageSupergroupChatCreate(data)

	case TypeMessageChatChangeTitle:
		return UnmarshalMessageChatChangeTitle(data)

	case TypeMessageChatChangePhoto:
		return UnmarshalMessageChatChangePhoto(data)

	case TypeMessageChatDeletePhoto:
		return UnmarshalMessageChatDeletePhoto(data)

	case TypeMessageChatAddMembers:
		return UnmarshalMessageChatAddMembers(data)

	case TypeMessageChatJoinByLink:
		return UnmarshalMessageChatJoinByLink(data)

	case TypeMessageChatDeleteMember:
		return UnmarshalMessageChatDeleteMember(data)

	case TypeMessageChatUpgradeTo:
		return UnmarshalMessageChatUpgradeTo(data)

	case TypeMessageChatUpgradeFrom:
		return UnmarshalMessageChatUpgradeFrom(data)

	case TypeMessagePinMessage:
		return UnmarshalMessagePinMessage(data)

	case TypeMessageScreenshotTaken:
		return UnmarshalMessageScreenshotTaken(data)

	case TypeMessageChatSetTTL:
		return UnmarshalMessageChatSetTTL(data)

	case TypeMessageCustomServiceAction:
		return UnmarshalMessageCustomServiceAction(data)

	case TypeMessageGameScore:
		return UnmarshalMessageGameScore(data)

	case TypeMessagePaymentSuccessful:
		return UnmarshalMessagePaymentSuccessful(data)

	case TypeMessagePaymentSuccessfulBot:
		return UnmarshalMessagePaymentSuccessfulBot(data)

	case TypeMessageContactRegistered:
		return UnmarshalMessageContactRegistered(data)

	case TypeMessageWebsiteConnected:
		return UnmarshalMessageWebsiteConnected(data)

	case TypeMessagePassportDataSent:
		return UnmarshalMessagePassportDataSent(data)

	case TypeMessagePassportDataReceived:
		return UnmarshalMessagePassportDataReceived(data)

	case TypeMessageUnsupported:
		return UnmarshalMessageUnsupported(data)

	case TypeTextEntityTypeMention:
		return UnmarshalTextEntityTypeMention(data)

	case TypeTextEntityTypeHashtag:
		return UnmarshalTextEntityTypeHashtag(data)

	case TypeTextEntityTypeCashtag:
		return UnmarshalTextEntityTypeCashtag(data)

	case TypeTextEntityTypeBotCommand:
		return UnmarshalTextEntityTypeBotCommand(data)

	case TypeTextEntityTypeURL:
		return UnmarshalTextEntityTypeURL(data)

	case TypeTextEntityTypeEmailAddress:
		return UnmarshalTextEntityTypeEmailAddress(data)

	case TypeTextEntityTypeBold:
		return UnmarshalTextEntityTypeBold(data)

	case TypeTextEntityTypeItalic:
		return UnmarshalTextEntityTypeItalic(data)

	case TypeTextEntityTypeCode:
		return UnmarshalTextEntityTypeCode(data)

	case TypeTextEntityTypePre:
		return UnmarshalTextEntityTypePre(data)

	case TypeTextEntityTypePreCode:
		return UnmarshalTextEntityTypePreCode(data)

	case TypeTextEntityTypeTextURL:
		return UnmarshalTextEntityTypeTextURL(data)

	case TypeTextEntityTypeMentionName:
		return UnmarshalTextEntityTypeMentionName(data)

	case TypeTextEntityTypePhoneNumber:
		return UnmarshalTextEntityTypePhoneNumber(data)

	case TypeInputThumbnail:
		return UnmarshalInputThumbnail(data)

	case TypeInputMessageText:
		return UnmarshalInputMessageText(data)

	case TypeInputMessageAnimation:
		return UnmarshalInputMessageAnimation(data)

	case TypeInputMessageAudio:
		return UnmarshalInputMessageAudio(data)

	case TypeInputMessageDocument:
		return UnmarshalInputMessageDocument(data)

	case TypeInputMessagePhoto:
		return UnmarshalInputMessagePhoto(data)

	case TypeInputMessageSticker:
		return UnmarshalInputMessageSticker(data)

	case TypeInputMessageVideo:
		return UnmarshalInputMessageVideo(data)

	case TypeInputMessageVideoNote:
		return UnmarshalInputMessageVideoNote(data)

	case TypeInputMessageVoiceNote:
		return UnmarshalInputMessageVoiceNote(data)

	case TypeInputMessageLocation:
		return UnmarshalInputMessageLocation(data)

	case TypeInputMessageVenue:
		return UnmarshalInputMessageVenue(data)

	case TypeInputMessageContact:
		return UnmarshalInputMessageContact(data)

	case TypeInputMessageGame:
		return UnmarshalInputMessageGame(data)

	case TypeInputMessageInvoice:
		return UnmarshalInputMessageInvoice(data)

	case TypeInputMessageForwarded:
		return UnmarshalInputMessageForwarded(data)

	case TypeSearchMessagesFilterEmpty:
		return UnmarshalSearchMessagesFilterEmpty(data)

	case TypeSearchMessagesFilterAnimation:
		return UnmarshalSearchMessagesFilterAnimation(data)

	case TypeSearchMessagesFilterAudio:
		return UnmarshalSearchMessagesFilterAudio(data)

	case TypeSearchMessagesFilterDocument:
		return UnmarshalSearchMessagesFilterDocument(data)

	case TypeSearchMessagesFilterPhoto:
		return UnmarshalSearchMessagesFilterPhoto(data)

	case TypeSearchMessagesFilterVideo:
		return UnmarshalSearchMessagesFilterVideo(data)

	case TypeSearchMessagesFilterVoiceNote:
		return UnmarshalSearchMessagesFilterVoiceNote(data)

	case TypeSearchMessagesFilterPhotoAndVideo:
		return UnmarshalSearchMessagesFilterPhotoAndVideo(data)

	case TypeSearchMessagesFilterURL:
		return UnmarshalSearchMessagesFilterURL(data)

	case TypeSearchMessagesFilterChatPhoto:
		return UnmarshalSearchMessagesFilterChatPhoto(data)

	case TypeSearchMessagesFilterCall:
		return UnmarshalSearchMessagesFilterCall(data)

	case TypeSearchMessagesFilterMissedCall:
		return UnmarshalSearchMessagesFilterMissedCall(data)

	case TypeSearchMessagesFilterVideoNote:
		return UnmarshalSearchMessagesFilterVideoNote(data)

	case TypeSearchMessagesFilterVoiceAndVideoNote:
		return UnmarshalSearchMessagesFilterVoiceAndVideoNote(data)

	case TypeSearchMessagesFilterMention:
		return UnmarshalSearchMessagesFilterMention(data)

	case TypeSearchMessagesFilterUnreadMention:
		return UnmarshalSearchMessagesFilterUnreadMention(data)

	case TypeChatActionTyping:
		return UnmarshalChatActionTyping(data)

	case TypeChatActionRecordingVideo:
		return UnmarshalChatActionRecordingVideo(data)

	case TypeChatActionUploadingVideo:
		return UnmarshalChatActionUploadingVideo(data)

	case TypeChatActionRecordingVoiceNote:
		return UnmarshalChatActionRecordingVoiceNote(data)

	case TypeChatActionUploadingVoiceNote:
		return UnmarshalChatActionUploadingVoiceNote(data)

	case TypeChatActionUploadingPhoto:
		return UnmarshalChatActionUploadingPhoto(data)

	case TypeChatActionUploadingDocument:
		return UnmarshalChatActionUploadingDocument(data)

	case TypeChatActionChoosingLocation:
		return UnmarshalChatActionChoosingLocation(data)

	case TypeChatActionChoosingContact:
		return UnmarshalChatActionChoosingContact(data)

	case TypeChatActionStartPlayingGame:
		return UnmarshalChatActionStartPlayingGame(data)

	case TypeChatActionRecordingVideoNote:
		return UnmarshalChatActionRecordingVideoNote(data)

	case TypeChatActionUploadingVideoNote:
		return UnmarshalChatActionUploadingVideoNote(data)

	case TypeChatActionCancel:
		return UnmarshalChatActionCancel(data)

	case TypeUserStatusEmpty:
		return UnmarshalUserStatusEmpty(data)

	case TypeUserStatusOnline:
		return UnmarshalUserStatusOnline(data)

	case TypeUserStatusOffline:
		return UnmarshalUserStatusOffline(data)

	case TypeUserStatusRecently:
		return UnmarshalUserStatusRecently(data)

	case TypeUserStatusLastWeek:
		return UnmarshalUserStatusLastWeek(data)

	case TypeUserStatusLastMonth:
		return UnmarshalUserStatusLastMonth(data)

	case TypeStickers:
		return UnmarshalStickers(data)

	case TypeStickerEmojis:
		return UnmarshalStickerEmojis(data)

	case TypeStickerSet:
		return UnmarshalStickerSet(data)

	case TypeStickerSetInfo:
		return UnmarshalStickerSetInfo(data)

	case TypeStickerSets:
		return UnmarshalStickerSets(data)

	case TypeCallDiscardReasonEmpty:
		return UnmarshalCallDiscardReasonEmpty(data)

	case TypeCallDiscardReasonMissed:
		return UnmarshalCallDiscardReasonMissed(data)

	case TypeCallDiscardReasonDeclined:
		return UnmarshalCallDiscardReasonDeclined(data)

	case TypeCallDiscardReasonDisconnected:
		return UnmarshalCallDiscardReasonDisconnected(data)

	case TypeCallDiscardReasonHungUp:
		return UnmarshalCallDiscardReasonHungUp(data)

	case TypeCallProtocol:
		return UnmarshalCallProtocol(data)

	case TypeCallConnection:
		return UnmarshalCallConnection(data)

	case TypeCallID:
		return UnmarshalCallID(data)

	case TypeCallStatePending:
		return UnmarshalCallStatePending(data)

	case TypeCallStateExchangingKeys:
		return UnmarshalCallStateExchangingKeys(data)

	case TypeCallStateReady:
		return UnmarshalCallStateReady(data)

	case TypeCallStateHangingUp:
		return UnmarshalCallStateHangingUp(data)

	case TypeCallStateDiscarded:
		return UnmarshalCallStateDiscarded(data)

	case TypeCallStateError:
		return UnmarshalCallStateError(data)

	case TypeCall:
		return UnmarshalCall(data)

	case TypeAnimations:
		return UnmarshalAnimations(data)

	case TypeImportedContacts:
		return UnmarshalImportedContacts(data)

	case TypeInputInlineQueryResultAnimatedGif:
		return UnmarshalInputInlineQueryResultAnimatedGif(data)

	case TypeInputInlineQueryResultAnimatedMpeg4:
		return UnmarshalInputInlineQueryResultAnimatedMpeg4(data)

	case TypeInputInlineQueryResultArticle:
		return UnmarshalInputInlineQueryResultArticle(data)

	case TypeInputInlineQueryResultAudio:
		return UnmarshalInputInlineQueryResultAudio(data)

	case TypeInputInlineQueryResultContact:
		return UnmarshalInputInlineQueryResultContact(data)

	case TypeInputInlineQueryResultDocument:
		return UnmarshalInputInlineQueryResultDocument(data)

	case TypeInputInlineQueryResultGame:
		return UnmarshalInputInlineQueryResultGame(data)

	case TypeInputInlineQueryResultLocation:
		return UnmarshalInputInlineQueryResultLocation(data)

	case TypeInputInlineQueryResultPhoto:
		return UnmarshalInputInlineQueryResultPhoto(data)

	case TypeInputInlineQueryResultSticker:
		return UnmarshalInputInlineQueryResultSticker(data)

	case TypeInputInlineQueryResultVenue:
		return UnmarshalInputInlineQueryResultVenue(data)

	case TypeInputInlineQueryResultVideo:
		return UnmarshalInputInlineQueryResultVideo(data)

	case TypeInputInlineQueryResultVoiceNote:
		return UnmarshalInputInlineQueryResultVoiceNote(data)

	case TypeInlineQueryResultArticle:
		return UnmarshalInlineQueryResultArticle(data)

	case TypeInlineQueryResultContact:
		return UnmarshalInlineQueryResultContact(data)

	case TypeInlineQueryResultLocation:
		return UnmarshalInlineQueryResultLocation(data)

	case TypeInlineQueryResultVenue:
		return UnmarshalInlineQueryResultVenue(data)

	case TypeInlineQueryResultGame:
		return UnmarshalInlineQueryResultGame(data)

	case TypeInlineQueryResultAnimation:
		return UnmarshalInlineQueryResultAnimation(data)

	case TypeInlineQueryResultAudio:
		return UnmarshalInlineQueryResultAudio(data)

	case TypeInlineQueryResultDocument:
		return UnmarshalInlineQueryResultDocument(data)

	case TypeInlineQueryResultPhoto:
		return UnmarshalInlineQueryResultPhoto(data)

	case TypeInlineQueryResultSticker:
		return UnmarshalInlineQueryResultSticker(data)

	case TypeInlineQueryResultVideo:
		return UnmarshalInlineQueryResultVideo(data)

	case TypeInlineQueryResultVoiceNote:
		return UnmarshalInlineQueryResultVoiceNote(data)

	case TypeInlineQueryResults:
		return UnmarshalInlineQueryResults(data)

	case TypeCallbackQueryPayloadData:
		return UnmarshalCallbackQueryPayloadData(data)

	case TypeCallbackQueryPayloadGame:
		return UnmarshalCallbackQueryPayloadGame(data)

	case TypeCallbackQueryAnswer:
		return UnmarshalCallbackQueryAnswer(data)

	case TypeCustomRequestResult:
		return UnmarshalCustomRequestResult(data)

	case TypeGameHighScore:
		return UnmarshalGameHighScore(data)

	case TypeGameHighScores:
		return UnmarshalGameHighScores(data)

	case TypeChatEventMessageEdited:
		return UnmarshalChatEventMessageEdited(data)

	case TypeChatEventMessageDeleted:
		return UnmarshalChatEventMessageDeleted(data)

	case TypeChatEventMessagePinned:
		return UnmarshalChatEventMessagePinned(data)

	case TypeChatEventMessageUnpinned:
		return UnmarshalChatEventMessageUnpinned(data)

	case TypeChatEventMemberJoined:
		return UnmarshalChatEventMemberJoined(data)

	case TypeChatEventMemberLeft:
		return UnmarshalChatEventMemberLeft(data)

	case TypeChatEventMemberInvited:
		return UnmarshalChatEventMemberInvited(data)

	case TypeChatEventMemberPromoted:
		return UnmarshalChatEventMemberPromoted(data)

	case TypeChatEventMemberRestricted:
		return UnmarshalChatEventMemberRestricted(data)

	case TypeChatEventTitleChanged:
		return UnmarshalChatEventTitleChanged(data)

	case TypeChatEventDescriptionChanged:
		return UnmarshalChatEventDescriptionChanged(data)

	case TypeChatEventUsernameChanged:
		return UnmarshalChatEventUsernameChanged(data)

	case TypeChatEventPhotoChanged:
		return UnmarshalChatEventPhotoChanged(data)

	case TypeChatEventInvitesToggled:
		return UnmarshalChatEventInvitesToggled(data)

	case TypeChatEventSignMessagesToggled:
		return UnmarshalChatEventSignMessagesToggled(data)

	case TypeChatEventStickerSetChanged:
		return UnmarshalChatEventStickerSetChanged(data)

	case TypeChatEventIsAllHistoryAvailableToggled:
		return UnmarshalChatEventIsAllHistoryAvailableToggled(data)

	case TypeChatEvent:
		return UnmarshalChatEvent(data)

	case TypeChatEvents:
		return UnmarshalChatEvents(data)

	case TypeChatEventLogFilters:
		return UnmarshalChatEventLogFilters(data)

	case TypeLanguagePackStringValueOrdinary:
		return UnmarshalLanguagePackStringValueOrdinary(data)

	case TypeLanguagePackStringValuePluralized:
		return UnmarshalLanguagePackStringValuePluralized(data)

	case TypeLanguagePackStringValueDeleted:
		return UnmarshalLanguagePackStringValueDeleted(data)

	case TypeLanguagePackString:
		return UnmarshalLanguagePackString(data)

	case TypeLanguagePackStrings:
		return UnmarshalLanguagePackStrings(data)

	case TypeLanguagePackInfo:
		return UnmarshalLanguagePackInfo(data)

	case TypeLocalizationTargetInfo:
		return UnmarshalLocalizationTargetInfo(data)

	case TypeDeviceTokenGoogleCloudMessaging:
		return UnmarshalDeviceTokenGoogleCloudMessaging(data)

	case TypeDeviceTokenApplePush:
		return UnmarshalDeviceTokenApplePush(data)

	case TypeDeviceTokenApplePushVoIP:
		return UnmarshalDeviceTokenApplePushVoIP(data)

	case TypeDeviceTokenWindowsPush:
		return UnmarshalDeviceTokenWindowsPush(data)

	case TypeDeviceTokenMicrosoftPush:
		return UnmarshalDeviceTokenMicrosoftPush(data)

	case TypeDeviceTokenMicrosoftPushVoIP:
		return UnmarshalDeviceTokenMicrosoftPushVoIP(data)

	case TypeDeviceTokenWebPush:
		return UnmarshalDeviceTokenWebPush(data)

	case TypeDeviceTokenSimplePush:
		return UnmarshalDeviceTokenSimplePush(data)

	case TypeDeviceTokenUbuntuPush:
		return UnmarshalDeviceTokenUbuntuPush(data)

	case TypeDeviceTokenBlackBerryPush:
		return UnmarshalDeviceTokenBlackBerryPush(data)

	case TypeDeviceTokenTizenPush:
		return UnmarshalDeviceTokenTizenPush(data)

	case TypeWallpaper:
		return UnmarshalWallpaper(data)

	case TypeWallpapers:
		return UnmarshalWallpapers(data)

	case TypeHashtags:
		return UnmarshalHashtags(data)

	case TypeCheckChatUsernameResultOk:
		return UnmarshalCheckChatUsernameResultOk(data)

	case TypeCheckChatUsernameResultUsernameInvalid:
		return UnmarshalCheckChatUsernameResultUsernameInvalid(data)

	case TypeCheckChatUsernameResultUsernameOccupied:
		return UnmarshalCheckChatUsernameResultUsernameOccupied(data)

	case TypeCheckChatUsernameResultPublicChatsTooMuch:
		return UnmarshalCheckChatUsernameResultPublicChatsTooMuch(data)

	case TypeCheckChatUsernameResultPublicGroupsUnavailable:
		return UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data)

	case TypeOptionValueBoolean:
		return UnmarshalOptionValueBoolean(data)

	case TypeOptionValueEmpty:
		return UnmarshalOptionValueEmpty(data)

	case TypeOptionValueInteger:
		return UnmarshalOptionValueInteger(data)

	case TypeOptionValueString:
		return UnmarshalOptionValueString(data)

	case TypeUserPrivacySettingRuleAllowAll:
		return UnmarshalUserPrivacySettingRuleAllowAll(data)

	case TypeUserPrivacySettingRuleAllowContacts:
		return UnmarshalUserPrivacySettingRuleAllowContacts(data)

	case TypeUserPrivacySettingRuleAllowUsers:
		return UnmarshalUserPrivacySettingRuleAllowUsers(data)

	case TypeUserPrivacySettingRuleRestrictAll:
		return UnmarshalUserPrivacySettingRuleRestrictAll(data)

	case TypeUserPrivacySettingRuleRestrictContacts:
		return UnmarshalUserPrivacySettingRuleRestrictContacts(data)

	case TypeUserPrivacySettingRuleRestrictUsers:
		return UnmarshalUserPrivacySettingRuleRestrictUsers(data)

	case TypeUserPrivacySettingRules:
		return UnmarshalUserPrivacySettingRules(data)

	case TypeUserPrivacySettingShowStatus:
		return UnmarshalUserPrivacySettingShowStatus(data)

	case TypeUserPrivacySettingAllowChatInvites:
		return UnmarshalUserPrivacySettingAllowChatInvites(data)

	case TypeUserPrivacySettingAllowCalls:
		return UnmarshalUserPrivacySettingAllowCalls(data)

	case TypeAccountTTL:
		return UnmarshalAccountTTL(data)

	case TypeSession:
		return UnmarshalSession(data)

	case TypeSessions:
		return UnmarshalSessions(data)

	case TypeConnectedWebsite:
		return UnmarshalConnectedWebsite(data)

	case TypeConnectedWebsites:
		return UnmarshalConnectedWebsites(data)

	case TypeChatReportSpamState:
		return UnmarshalChatReportSpamState(data)

	case TypeChatReportReasonSpam:
		return UnmarshalChatReportReasonSpam(data)

	case TypeChatReportReasonViolence:
		return UnmarshalChatReportReasonViolence(data)

	case TypeChatReportReasonPornography:
		return UnmarshalChatReportReasonPornography(data)

	case TypeChatReportReasonCopyright:
		return UnmarshalChatReportReasonCopyright(data)

	case TypeChatReportReasonCustom:
		return UnmarshalChatReportReasonCustom(data)

	case TypePublicMessageLink:
		return UnmarshalPublicMessageLink(data)

	case TypeFileTypeNone:
		return UnmarshalFileTypeNone(data)

	case TypeFileTypeAnimation:
		return UnmarshalFileTypeAnimation(data)

	case TypeFileTypeAudio:
		return UnmarshalFileTypeAudio(data)

	case TypeFileTypeDocument:
		return UnmarshalFileTypeDocument(data)

	case TypeFileTypePhoto:
		return UnmarshalFileTypePhoto(data)

	case TypeFileTypeProfilePhoto:
		return UnmarshalFileTypeProfilePhoto(data)

	case TypeFileTypeSecret:
		return UnmarshalFileTypeSecret(data)

	case TypeFileTypeSecretThumbnail:
		return UnmarshalFileTypeSecretThumbnail(data)

	case TypeFileTypeSecure:
		return UnmarshalFileTypeSecure(data)

	case TypeFileTypeSticker:
		return UnmarshalFileTypeSticker(data)

	case TypeFileTypeThumbnail:
		return UnmarshalFileTypeThumbnail(data)

	case TypeFileTypeUnknown:
		return UnmarshalFileTypeUnknown(data)

	case TypeFileTypeVideo:
		return UnmarshalFileTypeVideo(data)

	case TypeFileTypeVideoNote:
		return UnmarshalFileTypeVideoNote(data)

	case TypeFileTypeVoiceNote:
		return UnmarshalFileTypeVoiceNote(data)

	case TypeFileTypeWallpaper:
		return UnmarshalFileTypeWallpaper(data)

	case TypeStorageStatisticsByFileType:
		return UnmarshalStorageStatisticsByFileType(data)

	case TypeStorageStatisticsByChat:
		return UnmarshalStorageStatisticsByChat(data)

	case TypeStorageStatistics:
		return UnmarshalStorageStatistics(data)

	case TypeStorageStatisticsFast:
		return UnmarshalStorageStatisticsFast(data)

	case TypeNetworkTypeNone:
		return UnmarshalNetworkTypeNone(data)

	case TypeNetworkTypeMobile:
		return UnmarshalNetworkTypeMobile(data)

	case TypeNetworkTypeMobileRoaming:
		return UnmarshalNetworkTypeMobileRoaming(data)

	case TypeNetworkTypeWiFi:
		return UnmarshalNetworkTypeWiFi(data)

	case TypeNetworkTypeOther:
		return UnmarshalNetworkTypeOther(data)

	case TypeNetworkStatisticsEntryFile:
		return UnmarshalNetworkStatisticsEntryFile(data)

	case TypeNetworkStatisticsEntryCall:
		return UnmarshalNetworkStatisticsEntryCall(data)

	case TypeNetworkStatistics:
		return UnmarshalNetworkStatistics(data)

	case TypeConnectionStateWaitingForNetwork:
		return UnmarshalConnectionStateWaitingForNetwork(data)

	case TypeConnectionStateConnectingToProxy:
		return UnmarshalConnectionStateConnectingToProxy(data)

	case TypeConnectionStateConnecting:
		return UnmarshalConnectionStateConnecting(data)

	case TypeConnectionStateUpdating:
		return UnmarshalConnectionStateUpdating(data)

	case TypeConnectionStateReady:
		return UnmarshalConnectionStateReady(data)

	case TypeTopChatCategoryUsers:
		return UnmarshalTopChatCategoryUsers(data)

	case TypeTopChatCategoryBots:
		return UnmarshalTopChatCategoryBots(data)

	case TypeTopChatCategoryGroups:
		return UnmarshalTopChatCategoryGroups(data)

	case TypeTopChatCategoryChannels:
		return UnmarshalTopChatCategoryChannels(data)

	case TypeTopChatCategoryInlineBots:
		return UnmarshalTopChatCategoryInlineBots(data)

	case TypeTopChatCategoryCalls:
		return UnmarshalTopChatCategoryCalls(data)

	case TypeTMeURLTypeUser:
		return UnmarshalTMeURLTypeUser(data)

	case TypeTMeURLTypeSupergroup:
		return UnmarshalTMeURLTypeSupergroup(data)

	case TypeTMeURLTypeChatInvite:
		return UnmarshalTMeURLTypeChatInvite(data)

	case TypeTMeURLTypeStickerSet:
		return UnmarshalTMeURLTypeStickerSet(data)

	case TypeTMeURL:
		return UnmarshalTMeURL(data)

	case TypeTMeURLs:
		return UnmarshalTMeURLs(data)

	case TypeCount:
		return UnmarshalCount(data)

	case TypeText:
		return UnmarshalText(data)

	case TypeSeconds:
		return UnmarshalSeconds(data)

	case TypeDeepLinkInfo:
		return UnmarshalDeepLinkInfo(data)

	case TypeTextParseModeMarkdown:
		return UnmarshalTextParseModeMarkdown(data)

	case TypeTextParseModeHTML:
		return UnmarshalTextParseModeHTML(data)

	case TypeProxyTypeSocks5:
		return UnmarshalProxyTypeSocks5(data)

	case TypeProxyTypeHTTP:
		return UnmarshalProxyTypeHTTP(data)

	case TypeProxyTypeMtproto:
		return UnmarshalProxyTypeMtproto(data)

	case TypeProxy:
		return UnmarshalProxy(data)

	case TypeProxies:
		return UnmarshalProxies(data)

	case TypeInputSticker:
		return UnmarshalInputSticker(data)

	case TypeUpdateAuthorizationState:
		return UnmarshalUpdateAuthorizationState(data)

	case TypeUpdateNewMessage:
		return UnmarshalUpdateNewMessage(data)

	case TypeUpdateMessageSendAcknowledged:
		return UnmarshalUpdateMessageSendAcknowledged(data)

	case TypeUpdateMessageSendSucceeded:
		return UnmarshalUpdateMessageSendSucceeded(data)

	case TypeUpdateMessageSendFailed:
		return UnmarshalUpdateMessageSendFailed(data)

	case TypeUpdateMessageContent:
		return UnmarshalUpdateMessageContent(data)

	case TypeUpdateMessageEdited:
		return UnmarshalUpdateMessageEdited(data)

	case TypeUpdateMessageViews:
		return UnmarshalUpdateMessageViews(data)

	case TypeUpdateMessageContentOpened:
		return UnmarshalUpdateMessageContentOpened(data)

	case TypeUpdateMessageMentionRead:
		return UnmarshalUpdateMessageMentionRead(data)

	case TypeUpdateNewChat:
		return UnmarshalUpdateNewChat(data)

	case TypeUpdateChatTitle:
		return UnmarshalUpdateChatTitle(data)

	case TypeUpdateChatPhoto:
		return UnmarshalUpdateChatPhoto(data)

	case TypeUpdateChatLastMessage:
		return UnmarshalUpdateChatLastMessage(data)

	case TypeUpdateChatOrder:
		return UnmarshalUpdateChatOrder(data)

	case TypeUpdateChatIsPinned:
		return UnmarshalUpdateChatIsPinned(data)

	case TypeUpdateChatIsMarkedAsUnread:
		return UnmarshalUpdateChatIsMarkedAsUnread(data)

	case TypeUpdateChatIsSponsored:
		return UnmarshalUpdateChatIsSponsored(data)

	case TypeUpdateChatDefaultDisableNotification:
		return UnmarshalUpdateChatDefaultDisableNotification(data)

	case TypeUpdateChatReadInbox:
		return UnmarshalUpdateChatReadInbox(data)

	case TypeUpdateChatReadOutbox:
		return UnmarshalUpdateChatReadOutbox(data)

	case TypeUpdateChatUnreadMentionCount:
		return UnmarshalUpdateChatUnreadMentionCount(data)

	case TypeUpdateChatNotificationSettings:
		return UnmarshalUpdateChatNotificationSettings(data)

	case TypeUpdateScopeNotificationSettings:
		return UnmarshalUpdateScopeNotificationSettings(data)

	case TypeUpdateChatReplyMarkup:
		return UnmarshalUpdateChatReplyMarkup(data)

	case TypeUpdateChatDraftMessage:
		return UnmarshalUpdateChatDraftMessage(data)

	case TypeUpdateDeleteMessages:
		return UnmarshalUpdateDeleteMessages(data)

	case TypeUpdateUserChatAction:
		return UnmarshalUpdateUserChatAction(data)

	case TypeUpdateUserStatus:
		return UnmarshalUpdateUserStatus(data)

	case TypeUpdateUser:
		return UnmarshalUpdateUser(data)

	case TypeUpdateBasicGroup:
		return UnmarshalUpdateBasicGroup(data)

	case TypeUpdateSupergroup:
		return UnmarshalUpdateSupergroup(data)

	case TypeUpdateSecretChat:
		return UnmarshalUpdateSecretChat(data)

	case TypeUpdateUserFullInfo:
		return UnmarshalUpdateUserFullInfo(data)

	case TypeUpdateBasicGroupFullInfo:
		return UnmarshalUpdateBasicGroupFullInfo(data)

	case TypeUpdateSupergroupFullInfo:
		return UnmarshalUpdateSupergroupFullInfo(data)

	case TypeUpdateServiceNotification:
		return UnmarshalUpdateServiceNotification(data)

	case TypeUpdateFile:
		return UnmarshalUpdateFile(data)

	case TypeUpdateFileGenerationStart:
		return UnmarshalUpdateFileGenerationStart(data)

	case TypeUpdateFileGenerationStop:
		return UnmarshalUpdateFileGenerationStop(data)

	case TypeUpdateCall:
		return UnmarshalUpdateCall(data)

	case TypeUpdateUserPrivacySettingRules:
		return UnmarshalUpdateUserPrivacySettingRules(data)

	case TypeUpdateUnreadMessageCount:
		return UnmarshalUpdateUnreadMessageCount(data)

	case TypeUpdateUnreadChatCount:
		return UnmarshalUpdateUnreadChatCount(data)

	case TypeUpdateOption:
		return UnmarshalUpdateOption(data)

	case TypeUpdateInstalledStickerSets:
		return UnmarshalUpdateInstalledStickerSets(data)

	case TypeUpdateTrendingStickerSets:
		return UnmarshalUpdateTrendingStickerSets(data)

	case TypeUpdateRecentStickers:
		return UnmarshalUpdateRecentStickers(data)

	case TypeUpdateFavoriteStickers:
		return UnmarshalUpdateFavoriteStickers(data)

	case TypeUpdateSavedAnimations:
		return UnmarshalUpdateSavedAnimations(data)

	case TypeUpdateLanguagePackStrings:
		return UnmarshalUpdateLanguagePackStrings(data)

	case TypeUpdateConnectionState:
		return UnmarshalUpdateConnectionState(data)

	case TypeUpdateTermsOfService:
		return UnmarshalUpdateTermsOfService(data)

	case TypeUpdateNewInlineQuery:
		return UnmarshalUpdateNewInlineQuery(data)

	case TypeUpdateNewChosenInlineResult:
		return UnmarshalUpdateNewChosenInlineResult(data)

	case TypeUpdateNewCallbackQuery:
		return UnmarshalUpdateNewCallbackQuery(data)

	case TypeUpdateNewInlineCallbackQuery:
		return UnmarshalUpdateNewInlineCallbackQuery(data)

	case TypeUpdateNewShippingQuery:
		return UnmarshalUpdateNewShippingQuery(data)

	case TypeUpdateNewPreCheckoutQuery:
		return UnmarshalUpdateNewPreCheckoutQuery(data)

	case TypeUpdateNewCustomEvent:
		return UnmarshalUpdateNewCustomEvent(data)

	case TypeUpdateNewCustomQuery:
		return UnmarshalUpdateNewCustomQuery(data)

	case TypeTestInt:
		return UnmarshalTestInt(data)

	case TypeTestString:
		return UnmarshalTestString(data)

	case TypeTestBytes:
		return UnmarshalTestBytes(data)

	case TypeTestVectorInt:
		return UnmarshalTestVectorInt(data)

	case TypeTestVectorIntObject:
		return UnmarshalTestVectorIntObject(data)

	case TypeTestVectorString:
		return UnmarshalTestVectorString(data)

	case TypeTestVectorStringObject:
		return UnmarshalTestVectorStringObject(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.Type)
	}
}
